fof('EQ-var', axiom, (![VVar0,VVar1] : (((vvar(VVar0)=vvar(VVar1)) => (VVar0=VVar1)) & ((VVar0=VVar1) => (vvar(VVar0)=vvar(VVar1)))))).
fof('EQ-abs', axiom, (![VVar0,VTyp0,VExp0,VVar1,VTyp1,VExp1] : (((vabs(VVar0,VTyp0,VExp0)=vabs(VVar1,VTyp1,VExp1)) => ((VVar0=VVar1) & ((VTyp0=VTyp1) & (VExp0=VExp1)))) & (((VVar0=VVar1) & ((VTyp0=VTyp1) & (VExp0=VExp1))) => (vabs(VVar0,VTyp0,VExp0)=vabs(VVar1,VTyp1,VExp1)))))).
fof('EQ-app', axiom, (![VExp0,VExp1,VExp2,VExp3] : (((vapp(VExp0,VExp1)=vapp(VExp2,VExp3)) => ((VExp0=VExp2) & (VExp1=VExp3))) & (((VExp0=VExp2) & (VExp1=VExp3)) => (vapp(VExp0,VExp1)=vapp(VExp2,VExp3)))))).
fof('EQ-inl', axiom, (![VExp0,VTyp0,VExp1,VTyp1] : (((vinl(VExp0,VTyp0)=vinl(VExp1,VTyp1)) => ((VExp0=VExp1) & (VTyp0=VTyp1))) & (((VExp0=VExp1) & (VTyp0=VTyp1)) => (vinl(VExp0,VTyp0)=vinl(VExp1,VTyp1)))))).
fof('EQ-inr', axiom, (![VExp0,VTyp0,VExp1,VTyp1] : (((vinr(VExp0,VTyp0)=vinr(VExp1,VTyp1)) => ((VExp0=VExp1) & (VTyp0=VTyp1))) & (((VExp0=VExp1) & (VTyp0=VTyp1)) => (vinr(VExp0,VTyp0)=vinr(VExp1,VTyp1)))))).
fof('EQ-case', axiom, (![VExp0,VVar0,VExp1,VVar1,VExp2,VExp3,VVar2,VExp4,VVar3,VExp5] : (((vcase(VExp0,VVar0,VExp1,VVar1,VExp2)=vcase(VExp3,VVar2,VExp4,VVar3,VExp5)) => ((VExp0=VExp3) & ((VVar0=VVar2) & ((VExp1=VExp4) & ((VVar1=VVar3) & (VExp2=VExp5)))))) & (((VExp0=VExp3) & ((VVar0=VVar2) & ((VExp1=VExp4) & ((VVar1=VVar3) & (VExp2=VExp5))))) => (vcase(VExp0,VVar0,VExp1,VVar1,VExp2)=vcase(VExp3,VVar2,VExp4,VVar3,VExp5)))))).
fof('DIFF-var-abs', axiom, (![VVar0,VVar1,VTyp0,VExp0] : (vvar(VVar0)!=vabs(VVar1,VTyp0,VExp0)))).
fof('DIFF-var-app', axiom, (![VVar0,VExp0,VExp1] : (vvar(VVar0)!=vapp(VExp0,VExp1)))).
fof('DIFF-abs-app', axiom, (![VVar0,VTyp0,VExp0,VExp1,VExp2] : (vabs(VVar0,VTyp0,VExp0)!=vapp(VExp1,VExp2)))).
fof('DIFF-var-inl', axiom, (![VVar0,VExp0,VTyp0] : (vvar(VVar0)!=vinl(VExp0,VTyp0)))).
fof('DIFF-abs-inl', axiom, (![VVar0,VTyp0,VExp0,VExp1,VTyp1] : (vabs(VVar0,VTyp0,VExp0)!=vinl(VExp1,VTyp1)))).
fof('DIFF-app-inl', axiom, (![VExp0,VExp1,VExp2,VTyp0] : (vapp(VExp0,VExp1)!=vinl(VExp2,VTyp0)))).
fof('DIFF-var-inr', axiom, (![VVar0,VExp0,VTyp0] : (vvar(VVar0)!=vinr(VExp0,VTyp0)))).
fof('DIFF-abs-inr', axiom, (![VVar0,VTyp0,VExp0,VExp1,VTyp1] : (vabs(VVar0,VTyp0,VExp0)!=vinr(VExp1,VTyp1)))).
fof('DIFF-app-inr', axiom, (![VExp0,VExp1,VExp2,VTyp0] : (vapp(VExp0,VExp1)!=vinr(VExp2,VTyp0)))).
fof('DIFF-inl-inr', axiom, (![VExp0,VTyp0,VExp1,VTyp1] : (vinl(VExp0,VTyp0)!=vinr(VExp1,VTyp1)))).
fof('DIFF-var-case', axiom, (![VVar0,VExp0,VVar1,VExp1,VVar2,VExp2] : (vvar(VVar0)!=vcase(VExp0,VVar1,VExp1,VVar2,VExp2)))).
fof('DIFF-abs-case', axiom, (![VVar0,VTyp0,VExp0,VExp1,VVar1,VExp2,VVar2,VExp3] : (vabs(VVar0,VTyp0,VExp0)!=vcase(VExp1,VVar1,VExp2,VVar2,VExp3)))).
fof('DIFF-app-case', axiom, (![VExp0,VExp1,VExp2,VVar0,VExp3,VVar1,VExp4] : (vapp(VExp0,VExp1)!=vcase(VExp2,VVar0,VExp3,VVar1,VExp4)))).
fof('DIFF-inl-case', axiom, (![VExp0,VTyp0,VExp1,VVar0,VExp2,VVar1,VExp3] : (vinl(VExp0,VTyp0)!=vcase(VExp1,VVar0,VExp2,VVar1,VExp3)))).
fof('DIFF-inr-case', axiom, (![VExp0,VTyp0,VExp1,VVar0,VExp2,VVar1,VExp3] : (vinr(VExp0,VTyp0)!=vcase(VExp1,VVar0,VExp2,VVar1,VExp3)))).
fof('isValue0', axiom, (![Vx,VS,Ve,VExp0] : ((VExp0=vabs(Vx,VS,Ve)) => visValue(VExp0)))).
fof('isValue1', axiom, (![Vx,VExp0] : ((VExp0=vvar(Vx)) => (~visValue(VExp0))))).
fof('isValue2', axiom, (![Ve1,Ve2,VExp0] : ((VExp0=vapp(Ve1,Ve2)) => (~visValue(VExp0))))).
fof('isValue3', axiom, (![VT,VExp0,Ve] : ((VExp0=vinl(Ve,VT)) => ((visValue(Ve) => visValue(VExp0)) & (visValue(VExp0) => visValue(Ve)))))).
fof('isValue4', axiom, (![VT,VExp0,Ve] : ((VExp0=vinr(Ve,VT)) => ((visValue(Ve) => visValue(VExp0)) & (visValue(VExp0) => visValue(Ve)))))).
fof('isValue5', axiom, (![Ve,Vx1,Ve1,Vx2,Ve2,VExp0] : ((VExp0=vcase(Ve,Vx1,Ve1,Vx2,Ve2)) => (~visValue(VExp0))))).
fof('isFreeVar0', axiom, (![VVar0,VExp0,Vx,Vv] : (((VVar0=Vv) & (VExp0=vvar(Vx))) => (((Vx=Vv) => visFreeVar(VVar0,VExp0)) & (visFreeVar(VVar0,VExp0) => (Vx=Vv)))))).
fof('isFreeVar1', axiom, (![VT,VVar0,VExp0,Vx,Vv,Ve] : (((VVar0=Vv) & (VExp0=vabs(Vx,VT,Ve))) => ((((Vx!=Vv) & visFreeVar(Vv,Ve)) => visFreeVar(VVar0,VExp0)) & (visFreeVar(VVar0,VExp0) => ((Vx!=Vv) & visFreeVar(Vv,Ve))))))).
fof('isFreeVar2', axiom, (![VVar0,VExp0,Ve1,Vv,Ve2] : (((VVar0=Vv) & (VExp0=vapp(Ve1,Ve2))) => (((visFreeVar(Vv,Ve1) | visFreeVar(Vv,Ve2)) => visFreeVar(VVar0,VExp0)) & (visFreeVar(VVar0,VExp0) => (visFreeVar(Vv,Ve1) | visFreeVar(Vv,Ve2))))))).
fof('isFreeVar3', axiom, (![VT,VVar0,VExp0,Vv,Ve] : (((VVar0=Vv) & (VExp0=vinl(Ve,VT))) => ((visFreeVar(Vv,Ve) => visFreeVar(VVar0,VExp0)) & (visFreeVar(VVar0,VExp0) => visFreeVar(Vv,Ve)))))).
fof('isFreeVar4', axiom, (![VT,VVar0,VExp0,Vv,Ve] : (((VVar0=Vv) & (VExp0=vinr(Ve,VT))) => ((visFreeVar(Vv,Ve) => visFreeVar(VVar0,VExp0)) & (visFreeVar(VVar0,VExp0) => visFreeVar(Vv,Ve)))))).
fof('isFreeVar5', axiom, (![VVar0,VExp0,Ve,Vx1,Ve1,Vx2,Vv,Ve2] : (((VVar0=Vv) & (VExp0=vcase(Ve,Vx1,Ve1,Vx2,Ve2))) => (((visFreeVar(Vv,Ve) | (((Vv!=Vx1) & visFreeVar(Vv,Ve1)) | ((Vv!=Vx2) & visFreeVar(Vv,Ve2)))) => visFreeVar(VVar0,VExp0)) & (visFreeVar(VVar0,VExp0) => (visFreeVar(Vv,Ve) | (((Vv!=Vx1) & visFreeVar(Vv,Ve1)) | ((Vv!=Vx2) & visFreeVar(Vv,Ve2))))))))).
fof('FALSE', conjecture, $false).