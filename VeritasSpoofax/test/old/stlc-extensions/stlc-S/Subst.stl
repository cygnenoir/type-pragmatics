module stlcS.Subst

import stlcS.Syntax
import stlcS.Context
import stlcS.Gensym

function
subst : Var Exp Exp -> Exp
subst(x, e, var(y)) =
	if x == y
	then e
	else var(y)
subst(x, e, app(e1, e2)) = app(subst(x, e, e1), subst(x, e, e2))
subst(x, e, abs(y, T, e1)) =
	if x == y
	then abs(y, T, e1)
	else if isFreeVar(y, e)
	     then let fresh = gensym(app(app(e, e1), var(x)))
	          in subst(x, e, abs(fresh, T, subst(y, var(fresh), e1))) 
	     else abs(y, T, subst(x, e, e1))
subst(x, e, inl(e1, T)) = inl(subst(x, e, e1), T)
subst(x, e, inr(e1, T)) = inr(subst(x, e, e1), T)
subst(x, e, case(e1, x1, t1, x2, t2)) = let fresh1 = gensym(app(app(e, t1), var(x))) in
                                        let fresh2 = gensym(app(app(e, t2), var(x))) in
	if x == x1
	then if x == x2
	     then case(subst(x, e, e1), x1, t1, x2, t2)
	     else if isFreeVar(x2, e)
	          then case(subst(x, e, e1), x1, t1, fresh2, subst(x, e, subst(x2, var(fresh2), t2)))
	          else case(subst(x, e, e1), x1, t1, x2, subst(x, e, t2))
	else if x == x2
	     then if isFreeVar(x1, e)
	          then case(subst(x, e, e1), fresh1, subst(x, e, subst(x1, var(fresh1), t1)), x2, t2)
	          else case(subst(x, e, e1), x1, subst(x, e, t1), x2, t2)
	     else if isFreeVar(x1, e)
	          then if isFreeVar(x2, e)
	               then case(subst(x, e, e1), fresh1, subst(x, e, (subst(x1, var(fresh1), t1))), fresh2, subst(x, e, subst(x2, var(fresh2), t2)))
	               else case(subst(x, e, e1), fresh1, subst(x, e, (subst(x1, var(fresh1), t1))), x2, subst(x, e, t2))
	          else if isFreeVar(x2, e)
	               then case(subst(x, e, e1), x1, subst(x, e, t1), fresh2, subst(x, e, subst(x2, var(fresh2), t2)))
	               else case(subst(x, e, e1), x1, subst(x, e, t1), x2, subst(x, e, t2))
	          
// subst(x, e, case(e1, x1, t1, x2, t2)) = let fresh1 = gensym(app(app(e, t1), var(x))) in
//                                         let fresh2 = gensym(app(app(e, t2), var(x))) in
// 	if x == x1
// 	then if x == x2
// 	     then case(subst(x, e, e1), x1, t1, x2, t2)
// 	     else case(subst(x, e, e1), x1, t1, fresh2, subst(x, e, (subst(x2, var(fresh2), t2))))
// 	else if x == x2
// 	     then case(subst(x, e, e1), fresh1, subst(x, e, (subst(x1, var(fresh1), t1))), x2, t2)
// 	     else case(subst(x, e, e1), fresh1, subst(x, e, (subst(x1, var(fresh1), t1))), fresh2, subst(x, e, (subst(x2, var(fresh2), t2))))
