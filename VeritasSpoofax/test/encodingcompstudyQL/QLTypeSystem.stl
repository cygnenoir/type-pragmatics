module encodingcompstudyQL.QLTypeSystem

import encodingcompstudyQL.QLSyntax

//Type of a questionnaire: QID -> AType map of already given answers
//also serves as environment type for previously given answers
data ATMap = atmempty | atmbind(QID, AType, ATMap)
	

function 
append: ATList ATList -> ATList
append(atempty, atl) = atl
append(atcons(at, atlr), atl) = atcons(at, append(atlr, atl))

//not yet sure whether this is "nice" like this...
//typing judgment: ATMap |- Quest : ATMap
//where first ATMap is the environment of previously given answers, and the second ATMap the "type"
//of Quest
axiom

========================== T-qempty
~atm |- qempty : atmempty

axiom

=========================================== T-question
~atm |- question(~qid, ~at, ~l) : atmbind(~qid, ~at, atmempty)

axiom
~atm1 |- ~q1 : ~atm2
~atm2 |- ~q2 : ~atm3
=========================================== T-seq
~atm1 |- seq(~q1, ~q2) : append(~atm2, ~atm3)


//for now, just enforce that both questions in a conditional branch have
//to have the same answer type
//however, intuitively, the answer type could of course differ....
//(which would complicate type checking a lot)

//TODO: type expression, with regard to answer map!
axiom
~atm |- ~q1 : ~atm1
~atm |- ~q2 : ~atm1
============================================= T-condquestion
~atm |- condquestion(~e, ~q1, ~q2) : ~atm1