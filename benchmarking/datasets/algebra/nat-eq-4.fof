fof('zero-is-nat', axiom, nat(z)).
fof('succ-is-nat', axiom, (![X] : (nat(X) <=> nat(succ(X))))).
fof('nat-dom', axiom, ![X] : (nat(X) => (X = z | (?[Y] : X = succ(Y))))).

fof('nat-eq-z', axiom, z = z <=> true).
fof('nat-eq-succ', axiom, (![X,Y] : (succ(X) = succ(Y) <=> X = Y))).
fof('nat-neq', axiom, (![X] : z != succ(X))).

fof('nat-eq-4', conjecture, succ(succ(z)) != succ(z)).

