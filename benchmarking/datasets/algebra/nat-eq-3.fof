fof('zero-is-nat', axiom, nat(z)).
fof('succ-is-nat', axiom, (![X] : (nat(X) <=> nat(succ(X))))).
fof('others-not-nat', axiom, (![X] : (~nat(X) => (X != z & (![Y] : X != succ(Y)))))).

fof('nat-eq-succ', axiom, (![X,Y] : (succ(X) = succ(Y) <=> X = Y))).
fof('nat-neq', axiom, (![X] : z != succ(X))).

fof('nat-eq-3', conjecture, z != succ(z)).

