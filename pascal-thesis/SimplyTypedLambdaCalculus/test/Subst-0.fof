fof('EQ-var', axiom, (![Var0,Var1] : (((var(Var0)=var(Var1)) => (Var0=Var1)) & ((Var0=Var1) => (var(Var0)=var(Var1)))))).
fof('EQ-abs', axiom, (![Var0,Typ0,Exp0,Var1,Typ1,Exp1] : (((abs(Var0,Typ0,Exp0)=abs(Var1,Typ1,Exp1)) => ((Var0=Var1) & ((Typ0=Typ1) & (Exp0=Exp1)))) & (((Var0=Var1) & ((Typ0=Typ1) & (Exp0=Exp1))) => (abs(Var0,Typ0,Exp0)=abs(Var1,Typ1,Exp1)))))).
fof('EQ-app', axiom, (![Exp0,Exp1,Exp2,Exp3] : (((app(Exp0,Exp1)=app(Exp2,Exp3)) => ((Exp0=Exp2) & (Exp1=Exp3))) & (((Exp0=Exp2) & (Exp1=Exp3)) => (app(Exp0,Exp1)=app(Exp2,Exp3)))))).
fof('EQ-empty', axiom, (((empty=empty) => $true) & ($true => (empty=empty)))).
fof('EQ-bind', axiom, (![Var0,Typ0,Ctx0,Var1,Typ1,Ctx1] : (((bind(Var0,Typ0,Ctx0)=bind(Var1,Typ1,Ctx1)) => ((Var0=Var1) & ((Typ0=Typ1) & (Ctx0=Ctx1)))) & (((Var0=Var1) & ((Typ0=Typ1) & (Ctx0=Ctx1))) => (bind(Var0,Typ0,Ctx0)=bind(Var1,Typ1,Ctx1)))))).
fof('EQ-arrow', axiom, (![Typ0,Typ1,Typ2,Typ3] : (((arrow(Typ0,Typ1)=arrow(Typ2,Typ3)) => ((Typ0=Typ2) & (Typ1=Typ3))) & (((Typ0=Typ2) & (Typ1=Typ3)) => (arrow(Typ0,Typ1)=arrow(Typ2,Typ3)))))).
fof('EQ-nothing', axiom, (((nothing=nothing) => $true) & ($true => (nothing=nothing)))).
fof('EQ-some', axiom, (![Typ0,Typ1] : (((some(Typ0)=some(Typ1)) => (Typ0=Typ1)) & ((Typ0=Typ1) => (some(Typ0)=some(Typ1)))))).
fof('DIFF-var-abs', axiom, (![Var0,Var1,Typ0,Exp0] : (var(Var0)!=abs(Var1,Typ0,Exp0)))).
fof('DIFF-var-app', axiom, (![Var0,Exp0,Exp1] : (var(Var0)!=app(Exp0,Exp1)))).
fof('DIFF-abs-app', axiom, (![Var0,Typ0,Exp0,Exp1,Exp2] : (abs(Var0,Typ0,Exp0)!=app(Exp1,Exp2)))).
fof('DIFF-empty-bind', axiom, (![Var0,Typ0,Ctx0] : (empty!=bind(Var0,Typ0,Ctx0)))).
fof('DIFF-nothing-some', axiom, (![Typ0] : (nothing!=some(Typ0)))).
fof('lookup0', axiom, (![X,Var0,Ctx0,RESULT] : ((((Var0=X) & (Ctx0=empty)) & (RESULT=lookup(Var0,Ctx0))) => ($true => (RESULT=nothing))))).
fof('lookup1', axiom, (![C,Var0,Ctx0,X,Y,RESULT,Ty] : ((((Var0=X) & (Ctx0=bind(Y,Ty,C))) & (RESULT=lookup(Var0,Ctx0))) => (((X=Y) & $true) => (RESULT=some(Ty)))))).
fof('lookup2', axiom, (![Ty,Var0,Ctx0,Y,RESULT,X,C] : ((((Var0=X) & (Ctx0=bind(Y,Ty,C))) & (RESULT=lookup(Var0,Ctx0))) => (((~(X=Y)) & $true) => (RESULT=lookup(X,C)))))).
fof('T-var', axiom, (![C,X,T] : ((lookup(X,C)=some(T)) => tcheck(C,var(X),T)))).
fof('T-abs', axiom, (![C,X,E,S,T] : (tcheck(bind(X,S,C),E,T) => tcheck(C,abs(X,S,E),arrow(S,T))))).
fof('T-app', axiom, (![S,C,E1,E2,T] : ((tcheck(C,E1,arrow(S,T)) & tcheck(C,E2,S)) => tcheck(C,app(E1,E2),T)))).
fof('T-inv', axiom, (![E,T,C] : (tcheck(C,E,T) => ((?[X] : ((E=var(X)) & (lookup(X,C)=some(T)))) | ((?[X,E2,T1,T2] : ((E=abs(X,T1,E2)) & ((T=arrow(T1,T2)) & tcheck(bind(X,T1,C),E2,T2)))) | (?[E1,E2,S] : ((E=app(E1,E2)) & (tcheck(C,E1,arrow(S,T)) & tcheck(C,E2,S))))))))).
fof('T-var2', conjecture, (![C,X,T] : tcheck(bind(X,T,C),var(X),T))).