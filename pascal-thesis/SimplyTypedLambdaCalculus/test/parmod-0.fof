
fof('Lookup-Base', axiom, (![X,C,T,T2] : (lookup(X,bind(X,T2,C),T) => (T=T2)))).
fof('Lookup-Step', axiom, (![X,Y,T2,C,T] : (((X!=Y) & lookup(X,C,T)) => lookup(X,bind(Y,T2,C),T)))).
fof('T-var', axiom, (![C,X,T] : (lookup(X,C,T) => tcheck(C,X,T)))).
fof('T-abs', axiom, (![C,X,E,S,T] : (tcheck(bind(X,S,C),E,T) => tcheck(C,abs(X,S,E),arrow(S,T))))).
fof('T-app', axiom, (![S,C,E,F,T] : ((tcheck(C,E,arrow(S,T)) & tcheck(C,F,S)) => tcheck(C,app(E,F),T)))).
fof('T-fork', axiom, (![C,E,T] : (tcheck(C,E,T) => tcheck(C,fork(E),future(T))))).
fof('T-join', axiom, (![C,E,T] : (tcheck(C,E,future(T)) => tcheck(C,join(E),T)))).
fof('T-IH-par-abs', axiom, (![C,T] : (tcheck(C,eabs,T) => tcheck(C,par(eabs),T)))).
fof('T-abs-inversion', axiom, (![T,X,S,C,E] : (tcheck(C,abs(X,S,E),T) => (?[T2] : ((T=arrow(S,T2)) & tcheck(bind(X,S,C),E,T2)))))).
fof('T-IH-par-app-1', axiom, (![C,T] : (tcheck(C,eapp1,T) => tcheck(C,par(eapp1),T)))).
fof('T-IH-par-app-2', axiom, (![C,T] : (tcheck(C,eapp2,T) => tcheck(C,par(eapp2),T)))).
fof('T-app-inversion', axiom, (![E,T,C,F] : (tcheck(C,app(E,F),T) => (?[S] : (tcheck(C,E,arrow(S,T)) & tcheck(C,F,S)))))).
fof('T-par-x AND T-par-app AND T-par-abs', conjecture, ((![C,T] : (tcheck(C,xvar,T) => tcheck(C,xvar,T))) & ((![C,T] : (tcheck(C,app(eapp1,eapp2),T) => tcheck(C,app(join(fork(par(eapp1))),join(fork(par(eapp2)))),T))) & (![C,T] : (tcheck(C,abs(xabs,sabs,eabs),T) => tcheck(C,abs(xabs,sabs,par(eabs)),T)))))).