Module(
  "backend.Goal"{ Def(
                    URI(
                      Language("Veritas")
                    , [ID(NablNsModule(), "backend.Goal", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/backend/Goal.stl/0"))]
                    )
                  )
                }
, []
, [ Goals(
      None()
    , [ TypingRule(
          PremiseList(
            JudgementCons(
              TypingJudgmentSimple(FunctionExpMeta(Meta("e")), FunctionExpMeta(Meta("T1")))
            , FunctionExpJudgment(FunctionExpEq(FunctionExpMeta(Meta("T1")), FunctionExpMeta(Meta("T2"))))
            )
          )
        , RuleName("===========", "Goal-1"{ Def(
                                              URI(
                                                Language("Veritas")
                                              , [ ID(NablNsRule(), "Goal-1", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/backend/Goal.stl/0"))
                                                , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/backend/Goal.stl/0")
                                                , ID(NablNsModule(), "backend.Goal", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/backend/Goal.stl/0"))
                                                ]
                                              )
                                            )
                                          })
        , ConsequenceList(TypingJudgmentSimple(FunctionExpMeta(Meta("e")), FunctionExpMeta(Meta("T2"))))
        )
      ]
    ){ Scope(
         [ ( NablNsRule()
           , URI(
               Language("Veritas")
             , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/backend/Goal.stl/0"), ID(NablNsModule(), "backend.Goal", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/backend/Goal.stl/0"))]
             )
           )
         ]
       )
     }
  ]
)