Module(
  "sql.ProgressProjection"{ Def(
                              URI(
                                Language("Veritas")
                              , [ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                              )
                            )
                          }
, [ Import("sql.TableAux"{Use(Result(4379))}, None())
  , Import("sql.BasicFunctions"{Use(Result(4381))}, None())
  , Import("sql.SoundnessAuxDefs"{Use(Result(4383))}, None())
  , Import("sql.TypeSystem"{Use(Result(4385))}, None())
  , Import("sql.Semantics"{Use(Result(4387))}, None())
  , Import("sql.TStore"{Use(Result(1861))}, None())
  , Import("sql.Tables"{Use(Result(1859))}, None())
  , Import("sql.TContext"{Use(Result(4391))}, None())
  ]
, [ Strategy(
      "proof-table-minus-first-row-findCol"
    , []
    , [ HideAll()
      , Include(
          [ "EQ-none"
          , "EQ-some"
          , "DIFF-none-some"
          , "isSome0"
          , "isSome1"
          , "getSome0"
          , "isSome-INV-1"
          , "isSome-INV-2"
          , "EQ-ctype"
          , "EQ-aempty"
          , "EQ-acons"
          , "EQ-ttempty"
          , "EQ-ttcons"
          , "EQ-rtempty"
          , "EQ-rtcons"
          , "DIFF-aempty-acons"
          , "DIFF-ttempty-ttcons"
          , "DIFF-rtempty-rtcons"
          , "EQ-rempty"
          , "EQ-rcons"
          , "EQ-tempty"
          , "EQ-tcons"
          , "EQ-table"
          , "DIFF-rempty-rcons"
          , "DIFF-tempty-tcons"
          , "welltypedtable0"
          , "matchingAList0"
          , "matchingAList1"
          , "matchingAList2"
          , "rawType0"
          , "rawType1"
          , "rawType-INV"
          , "findCol0"
          , "findCol1"
          , "findCol2"
          , "findCol-INV"
          , "dropFirstColRaw0"
          , "dropFirstColRaw1"
          , "dropFirstColRaw2"
          , "dropFirstColRaw-INV"
          ]
        )
      , Strategy(
          "induction-findCol-table-one-col-one-row"
        , []
        , [ Include(["projectFirstRaw0", "projectFirstRaw1", "projectFirstRaw2", "projectFirstRaw-INV"])
          , Goals(
              None()
            , [ TypingRule(
                  PremiseList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "findCol"{Use(Result(4401))}
                        , [ FunctionExpMeta(Meta("a"))
                          , FunctionExpApp("table"{Use(Result(4399))}, [FunctionExpVar("aempty"{Use(Result(4397))}), FunctionExpMeta(Meta("rt"))])
                          ]
                        )
                      , FunctionExpApp(
                          "some"{Use(Result(4409))}
                        , [ FunctionExpApp(
                              "tcons"{Use(Result(4407))}
                            , [ FunctionExpApp("rcons"{Use(Result(4405))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4403))})])
                              , FunctionExpMeta(Meta("rt1"))
                              ]
                            )
                          ]
                        )
                      )
                    )
                  )
                , RuleName("======================================================================", "findCol-table-one-col-one-row-aempty"{ Def(
                                                                                                                                               URI(
                                                                                                                                                 Language("Veritas")
                                                                                                                                               , [ ID(NablNsRule(), "findCol-table-one-col-one-row-aempty", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                 , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0")
                                                                                                                                                 , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                 ]
                                                                                                                                               )
                                                                                                                                             )
                                                                                                                                           })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("a2"), Meta("ar"), Meta("r"), Meta("trest")]
                    , JudgementCons(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpMeta(Meta("al"))
                          , FunctionExpApp(
                              "acons"{Use(Result(4413))}
                            , [FunctionExpMeta(Meta("a2")), FunctionExpMeta(Meta("al"))]
                            )
                          )
                        )
                      , FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpMeta(Meta("rt"))
                          , FunctionExpApp(
                              "tcons"{Use(Result(4407))}
                            , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            ){ Scope(
                 [ ( NablNsRule()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 ]
               )
             }
          , Goals(
              None()
            , [ TypingRule(
                  PremiseList(
                    JudgementCons(
                      FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpMeta(Meta("al"))
                        , FunctionExpApp("acons"{Use(Result(4413))}, [FunctionExpMeta(Meta("a2")), FunctionExpVar("aempty"{Use(Result(4397))})])
                        )
                      )
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp(
                            "findCol"{Use(Result(4401))}
                          , [ FunctionExpMeta(Meta("a"))
                            , FunctionExpApp(
                                "table"{Use(Result(4399))}
                              , [FunctionExpMeta(Meta("al")), FunctionExpMeta(Meta("rt"))]
                              )
                            ]
                          )
                        , FunctionExpApp(
                            "some"{Use(Result(4409))}
                          , [ FunctionExpApp(
                                "tcons"{Use(Result(4407))}
                              , [ FunctionExpApp("rcons"{Use(Result(4405))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4403))})])
                                , FunctionExpMeta(Meta("rt1"))
                                ]
                              )
                            ]
                          )
                        )
                      )
                    )
                  )
                , RuleName("=================================================================================", "findCol-table-one-col-one-row-acons1"{ Def(
                                                                                                                                                          URI(
                                                                                                                                                            Language("Veritas")
                                                                                                                                                          , [ ID(NablNsRule(), "findCol-table-one-col-one-row-acons1", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                            , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/1")
                                                                                                                                                            , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                            ]
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                      })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("a3"), Meta("ar"), Meta("r"), Meta("trest")]
                    , JudgementCons(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpMeta(Meta("al"))
                          , FunctionExpApp(
                              "acons"{Use(Result(4413))}
                            , [FunctionExpMeta(Meta("a3")), FunctionExpMeta(Meta("ar"))]
                            )
                          )
                        )
                      , FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpMeta(Meta("rt"))
                          , FunctionExpApp(
                              "tcons"{Use(Result(4407))}
                            , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            ){ Scope(
                 [ ( NablNsRule()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/1"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 ]
               )
             }
          , Local(
              [ Consts([ConstructorDecl("al"{ Def(
                                                URI(
                                                  Language("Veritas")
                                                , [ ID(NablNsSymbol(), "al", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                  , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/3")
                                                  , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                  ]
                                                )
                                              )
                                            }, [], SortRef("AList"{Use(Result(4437))}))])
              , Axioms(
                  [ TypingRule(
                      PremiseList(
                        JudgementCons(
                          FunctionExpJudgment(FunctionExpNeq(FunctionExpVar("al"{Use(Result(4443))}), FunctionExpVar("aempty"{Use(Result(4445))})))
                        , JudgementCons(
                            FunctionExpJudgment(FunctionExpEq(FunctionExpMeta(Meta("al")), FunctionExpVar("al"{Use(Result(4443))})))
                          , FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpApp(
                                  "findCol"{Use(Result(4450))}
                                , [ FunctionExpMeta(Meta("a"))
                                  , FunctionExpApp(
                                      "table"{Use(Result(4448))}
                                    , [FunctionExpMeta(Meta("al")), FunctionExpMeta(Meta("rt"))]
                                    )
                                  ]
                                )
                              , FunctionExpApp(
                                  "some"{Use(Result(4458))}
                                , [ FunctionExpApp(
                                      "tcons"{Use(Result(4456))}
                                    , [ FunctionExpApp("rcons"{Use(Result(4454))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4452))})])
                                      , FunctionExpMeta(Meta("rt1"))
                                      ]
                                    )
                                  ]
                                )
                              )
                            )
                          )
                        )
                      )
                    , RuleName("======================================================================", "findCol-table-one-col-one-row-acons2-IH"{ Def(
                                                                                                                                                      URI(
                                                                                                                                                        Language("Veritas")
                                                                                                                                                      , [ ID(NablNsRule(), "findCol-table-one-col-one-row-acons2-IH", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                        , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/5")
                                                                                                                                                        , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                        ]
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                  })
                    , ConsequenceList(
                        ExistsJudgment(
                          [Meta("a2"), Meta("ar"), Meta("r"), Meta("trest")]
                        , JudgementCons(
                            FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpMeta(Meta("al"))
                              , FunctionExpApp(
                                  "acons"{Use(Result(4462))}
                                , [FunctionExpMeta(Meta("a2")), FunctionExpMeta(Meta("ar"))]
                                )
                              )
                            )
                          , FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpMeta(Meta("rt"))
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4456))}
                                , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                )
              , Goals(
                  None()
                , [ TypingRule(
                      PremiseList(
                        JudgementCons(
                          FunctionExpJudgment(FunctionExpNeq(FunctionExpVar("al"{Use(Result(4443))}), FunctionExpVar("aempty"{Use(Result(4445))})))
                        , JudgementCons(
                            FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpMeta(Meta("al"))
                              , FunctionExpApp("acons"{Use(Result(4462))}, [FunctionExpMeta(Meta("a2")), FunctionExpVar("al"{Use(Result(4443))})])
                              )
                            )
                          , FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpApp(
                                  "findCol"{Use(Result(4450))}
                                , [ FunctionExpMeta(Meta("a"))
                                  , FunctionExpApp(
                                      "table"{Use(Result(4448))}
                                    , [FunctionExpMeta(Meta("al")), FunctionExpMeta(Meta("rt"))]
                                    )
                                  ]
                                )
                              , FunctionExpApp(
                                  "some"{Use(Result(4458))}
                                , [ FunctionExpApp(
                                      "tcons"{Use(Result(4456))}
                                    , [ FunctionExpApp("rcons"{Use(Result(4454))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4452))})])
                                      , FunctionExpMeta(Meta("rt1"))
                                      ]
                                    )
                                  ]
                                )
                              )
                            )
                          )
                        )
                      )
                    , RuleName("======================================================================", "findCol-table-one-col-one-row-acons2"{ Def(
                                                                                                                                                   URI(
                                                                                                                                                     Language("Veritas")
                                                                                                                                                   , [ ID(NablNsRule(), "findCol-table-one-col-one-row-acons2", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                     , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0")
                                                                                                                                                     , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/5")
                                                                                                                                                     , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                     ]
                                                                                                                                                   )
                                                                                                                                                 )
                                                                                                                                               })
                    , ConsequenceList(
                        ExistsJudgment(
                          [Meta("a3"), Meta("ar"), Meta("r"), Meta("trest")]
                        , JudgementCons(
                            FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpMeta(Meta("al"))
                              , FunctionExpApp(
                                  "acons"{Use(Result(4462))}
                                , [FunctionExpMeta(Meta("a3")), FunctionExpMeta(Meta("ar"))]
                                )
                              )
                            )
                          , FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpMeta(Meta("rt"))
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4456))}
                                , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                ){ Scope(
                     [ ( NablNsRule()
                       , URI(
                           Language("Veritas")
                         , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"), Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/5"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                         )
                       )
                     ]
                   )
                 }
              ]
            ){ Scope(
                 [ ( NablNsSort()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/2"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 , ( NablNsSymbol()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/3"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 , ( NablNsAxiom()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/4"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 , ( NablNsRule()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/5"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 ]
               )
             }
          , Axioms(
              [ TypingRule(
                  PremiseList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "findCol"{Use(Result(4401))}
                        , [ FunctionExpMeta(Meta("a"))
                          , FunctionExpApp(
                              "table"{Use(Result(4399))}
                            , [FunctionExpMeta(Meta("al")), FunctionExpMeta(Meta("rt"))]
                            )
                          ]
                        )
                      , FunctionExpApp(
                          "some"{Use(Result(4409))}
                        , [ FunctionExpApp(
                              "tcons"{Use(Result(4407))}
                            , [ FunctionExpApp("rcons"{Use(Result(4405))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4403))})])
                              , FunctionExpMeta(Meta("rt1"))
                              ]
                            )
                          ]
                        )
                      )
                    )
                  )
                , RuleName("=======================================================", "findCol-table-one-col-one-row-ind"{ Def(
                                                                                                                             URI(
                                                                                                                               Language("Veritas")
                                                                                                                             , [ ID(NablNsRule(), "findCol-table-one-col-one-row-ind", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                               , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                               ]
                                                                                                                             )
                                                                                                                           )
                                                                                                                         })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("a2"), Meta("ar"), Meta("r"), Meta("trest")]
                    , JudgementCons(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpMeta(Meta("al"))
                          , FunctionExpApp(
                              "acons"{Use(Result(4413))}
                            , [FunctionExpMeta(Meta("a2")), FunctionExpMeta(Meta("ar"))]
                            )
                          )
                        )
                      , FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpMeta(Meta("rt"))
                          , FunctionExpApp(
                              "tcons"{Use(Result(4407))}
                            , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                            )
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          ]
        )
      , LemmasWithStrategy(
          "induction-findCol-table-one-col-one-row"
        , Some("1")
        , [ TypingRule(
              PremiseList(
                FunctionExpJudgment(
                  FunctionExpEq(
                    FunctionExpApp(
                      "findCol"{Use(Result(4401))}
                    , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("t"))]
                    )
                  , FunctionExpApp(
                      "some"{Use(Result(4409))}
                    , [ FunctionExpApp(
                          "tcons"{Use(Result(4407))}
                        , [ FunctionExpApp("rcons"{Use(Result(4405))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4403))})])
                          , FunctionExpMeta(Meta("rt1"))
                          ]
                        )
                      ]
                    )
                  )
                )
              )
            , RuleName("=======================================================", "findCol-table-one-col-one-row"{ Def(
                                                                                                                     URI(
                                                                                                                       Language("Veritas")
                                                                                                                     , [ ID(NablNsRule(), "findCol-table-one-col-one-row", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                       , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                       ]
                                                                                                                     )
                                                                                                                   )
                                                                                                                 })
            , ConsequenceList(
                ExistsJudgment(
                  [Meta("a2"), Meta("al"), Meta("r"), Meta("trest")]
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpMeta(Meta("t"))
                    , FunctionExpApp(
                        "table"{Use(Result(4399))}
                      , [ FunctionExpApp(
                            "acons"{Use(Result(4413))}
                          , [FunctionExpMeta(Meta("a2")), FunctionExpMeta(Meta("al"))]
                          )
                        , FunctionExpApp(
                            "tcons"{Use(Result(4407))}
                          , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                          )
                        ]
                      )
                    )
                  )
                )
              )
            )
          ]
        )
      , Strategy(
          "induction-one-col-table-minus-first-row-findCol"
        , []
        , [ Include(["projectFirstRaw0", "projectFirstRaw1", "projectFirstRaw2", "projectFirstRaw-INV"])
          , Goals(
              None()
            , [ TypingRule(
                  PremiseList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "findCol"{Use(Result(4401))}
                        , [ FunctionExpMeta(Meta("a"))
                          , FunctionExpApp(
                              "table"{Use(Result(4399))}
                            , [ FunctionExpApp("acons"{Use(Result(4413))}, [FunctionExpMeta(Meta("a2")), FunctionExpVar("aempty"{Use(Result(4397))})])
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4407))}
                                , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                )
                              ]
                            )
                          ]
                        )
                      , FunctionExpApp(
                          "some"{Use(Result(4409))}
                        , [ FunctionExpApp(
                              "tcons"{Use(Result(4407))}
                            , [ FunctionExpApp("rcons"{Use(Result(4405))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4403))})])
                              , FunctionExpMeta(Meta("rt1"))
                              ]
                            )
                          ]
                        )
                      )
                    )
                  )
                , RuleName("===============================================================================================", "one-col-table-minus-first-row-findCol-aempty"{ Def(
                                                                                                                                                                                URI(
                                                                                                                                                                                  Language("Veritas")
                                                                                                                                                                                , [ ID(NablNsRule(), "one-col-table-minus-first-row-findCol-aempty", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                                  , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/6")
                                                                                                                                                                                  , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                                  ]
                                                                                                                                                                                )
                                                                                                                                                                              )
                                                                                                                                                                            })
                , ConsequenceList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "findCol"{Use(Result(4401))}
                        , [ FunctionExpMeta(Meta("a"))
                          , FunctionExpApp(
                              "table"{Use(Result(4399))}
                            , [ FunctionExpApp("acons"{Use(Result(4413))}, [FunctionExpMeta(Meta("a2")), FunctionExpVar("aempty"{Use(Result(4397))})])
                              , FunctionExpMeta(Meta("trest"))
                              ]
                            )
                          ]
                        )
                      , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt1"))])
                      )
                    )
                  )
                )
              ]
            ){ Scope(
                 [ ( NablNsRule()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/6"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 ]
               )
             }
          , Local(
              [ Consts(
                  [ ConstructorDecl("a3"{ Def(
                                            URI(
                                              Language("Veritas")
                                            , [ ID(NablNsSymbol(), "a3", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/8")
                                              , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              ]
                                            )
                                          )
                                        }, [], SortRef("AName"{Use(Result(4521))}))
                  , ConstructorDecl("al"{ Def(
                                            URI(
                                              Language("Veritas")
                                            , [ ID(NablNsSymbol(), "al", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/8")
                                              , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              ]
                                            )
                                          )
                                        }, [], SortRef("AList"{Use(Result(4525))}))
                  ]
                )
              , Axioms(
                  [ TypingRule(
                      PremiseList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4539))}
                            , [ FunctionExpMeta(Meta("a"))
                              , FunctionExpApp(
                                  "table"{Use(Result(4537))}
                                , [ FunctionExpApp("acons"{Use(Result(4533))}, [FunctionExpMeta(Meta("a2")), FunctionExpVar("al"{Use(Result(4531))})])
                                  , FunctionExpApp(
                                      "tcons"{Use(Result(4535))}
                                    , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                    )
                                  ]
                                )
                              ]
                            )
                          , FunctionExpApp(
                              "some"{Use(Result(4546))}
                            , [ FunctionExpApp(
                                  "tcons"{Use(Result(4535))}
                                , [ FunctionExpApp("rcons"{Use(Result(4543))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4541))})])
                                  , FunctionExpMeta(Meta("rt1"))
                                  ]
                                )
                              ]
                            )
                          )
                        )
                      )
                    , RuleName("===============================================================================================", "one-col-table-minus-first-row-findCol-acons-IH"{ Def(
                                                                                                                                                                                      URI(
                                                                                                                                                                                        Language("Veritas")
                                                                                                                                                                                      , [ ID(NablNsRule(), "one-col-table-minus-first-row-findCol-acons-IH", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                                        , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/10")
                                                                                                                                                                                        , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                                        ]
                                                                                                                                                                                      )
                                                                                                                                                                                    )
                                                                                                                                                                                  })
                    , ConsequenceList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4539))}
                            , [ FunctionExpMeta(Meta("a"))
                              , FunctionExpApp(
                                  "table"{Use(Result(4537))}
                                , [ FunctionExpApp("acons"{Use(Result(4533))}, [FunctionExpMeta(Meta("a2")), FunctionExpVar("al"{Use(Result(4531))})])
                                  , FunctionExpMeta(Meta("trest"))
                                  ]
                                )
                              ]
                            )
                          , FunctionExpApp("some"{Use(Result(4546))}, [FunctionExpMeta(Meta("rt1"))])
                          )
                        )
                      )
                    )
                  ]
                )
              , Goals(
                  Some("1")
                , [ TypingRule(
                      PremiseList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4539))}
                            , [ FunctionExpMeta(Meta("a"))
                              , FunctionExpApp(
                                  "table"{Use(Result(4537))}
                                , [ FunctionExpApp(
                                      "acons"{Use(Result(4533))}
                                    , [ FunctionExpMeta(Meta("a2"))
                                      , FunctionExpApp("acons"{Use(Result(4533))}, [FunctionExpVar("a3"{Use(Result(4555))}), FunctionExpVar("al"{Use(Result(4531))})])
                                      ]
                                    )
                                  , FunctionExpApp(
                                      "tcons"{Use(Result(4535))}
                                    , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                    )
                                  ]
                                )
                              ]
                            )
                          , FunctionExpApp(
                              "some"{Use(Result(4546))}
                            , [ FunctionExpApp(
                                  "tcons"{Use(Result(4535))}
                                , [ FunctionExpApp("rcons"{Use(Result(4543))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4541))})])
                                  , FunctionExpMeta(Meta("rt1"))
                                  ]
                                )
                              ]
                            )
                          )
                        )
                      )
                    , RuleName("=========================================================================================================", "one-col-table-minus-first-row-findCol-acons"{ Def(
                                                                                                                                                                                             URI(
                                                                                                                                                                                               Language("Veritas")
                                                                                                                                                                                             , [ ID(NablNsRule(), "one-col-table-minus-first-row-findCol-acons", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                                               , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0")
                                                                                                                                                                                               , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/10")
                                                                                                                                                                                               , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                                               ]
                                                                                                                                                                                             )
                                                                                                                                                                                           )
                                                                                                                                                                                         })
                    , ConsequenceList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4539))}
                            , [ FunctionExpMeta(Meta("a"))
                              , FunctionExpApp(
                                  "table"{Use(Result(4537))}
                                , [ FunctionExpApp(
                                      "acons"{Use(Result(4533))}
                                    , [ FunctionExpMeta(Meta("a2"))
                                      , FunctionExpApp("acons"{Use(Result(4533))}, [FunctionExpVar("a3"{Use(Result(4555))}), FunctionExpVar("al"{Use(Result(4531))})])
                                      ]
                                    )
                                  , FunctionExpMeta(Meta("trest"))
                                  ]
                                )
                              ]
                            )
                          , FunctionExpApp("some"{Use(Result(4546))}, [FunctionExpMeta(Meta("rt1"))])
                          )
                        )
                      )
                    )
                  ]
                ){ Scope(
                     [ ( NablNsRule()
                       , URI(
                           Language("Veritas")
                         , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"), Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/10"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                         )
                       )
                     ]
                   )
                 }
              ]
            ){ Scope(
                 [ ( NablNsSort()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/7"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 , ( NablNsSymbol()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/8"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 , ( NablNsAxiom()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/9"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 , ( NablNsRule()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/10"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 ]
               )
             }
          , Axioms(
              [ TypingRule(
                  PremiseList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "findCol"{Use(Result(4401))}
                        , [ FunctionExpMeta(Meta("a"))
                          , FunctionExpApp(
                              "table"{Use(Result(4399))}
                            , [ FunctionExpApp(
                                  "acons"{Use(Result(4413))}
                                , [FunctionExpMeta(Meta("a2")), FunctionExpMeta(Meta("al"))]
                                )
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4407))}
                                , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                )
                              ]
                            )
                          ]
                        )
                      , FunctionExpApp(
                          "some"{Use(Result(4409))}
                        , [ FunctionExpApp(
                              "tcons"{Use(Result(4407))}
                            , [ FunctionExpApp("rcons"{Use(Result(4405))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4403))})])
                              , FunctionExpMeta(Meta("rt1"))
                              ]
                            )
                          ]
                        )
                      )
                    )
                  )
                , RuleName("===============================================================================================", "one-col-table-minus-first-row-findCol-ind"{ Def(
                                                                                                                                                                             URI(
                                                                                                                                                                               Language("Veritas")
                                                                                                                                                                             , [ ID(NablNsRule(), "one-col-table-minus-first-row-findCol-ind", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                               , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                               ]
                                                                                                                                                                             )
                                                                                                                                                                           )
                                                                                                                                                                         })
                , ConsequenceList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "findCol"{Use(Result(4401))}
                        , [ FunctionExpMeta(Meta("a"))
                          , FunctionExpApp(
                              "table"{Use(Result(4399))}
                            , [ FunctionExpApp(
                                  "acons"{Use(Result(4413))}
                                , [FunctionExpMeta(Meta("a2")), FunctionExpMeta(Meta("al"))]
                                )
                              , FunctionExpMeta(Meta("trest"))
                              ]
                            )
                          ]
                        )
                      , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt1"))])
                      )
                    )
                  )
                )
              ]
            )
          ]
        )
      , LemmasWithStrategy(
          "induction-one-col-table-minus-first-row-findCol"
        , None()
        , [ TypingRule(
              PremiseList(
                FunctionExpJudgment(
                  FunctionExpEq(
                    FunctionExpApp(
                      "findCol"{Use(Result(4401))}
                    , [ FunctionExpMeta(Meta("a"))
                      , FunctionExpApp(
                          "table"{Use(Result(4399))}
                        , [ FunctionExpApp(
                              "acons"{Use(Result(4413))}
                            , [FunctionExpMeta(Meta("a2")), FunctionExpMeta(Meta("al"))]
                            )
                          , FunctionExpApp(
                              "tcons"{Use(Result(4407))}
                            , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                            )
                          ]
                        )
                      ]
                    )
                  , FunctionExpApp(
                      "some"{Use(Result(4409))}
                    , [ FunctionExpApp(
                          "tcons"{Use(Result(4407))}
                        , [ FunctionExpApp("rcons"{Use(Result(4405))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4403))})])
                          , FunctionExpMeta(Meta("rt1"))
                          ]
                        )
                      ]
                    )
                  )
                )
              )
            , RuleName("===============================================================================================", "one-col-table-minus-first-row-findCol"{ Def(
                                                                                                                                                                     URI(
                                                                                                                                                                       Language("Veritas")
                                                                                                                                                                     , [ ID(NablNsRule(), "one-col-table-minus-first-row-findCol", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                       , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                       ]
                                                                                                                                                                     )
                                                                                                                                                                   )
                                                                                                                                                                 })
            , ConsequenceList(
                FunctionExpJudgment(
                  FunctionExpEq(
                    FunctionExpApp(
                      "findCol"{Use(Result(4401))}
                    , [ FunctionExpMeta(Meta("a"))
                      , FunctionExpApp(
                          "table"{Use(Result(4399))}
                        , [ FunctionExpApp(
                              "acons"{Use(Result(4413))}
                            , [FunctionExpMeta(Meta("a2")), FunctionExpMeta(Meta("al"))]
                            )
                          , FunctionExpMeta(Meta("trest"))
                          ]
                        )
                      ]
                    )
                  , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt1"))])
                  )
                )
              )
            )
          ]
        )
      ]
    )
  , Strategy(
      "proof-table-minus-first-row-project"
    , []
    , [ HideAll()
      , Include(
          [ "EQ-none"
          , "EQ-some"
          , "DIFF-none-some"
          , "isSome0"
          , "isSome1"
          , "getSome0"
          , "isSome-INV-1"
          , "isSome-INV-2"
          , "EQ-ctype"
          , "EQ-aempty"
          , "EQ-acons"
          , "EQ-ttempty"
          , "EQ-ttcons"
          , "EQ-rtempty"
          , "EQ-rtcons"
          , "DIFF-aempty-acons"
          , "DIFF-ttempty-ttcons"
          , "DIFF-rtempty-rtcons"
          , "EQ-rempty"
          , "EQ-rcons"
          , "EQ-tempty"
          , "EQ-tcons"
          , "EQ-table"
          , "DIFF-rempty-rcons"
          , "DIFF-tempty-tcons"
          , "project0"
          , "project1"
          , "project2"
          , "project-INV"
          , "projectEmptyCol0"
          , "projectEmptyCol1"
          , "projectEmptyCol-INV"
          ]
        )
      , Strategy(
          "proof-project-table-one-row"
        , []
        , [ Include(
              [ "findCol0"
              , "findCol1"
              , "findCol2"
              , "findCol-INV"
              , "projectFirstRaw0"
              , "projectFirstRaw1"
              , "projectFirstRaw2"
              , "projectFirstRaw-INV"
              , "attachColToFrontRaw0"
              , "attachColToFrontRaw1"
              , "attachColToFrontRaw2"
              , "attachColToFrontRaw3"
              , "attachColToFrontRaw-INV"
              , "dropFirstColRaw0"
              , "dropFirstColRaw1"
              , "dropFirstColRaw2"
              , "dropFirstColRaw-INV"
              ]
            )
          , Lemmas(
              None()
            , [ TypingRule(
                  PremiseList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp("project"{Use(Result(4605))}, [FunctionExpVar("aempty"{Use(Result(4397))}), FunctionExpMeta(Meta("t"))])
                      , FunctionExpApp(
                          "some"{Use(Result(4409))}
                        , [FunctionExpApp(
                             "tcons"{Use(Result(4407))}
                           , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                           )]
                        )
                      )
                    )
                  )
                , RuleName("=======================================================", "project-table-one-row-aempty"{ Def(
                                                                                                                        URI(
                                                                                                                          Language("Veritas")
                                                                                                                        , [ ID(NablNsRule(), "project-table-one-row-aempty", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                          , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                          ]
                                                                                                                        )
                                                                                                                      )
                                                                                                                    })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("ar2"), Meta("r"), Meta("trest")]
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpMeta(Meta("t"))
                        , FunctionExpApp(
                            "table"{Use(Result(4399))}
                          , [ FunctionExpMeta(Meta("ar2"))
                            , FunctionExpApp(
                                "tcons"{Use(Result(4407))}
                              , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                              )
                            ]
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , Strategy(
              "induction-findCol-one-row"
            , []
            , [ Goals(
                  None()
                , [ TypingRule(
                      PremiseList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4401))}
                            , [ FunctionExpMeta(Meta("a"))
                              , FunctionExpApp("table"{Use(Result(4399))}, [FunctionExpVar("aempty"{Use(Result(4397))}), FunctionExpMeta(Meta("rt"))])
                              ]
                            )
                          , FunctionExpApp(
                              "some"{Use(Result(4409))}
                            , [ FunctionExpApp(
                                  "tcons"{Use(Result(4407))}
                                , [ FunctionExpApp("rcons"{Use(Result(4405))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4403))})])
                                  , FunctionExpMeta(Meta("rt1"))
                                  ]
                                )
                              ]
                            )
                          )
                        )
                      )
                    , RuleName("=========================================================", "findCol-one-row-1"{ Def(
                                                                                                                   URI(
                                                                                                                     Language("Veritas")
                                                                                                                   , [ ID(NablNsRule(), "findCol-one-row-1", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                     , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/11")
                                                                                                                     , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                     ]
                                                                                                                   )
                                                                                                                 )
                                                                                                               })
                    , ConsequenceList(
                        ExistsJudgment(
                          [Meta("r"), Meta("trest")]
                        , FunctionExpJudgment(
                            FunctionExpEq(
                              FunctionExpMeta(Meta("rt"))
                            , FunctionExpApp(
                                "tcons"{Use(Result(4407))}
                              , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                ){ Scope(
                     [ ( NablNsRule()
                       , URI(
                           Language("Veritas")
                         , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/11"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                         )
                       )
                     ]
                   )
                 }
              , Local(
                  [ Consts(
                      [ ConstructorDecl("a"{ Def(
                                               URI(
                                                 Language("Veritas")
                                               , [ ID(NablNsSymbol(), "a", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                 , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/13")
                                                 , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                 ]
                                               )
                                             )
                                           }, [], SortRef("AName"{Use(Result(4629))}))
                      , ConstructorDecl("a2"{ Def(
                                                URI(
                                                  Language("Veritas")
                                                , [ ID(NablNsSymbol(), "a2", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                  , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/13")
                                                  , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                  ]
                                                )
                                              )
                                            }, [], SortRef("AName"{Use(Result(4629))}))
                      , ConstructorDecl("al"{ Def(
                                                URI(
                                                  Language("Veritas")
                                                , [ ID(NablNsSymbol(), "al", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                  , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/13")
                                                  , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                  ]
                                                )
                                              )
                                            }, [], SortRef("AList"{Use(Result(4636))}))
                      , ConstructorDecl("rt"{ Def(
                                                URI(
                                                  Language("Veritas")
                                                , [ ID(NablNsSymbol(), "rt", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                  , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/13")
                                                  , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                  ]
                                                )
                                              )
                                            }, [], SortRef("RawTable"{Use(Result(4640))}))
                      ]
                    )
                  , Axioms(
                      [ TypingRule(
                          PremiseList(
                            FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpApp(
                                  "findCol"{Use(Result(4656))}
                                , [ FunctionExpVar("a"{Use(Result(4646))})
                                  , FunctionExpApp(
                                      "table"{Use(Result(4654))}
                                    , [FunctionExpVar("al"{Use(Result(4648))}), FunctionExpApp("dropFirstColRaw"{Use(Result(4652))}, [FunctionExpVar("rt"{Use(Result(4650))})])]
                                    )
                                  ]
                                )
                              , FunctionExpApp(
                                  "some"{Use(Result(4664))}
                                , [ FunctionExpApp(
                                      "tcons"{Use(Result(4662))}
                                    , [ FunctionExpApp("rcons"{Use(Result(4660))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4658))})])
                                      , FunctionExpMeta(Meta("rt1"))
                                      ]
                                    )
                                  ]
                                )
                              )
                            )
                          )
                        , RuleName("====================================================================================", "findCol-one-row-2-IH"{ Def(
                                                                                                                                                     URI(
                                                                                                                                                       Language("Veritas")
                                                                                                                                                     , [ ID(NablNsRule(), "findCol-one-row-2-IH", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                       , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/15")
                                                                                                                                                       , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                       ]
                                                                                                                                                     )
                                                                                                                                                   )
                                                                                                                                                 })
                        , ConsequenceList(
                            ExistsJudgment(
                              [Meta("r"), Meta("trest")]
                            , FunctionExpJudgment(
                                FunctionExpEq(
                                  FunctionExpVar("rt"{Use(Result(4650))})
                                , FunctionExpApp(
                                    "tcons"{Use(Result(4662))}
                                  , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    )
                  , Goals(
                      None()
                    , [ TypingRule(
                          PremiseList(
                            FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpApp(
                                  "findCol"{Use(Result(4656))}
                                , [ FunctionExpVar("a"{Use(Result(4646))})
                                  , FunctionExpApp(
                                      "table"{Use(Result(4654))}
                                    , [FunctionExpApp("acons"{Use(Result(4674))}, [FunctionExpVar("a2"{Use(Result(4671))}), FunctionExpVar("al"{Use(Result(4648))})]), FunctionExpVar("rt"{Use(Result(4650))})]
                                    )
                                  ]
                                )
                              , FunctionExpApp(
                                  "some"{Use(Result(4664))}
                                , [ FunctionExpApp(
                                      "tcons"{Use(Result(4662))}
                                    , [ FunctionExpApp("rcons"{Use(Result(4660))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4658))})])
                                      , FunctionExpMeta(Meta("rt1"))
                                      ]
                                    )
                                  ]
                                )
                              )
                            )
                          )
                        , RuleName("=========================================================", "findCol-one-row-2"{ Def(
                                                                                                                       URI(
                                                                                                                         Language("Veritas")
                                                                                                                       , [ ID(NablNsRule(), "findCol-one-row-2", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                         , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0")
                                                                                                                         , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/15")
                                                                                                                         , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                         ]
                                                                                                                       )
                                                                                                                     )
                                                                                                                   })
                        , ConsequenceList(
                            ExistsJudgment(
                              [Meta("r"), Meta("trest")]
                            , FunctionExpJudgment(
                                FunctionExpEq(
                                  FunctionExpVar("rt"{Use(Result(4650))})
                                , FunctionExpApp(
                                    "tcons"{Use(Result(4662))}
                                  , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                  )
                                )
                              )
                            )
                          )
                        )
                      ]
                    ){ Scope(
                         [ ( NablNsRule()
                           , URI(
                               Language("Veritas")
                             , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"), Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/15"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                             )
                           )
                         ]
                       )
                     }
                  ]
                ){ Scope(
                     [ ( NablNsSort()
                       , URI(
                           Language("Veritas")
                         , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/12"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                         )
                       )
                     , ( NablNsSymbol()
                       , URI(
                           Language("Veritas")
                         , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/13"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                         )
                       )
                     , ( NablNsAxiom()
                       , URI(
                           Language("Veritas")
                         , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/14"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                         )
                       )
                     , ( NablNsRule()
                       , URI(
                           Language("Veritas")
                         , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/15"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                         )
                       )
                     ]
                   )
                 }
              , HideAll()
              , Axioms(
                  [ TypingRule(
                      PremiseList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4401))}
                            , [ FunctionExpMeta(Meta("a"))
                              , FunctionExpApp(
                                  "table"{Use(Result(4399))}
                                , [FunctionExpMeta(Meta("al")), FunctionExpMeta(Meta("rt"))]
                                )
                              ]
                            )
                          , FunctionExpApp(
                              "some"{Use(Result(4409))}
                            , [ FunctionExpApp(
                                  "tcons"{Use(Result(4407))}
                                , [ FunctionExpApp("rcons"{Use(Result(4405))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4403))})])
                                  , FunctionExpMeta(Meta("rt1"))
                                  ]
                                )
                              ]
                            )
                          )
                        )
                      )
                    , RuleName("====================================================================", "findCol-one-row-ind"{ Def(
                                                                                                                                URI(
                                                                                                                                  Language("Veritas")
                                                                                                                                , [ ID(NablNsRule(), "findCol-one-row-ind", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                  , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                  ]
                                                                                                                                )
                                                                                                                              )
                                                                                                                            })
                    , ConsequenceList(
                        ExistsJudgment(
                          [Meta("r"), Meta("trest")]
                        , FunctionExpJudgment(
                            FunctionExpEq(
                              FunctionExpMeta(Meta("rt"))
                            , FunctionExpApp(
                                "tcons"{Use(Result(4407))}
                              , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                )
              ]
            )
          , LemmasWithStrategy(
              "induction-findCol-one-row"
            , None()
            , [ TypingRule(
                  PremiseList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "findCol"{Use(Result(4401))}
                        , [ FunctionExpMeta(Meta("a"))
                          , FunctionExpApp(
                              "table"{Use(Result(4399))}
                            , [FunctionExpMeta(Meta("al")), FunctionExpMeta(Meta("rt"))]
                            )
                          ]
                        )
                      , FunctionExpApp(
                          "some"{Use(Result(4409))}
                        , [ FunctionExpApp(
                              "tcons"{Use(Result(4407))}
                            , [ FunctionExpApp("rcons"{Use(Result(4405))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4403))})])
                              , FunctionExpMeta(Meta("rt1"))
                              ]
                            )
                          ]
                        )
                      )
                    )
                  )
                , RuleName("====================================================================", "findCol-one-row"{ Def(
                                                                                                                        URI(
                                                                                                                          Language("Veritas")
                                                                                                                        , [ ID(NablNsRule(), "findCol-one-row", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                          , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                          ]
                                                                                                                        )
                                                                                                                      )
                                                                                                                    })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("r"), Meta("trest")]
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpMeta(Meta("rt"))
                        , FunctionExpApp(
                            "tcons"{Use(Result(4407))}
                          , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , Lemmas(
              None()
            , [ TypingRule(
                  PremiseList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "project"{Use(Result(4605))}
                        , [ FunctionExpApp(
                              "acons"{Use(Result(4413))}
                            , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("al"))]
                            )
                          , FunctionExpMeta(Meta("t"))
                          ]
                        )
                      , FunctionExpApp(
                          "some"{Use(Result(4409))}
                        , [FunctionExpApp(
                             "tcons"{Use(Result(4407))}
                           , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                           )]
                        )
                      )
                    )
                  )
                , RuleName("=======================================================", "project-table-one-row-acons"{ Def(
                                                                                                                       URI(
                                                                                                                         Language("Veritas")
                                                                                                                       , [ ID(NablNsRule(), "project-table-one-row-acons", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                         , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                         ]
                                                                                                                       )
                                                                                                                     )
                                                                                                                   })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("ar2"), Meta("r"), Meta("trest")]
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpMeta(Meta("t"))
                        , FunctionExpApp(
                            "table"{Use(Result(4399))}
                          , [ FunctionExpMeta(Meta("ar2"))
                            , FunctionExpApp(
                                "tcons"{Use(Result(4407))}
                              , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                              )
                            ]
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          ]
        )
      , LemmasWithStrategy(
          "proof-project-table-one-row"
        , None()
        , [ TypingRule(
              PremiseList(
                FunctionExpJudgment(
                  FunctionExpEq(
                    FunctionExpApp(
                      "project"{Use(Result(4605))}
                    , [FunctionExpMeta(Meta("ar")), FunctionExpMeta(Meta("t"))]
                    )
                  , FunctionExpApp(
                      "some"{Use(Result(4409))}
                    , [FunctionExpApp(
                         "tcons"{Use(Result(4407))}
                       , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                       )]
                    )
                  )
                )
              )
            , RuleName("=======================================================", "project-table-one-row"{ Def(
                                                                                                             URI(
                                                                                                               Language("Veritas")
                                                                                                             , [ ID(NablNsRule(), "project-table-one-row", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                               , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                               ]
                                                                                                             )
                                                                                                           )
                                                                                                         })
            , ConsequenceList(
                ExistsJudgment(
                  [Meta("ar2"), Meta("r"), Meta("trest")]
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpMeta(Meta("t"))
                    , FunctionExpApp(
                        "table"{Use(Result(4399))}
                      , [ FunctionExpMeta(Meta("ar2"))
                        , FunctionExpApp(
                            "tcons"{Use(Result(4407))}
                          , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                          )
                        ]
                      )
                    )
                  )
                )
              )
            )
          ]
        )
      , Strategy(
          "proof-one-row-table-minus-first-row-project"
        , []
        , [ HideAll()
          , Include(
              [ "EQ-none"
              , "EQ-some"
              , "DIFF-none-some"
              , "isSome0"
              , "isSome1"
              , "getSome0"
              , "isSome-INV-1"
              , "isSome-INV-2"
              , "EQ-ctype"
              , "EQ-aempty"
              , "EQ-acons"
              , "EQ-ttempty"
              , "EQ-ttcons"
              , "EQ-rtempty"
              , "EQ-rtcons"
              , "DIFF-aempty-acons"
              , "DIFF-ttempty-ttcons"
              , "DIFF-rtempty-rtcons"
              , "EQ-rempty"
              , "EQ-rcons"
              , "EQ-tempty"
              , "EQ-tcons"
              , "EQ-table"
              , "DIFF-rempty-rcons"
              , "DIFF-tempty-tcons"
              , "project0"
              , "project1"
              , "project2"
              , "project-INV"
              , "projectEmptyCol0"
              , "projectEmptyCol1"
              , "projectEmptyCol-INV"
              , "findCol0"
              , "findCol1"
              , "findCol2"
              , "findCol-INV"
              , "projectFirstRaw0"
              , "projectFirstRaw1"
              , "projectFirstRaw2"
              , "projectFirstRaw-INV"
              , "attachColToFrontRaw0"
              , "attachColToFrontRaw1"
              , "attachColToFrontRaw2"
              , "attachColToFrontRaw3"
              , "attachColToFrontRaw-INV"
              , "dropFirstColRaw0"
              , "dropFirstColRaw1"
              , "dropFirstColRaw2"
              , "dropFirstColRaw-INV"
              ]
            )
          , Goals(
              None()
            , [ TypingRule(
                  PremiseList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "project"{Use(Result(4605))}
                        , [ FunctionExpVar("aempty"{Use(Result(4397))})
                          , FunctionExpApp(
                              "table"{Use(Result(4399))}
                            , [ FunctionExpMeta(Meta("ar2"))
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4407))}
                                , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                )
                              ]
                            )
                          ]
                        )
                      , FunctionExpApp(
                          "some"{Use(Result(4409))}
                        , [FunctionExpApp(
                             "tcons"{Use(Result(4407))}
                           , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                           )]
                        )
                      )
                    )
                  )
                , RuleName("========================================================================", "one-row-table-minus-first-row-project-aempty"{ Def(
                                                                                                                                                         URI(
                                                                                                                                                           Language("Veritas")
                                                                                                                                                         , [ ID(NablNsRule(), "one-row-table-minus-first-row-project-aempty", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                           , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/16")
                                                                                                                                                           , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                           ]
                                                                                                                                                         )
                                                                                                                                                       )
                                                                                                                                                     })
                , ConsequenceList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "project"{Use(Result(4605))}
                        , [ FunctionExpVar("aempty"{Use(Result(4397))})
                          , FunctionExpApp(
                              "table"{Use(Result(4399))}
                            , [FunctionExpMeta(Meta("ar2")), FunctionExpMeta(Meta("trest"))]
                            )
                          ]
                        )
                      , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt2"))])
                      )
                    )
                  )
                )
              ]
            ){ Scope(
                 [ ( NablNsRule()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/16"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 ]
               )
             }
          , Local(
              [ Consts(
                  [ ConstructorDecl("a"{ Def(
                                           URI(
                                             Language("Veritas")
                                           , [ ID(NablNsSymbol(), "a", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                             , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/18")
                                             , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                             ]
                                           )
                                         )
                                       }, [], SortRef("AName"{Use(Result(4738))}))
                  , ConstructorDecl("al"{ Def(
                                            URI(
                                              Language("Veritas")
                                            , [ ID(NablNsSymbol(), "al", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/18")
                                              , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              ]
                                            )
                                          )
                                        }, [], SortRef("AList"{Use(Result(4742))}))
                  ]
                )
              , Axioms(
                  [ TypingRule(
                      PremiseList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "project"{Use(Result(4754))}
                            , [ FunctionExpVar("al"{Use(Result(4748))})
                              , FunctionExpApp(
                                  "table"{Use(Result(4752))}
                                , [ FunctionExpMeta(Meta("ar2"))
                                  , FunctionExpApp(
                                      "tcons"{Use(Result(4750))}
                                    , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                    )
                                  ]
                                )
                              ]
                            )
                          , FunctionExpApp(
                              "some"{Use(Result(4757))}
                            , [FunctionExpApp(
                                 "tcons"{Use(Result(4750))}
                               , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                               )]
                            )
                          )
                        )
                      )
                    , RuleName("========================================================================", "one-row-table-minus-first-row-project-acons-IH"{ Def(
                                                                                                                                                               URI(
                                                                                                                                                                 Language("Veritas")
                                                                                                                                                               , [ ID(NablNsRule(), "one-row-table-minus-first-row-project-acons-IH", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                 , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/20")
                                                                                                                                                                 , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                                 ]
                                                                                                                                                               )
                                                                                                                                                             )
                                                                                                                                                           })
                    , ConsequenceList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "project"{Use(Result(4754))}
                            , [ FunctionExpVar("al"{Use(Result(4748))})
                              , FunctionExpApp(
                                  "table"{Use(Result(4752))}
                                , [FunctionExpMeta(Meta("ar2")), FunctionExpMeta(Meta("trest"))]
                                )
                              ]
                            )
                          , FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("rt2"))])
                          )
                        )
                      )
                    )
                  ]
                )
              , Lemmas(
                  Some("1")
                , [ TypingRule(
                      PremiseList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "project"{Use(Result(4754))}
                            , [ FunctionExpApp("acons"{Use(Result(4768))}, [FunctionExpVar("a"{Use(Result(4765))}), FunctionExpVar("al"{Use(Result(4748))})])
                              , FunctionExpApp(
                                  "table"{Use(Result(4752))}
                                , [ FunctionExpMeta(Meta("ar2"))
                                  , FunctionExpApp(
                                      "tcons"{Use(Result(4750))}
                                    , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                    )
                                  ]
                                )
                              ]
                            )
                          , FunctionExpApp(
                              "some"{Use(Result(4757))}
                            , [FunctionExpApp(
                                 "tcons"{Use(Result(4750))}
                               , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                               )]
                            )
                          )
                        )
                      )
                    , RuleName("=================================================================================", "step1"{ Def(
                                                                                                                               URI(
                                                                                                                                 Language("Veritas")
                                                                                                                               , [ ID(NablNsRule(), "step1", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                 , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/20")
                                                                                                                                 , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                 ]
                                                                                                                               )
                                                                                                                             )
                                                                                                                           })
                    , ConsequenceList(
                        ExistsJudgment(
                          [Meta("col"), Meta("rest")]
                        , JudgementCons(
                            FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("col"))])
                              , FunctionExpApp(
                                  "findCol"{Use(Result(4780))}
                                , [ FunctionExpMeta(Meta("a"))
                                  , FunctionExpApp(
                                      "table"{Use(Result(4752))}
                                    , [ FunctionExpMeta(Meta("ar2"))
                                      , FunctionExpApp(
                                          "tcons"{Use(Result(4750))}
                                        , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                        )
                                      ]
                                    )
                                  ]
                                )
                              )
                            )
                          , JudgementCons(
                              FunctionExpJudgment(
                                FunctionExpEq(
                                  FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("rest"))])
                                , FunctionExpApp(
                                    "project"{Use(Result(4754))}
                                  , [ FunctionExpMeta(Meta("al"))
                                    , FunctionExpApp(
                                        "table"{Use(Result(4752))}
                                      , [ FunctionExpMeta(Meta("ar2"))
                                        , FunctionExpApp(
                                            "tcons"{Use(Result(4750))}
                                          , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                          )
                                        ]
                                      )
                                    ]
                                  )
                                )
                              )
                            , FunctionExpJudgment(
                                FunctionExpEq(
                                  FunctionExpApp(
                                    "attachColToFrontRaw"{Use(Result(4786))}
                                  , [FunctionExpMeta(Meta("col")), FunctionExpMeta(Meta("rest"))]
                                  )
                                , FunctionExpApp(
                                    "some"{Use(Result(4757))}
                                  , [FunctionExpApp(
                                       "tcons"{Use(Result(4750))}
                                     , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                                     )]
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                )
              , Lemmas(
                  Some("1")
                , [ TypingRule(
                      PremiseList(
                        JudgementCons(
                          FunctionExpJudgment(
                            FunctionExpEq(
                              FunctionExpApp(
                                "attachColToFrontRaw"{Use(Result(4786))}
                              , [FunctionExpMeta(Meta("col")), FunctionExpMeta(Meta("rest"))]
                              )
                            , FunctionExpApp(
                                "some"{Use(Result(4757))}
                              , [FunctionExpApp(
                                   "tcons"{Use(Result(4750))}
                                 , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                                 )]
                              )
                            )
                          )
                        , JudgementCons(
                            FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("col"))])
                              , FunctionExpApp(
                                  "findCol"{Use(Result(4780))}
                                , [ FunctionExpMeta(Meta("a"))
                                  , FunctionExpApp(
                                      "table"{Use(Result(4752))}
                                    , [ FunctionExpMeta(Meta("ar2"))
                                      , FunctionExpApp(
                                          "tcons"{Use(Result(4750))}
                                        , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                        )
                                      ]
                                    )
                                  ]
                                )
                              )
                            )
                          , FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("rest"))])
                              , FunctionExpApp(
                                  "project"{Use(Result(4754))}
                                , [ FunctionExpMeta(Meta("al"))
                                  , FunctionExpApp(
                                      "table"{Use(Result(4752))}
                                    , [ FunctionExpMeta(Meta("ar2"))
                                      , FunctionExpApp(
                                          "tcons"{Use(Result(4750))}
                                        , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                        )
                                      ]
                                    )
                                  ]
                                )
                              )
                            )
                          )
                        )
                      )
                    , RuleName("=========================================================================", "intermediate-step1"{ Def(
                                                                                                                                    URI(
                                                                                                                                      Language("Veritas")
                                                                                                                                    , [ ID(NablNsRule(), "intermediate-step1", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                      , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/20")
                                                                                                                                      , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                      ]
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                })
                    , ConsequenceList(
                        ExistsJudgment(
                          [Meta("f"), Meta("rt"), Meta("r3"), Meta("rt3")]
                        , JudgementCons(
                            FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpMeta(Meta("col"))
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4750))}
                                , [ FunctionExpApp("rcons"{Use(Result(4805))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4803))})])
                                  , FunctionExpMeta(Meta("rt"))
                                  ]
                                )
                              )
                            )
                          , FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpMeta(Meta("rest"))
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4750))}
                                , [FunctionExpMeta(Meta("r3")), FunctionExpMeta(Meta("rt3"))]
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                )
              , Lemmas(
                  Some("1")
                , [ TypingRule(
                      PremiseList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4780))}
                            , [ FunctionExpMeta(Meta("a"))
                              , FunctionExpApp(
                                  "table"{Use(Result(4752))}
                                , [ FunctionExpMeta(Meta("ar2"))
                                  , FunctionExpApp(
                                      "tcons"{Use(Result(4750))}
                                    , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                    )
                                  ]
                                )
                              ]
                            )
                          , FunctionExpApp(
                              "some"{Use(Result(4757))}
                            , [ FunctionExpApp(
                                  "tcons"{Use(Result(4750))}
                                , [ FunctionExpApp("rcons"{Use(Result(4805))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4803))})])
                                  , FunctionExpMeta(Meta("rt"))
                                  ]
                                )
                              ]
                            )
                          )
                        )
                      )
                    , RuleName("====================================================================================", "step2"{ Def(
                                                                                                                                  URI(
                                                                                                                                    Language("Veritas")
                                                                                                                                  , [ ID(NablNsRule(), "step2", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                    , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/20")
                                                                                                                                    , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                    ]
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              })
                    , ConsequenceList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4780))}
                            , [ FunctionExpMeta(Meta("a"))
                              , FunctionExpApp(
                                  "table"{Use(Result(4752))}
                                , [FunctionExpMeta(Meta("ar2")), FunctionExpMeta(Meta("trest"))]
                                )
                              ]
                            )
                          , FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("rt"))])
                          )
                        )
                      )
                    )
                  ]
                )
              , Lemmas(
                  Some("1")
                , [ TypingRule(
                      PremiseList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "attachColToFrontRaw"{Use(Result(4786))}
                            , [ FunctionExpApp(
                                  "tcons"{Use(Result(4750))}
                                , [ FunctionExpApp("rcons"{Use(Result(4805))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4803))})])
                                  , FunctionExpMeta(Meta("rt"))
                                  ]
                                )
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4750))}
                                , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt1"))]
                                )
                              ]
                            )
                          , FunctionExpApp(
                              "some"{Use(Result(4757))}
                            , [FunctionExpApp(
                                 "tcons"{Use(Result(4750))}
                               , [FunctionExpMeta(Meta("r2")), FunctionExpMeta(Meta("rt2"))]
                               )]
                            )
                          )
                        )
                      )
                    , RuleName("==============================================================================================", "step3"{ Def(
                                                                                                                                            URI(
                                                                                                                                              Language("Veritas")
                                                                                                                                            , [ ID(NablNsRule(), "step3", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                              , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/20")
                                                                                                                                              , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                              ]
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        })
                    , ConsequenceList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "attachColToFrontRaw"{Use(Result(4786))}
                            , [FunctionExpMeta(Meta("rt")), FunctionExpMeta(Meta("rt1"))]
                            )
                          , FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("rt2"))])
                          )
                        )
                      )
                    )
                  ]
                )
              , Lemmas(
                  Some("1")
                , [ TypingRule(
                      PremiseList(
                        JudgementCons(
                          FunctionExpJudgment(
                            FunctionExpEq(
                              FunctionExpApp(
                                "findCol"{Use(Result(4780))}
                              , [ FunctionExpMeta(Meta("a"))
                                , FunctionExpApp(
                                    "table"{Use(Result(4752))}
                                  , [FunctionExpMeta(Meta("ar2")), FunctionExpMeta(Meta("trest"))]
                                  )
                                ]
                              )
                            , FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("rt"))])
                            )
                          )
                        , JudgementCons(
                            FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpApp(
                                  "project"{Use(Result(4754))}
                                , [ FunctionExpMeta(Meta("al"))
                                  , FunctionExpApp(
                                      "table"{Use(Result(4752))}
                                    , [FunctionExpMeta(Meta("ar2")), FunctionExpMeta(Meta("trest"))]
                                    )
                                  ]
                                )
                              , FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("rest"))])
                              )
                            )
                          , FunctionExpJudgment(
                              FunctionExpEq(
                                FunctionExpApp(
                                  "attachColToFrontRaw"{Use(Result(4786))}
                                , [FunctionExpMeta(Meta("rt")), FunctionExpMeta(Meta("rest"))]
                                )
                              , FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("rt2"))])
                              )
                            )
                          )
                        )
                      )
                    , RuleName("===========================================================", "step4"{ Def(
                                                                                                         URI(
                                                                                                           Language("Veritas")
                                                                                                         , [ ID(NablNsRule(), "step4", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                           , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/20")
                                                                                                           , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                           ]
                                                                                                         )
                                                                                                       )
                                                                                                     })
                    , ConsequenceList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "project"{Use(Result(4754))}
                            , [ FunctionExpApp(
                                  "acons"{Use(Result(4768))}
                                , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("al"))]
                                )
                              , FunctionExpApp(
                                  "table"{Use(Result(4752))}
                                , [FunctionExpMeta(Meta("ar2")), FunctionExpMeta(Meta("trest"))]
                                )
                              ]
                            )
                          , FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("rt2"))])
                          )
                        )
                      )
                    )
                  ]
                )
              , Goals(
                  Some("1")
                , [ TypingRule(
                      PremiseList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "project"{Use(Result(4754))}
                            , [ FunctionExpApp("acons"{Use(Result(4768))}, [FunctionExpVar("a"{Use(Result(4765))}), FunctionExpVar("al"{Use(Result(4748))})])
                              , FunctionExpApp(
                                  "table"{Use(Result(4752))}
                                , [ FunctionExpMeta(Meta("ar2"))
                                  , FunctionExpApp(
                                      "tcons"{Use(Result(4750))}
                                    , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                    )
                                  ]
                                )
                              ]
                            )
                          , FunctionExpApp(
                              "some"{Use(Result(4757))}
                            , [FunctionExpApp(
                                 "tcons"{Use(Result(4750))}
                               , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                               )]
                            )
                          )
                        )
                      )
                    , RuleName("========================================================================", "one-row-table-minus-first-row-project-acons"{ Def(
                                                                                                                                                            URI(
                                                                                                                                                              Language("Veritas")
                                                                                                                                                            , [ ID(NablNsRule(), "one-row-table-minus-first-row-project-acons", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                              , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0")
                                                                                                                                                              , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/20")
                                                                                                                                                              , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                              ]
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                        })
                    , ConsequenceList(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "project"{Use(Result(4754))}
                            , [ FunctionExpApp("acons"{Use(Result(4768))}, [FunctionExpVar("a"{Use(Result(4765))}), FunctionExpVar("al"{Use(Result(4748))})])
                              , FunctionExpApp(
                                  "table"{Use(Result(4752))}
                                , [FunctionExpMeta(Meta("ar2")), FunctionExpMeta(Meta("trest"))]
                                )
                              ]
                            )
                          , FunctionExpApp("some"{Use(Result(4757))}, [FunctionExpMeta(Meta("rt2"))])
                          )
                        )
                      )
                    )
                  ]
                ){ Scope(
                     [ ( NablNsRule()
                       , URI(
                           Language("Veritas")
                         , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"), Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/20"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                         )
                       )
                     ]
                   )
                 }
              ]
            ){ Scope(
                 [ ( NablNsSort()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/17"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 , ( NablNsSymbol()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/18"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 , ( NablNsAxiom()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/19"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 , ( NablNsRule()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/20"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 ]
               )
             }
          , HideAll()
          , Axioms(
              [ TypingRule(
                  PremiseList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "project"{Use(Result(4605))}
                        , [ FunctionExpMeta(Meta("ar"))
                          , FunctionExpApp(
                              "table"{Use(Result(4399))}
                            , [ FunctionExpMeta(Meta("ar2"))
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4407))}
                                , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                )
                              ]
                            )
                          ]
                        )
                      , FunctionExpApp(
                          "some"{Use(Result(4409))}
                        , [FunctionExpApp(
                             "tcons"{Use(Result(4407))}
                           , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                           )]
                        )
                      )
                    )
                  )
                , RuleName("========================================================================", "one-row-table-minus-first-row-project-ind"{ Def(
                                                                                                                                                      URI(
                                                                                                                                                        Language("Veritas")
                                                                                                                                                      , [ ID(NablNsRule(), "one-row-table-minus-first-row-project-ind", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                        , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                        ]
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                  })
                , ConsequenceList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "project"{Use(Result(4605))}
                        , [ FunctionExpMeta(Meta("ar"))
                          , FunctionExpApp(
                              "table"{Use(Result(4399))}
                            , [FunctionExpMeta(Meta("ar2")), FunctionExpMeta(Meta("trest"))]
                            )
                          ]
                        )
                      , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt2"))])
                      )
                    )
                  )
                )
              ]
            )
          ]
        )
      , LemmasWithStrategy(
          "proof-one-row-table-minus-first-row-project"
        , None()
        , [ TypingRule(
              PremiseList(
                FunctionExpJudgment(
                  FunctionExpEq(
                    FunctionExpApp(
                      "project"{Use(Result(4605))}
                    , [ FunctionExpMeta(Meta("ar"))
                      , FunctionExpApp(
                          "table"{Use(Result(4399))}
                        , [ FunctionExpMeta(Meta("ar2"))
                          , FunctionExpApp(
                              "tcons"{Use(Result(4407))}
                            , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                            )
                          ]
                        )
                      ]
                    )
                  , FunctionExpApp(
                      "some"{Use(Result(4409))}
                    , [FunctionExpApp(
                         "tcons"{Use(Result(4407))}
                       , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                       )]
                    )
                  )
                )
              )
            , RuleName("========================================================================", "one-row-table-minus-first-row-project"{ Def(
                                                                                                                                              URI(
                                                                                                                                                Language("Veritas")
                                                                                                                                              , [ ID(NablNsRule(), "one-row-table-minus-first-row-project", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                ]
                                                                                                                                              )
                                                                                                                                            )
                                                                                                                                          })
            , ConsequenceList(
                FunctionExpJudgment(
                  FunctionExpEq(
                    FunctionExpApp(
                      "project"{Use(Result(4605))}
                    , [ FunctionExpMeta(Meta("ar"))
                      , FunctionExpApp(
                          "table"{Use(Result(4399))}
                        , [FunctionExpMeta(Meta("ar2")), FunctionExpMeta(Meta("trest"))]
                        )
                      ]
                    )
                  , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt2"))])
                  )
                )
              )
            )
          ]
        )
      , Lemmas(
          None()
        , [ TypingRule(
              PremiseList(
                JudgementCons(
                  FunctionExpJudgment(
                    FunctionExpApp(
                      "welltypedtable"{Use(Result(4882))}
                    , [FunctionExpMeta(Meta("TT1")), FunctionExpMeta(Meta("t"))]
                    )
                  )
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp(
                        "project"{Use(Result(4605))}
                      , [FunctionExpMeta(Meta("ar")), FunctionExpMeta(Meta("t"))]
                      )
                    , FunctionExpApp(
                        "some"{Use(Result(4409))}
                      , [FunctionExpApp(
                           "tcons"{Use(Result(4407))}
                         , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                         )]
                      )
                    )
                  )
                )
              )
            , RuleName("======================================================", "table-minus-first-row-project-TODO"{ Def(
                                                                                                                         URI(
                                                                                                                           Language("Veritas")
                                                                                                                         , [ ID(NablNsRule(), "table-minus-first-row-project-TODO", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                           , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                           ]
                                                                                                                         )
                                                                                                                       )
                                                                                                                     })
            , ConsequenceList(
                ExistsJudgment(
                  [Meta("ar2"), Meta("r"), Meta("trest")]
                , JudgementCons(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpMeta(Meta("t"))
                      , FunctionExpApp(
                          "table"{Use(Result(4399))}
                        , [ FunctionExpMeta(Meta("ar2"))
                          , FunctionExpApp(
                              "tcons"{Use(Result(4407))}
                            , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                            )
                          ]
                        )
                      )
                    )
                  , FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "project"{Use(Result(4605))}
                        , [ FunctionExpMeta(Meta("ar"))
                          , FunctionExpApp(
                              "table"{Use(Result(4399))}
                            , [FunctionExpMeta(Meta("ar2")), FunctionExpMeta(Meta("trest"))]
                            )
                          ]
                        )
                      , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt2"))])
                      )
                    )
                  )
                )
              )
            )
          ]
        )
      ]
    )
  , Strategy(
      "induction-progress-attachColToFrontRaw"
    , []
    , [ Goals(
          None()
        , [ TypingRule(
              PremiseList(
                JudgementCons(
                  FunctionExpJudgment(
                    FunctionExpApp(
                      "welltypedtable"{Use(Result(4882))}
                    , [FunctionExpMeta(Meta("TT1")), FunctionExpMeta(Meta("t"))]
                    )
                  )
                , JudgementCons(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "findCol"{Use(Result(4401))}
                        , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("t"))]
                        )
                      , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpVar("tempty"{Use(Result(4896))})])
                      )
                    )
                  , FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "project"{Use(Result(4605))}
                        , [FunctionExpMeta(Meta("ar")), FunctionExpMeta(Meta("t"))]
                        )
                      , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpVar("tempty"{Use(Result(4896))})])
                      )
                    )
                  )
                )
              )
            , RuleName("=================================================", "progress-attachColToFrontRaw-1"{ Def(
                                                                                                                URI(
                                                                                                                  Language("Veritas")
                                                                                                                , [ ID(NablNsRule(), "progress-attachColToFrontRaw-1", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                  , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/21")
                                                                                                                  , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                  ]
                                                                                                                )
                                                                                                              )
                                                                                                            })
            , ConsequenceList(
                ExistsJudgment(
                  [Meta("rt2")]
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp("attachColToFrontRaw"{Use(Result(4906))}, [FunctionExpVar("tempty"{Use(Result(4896))}), FunctionExpVar("tempty"{Use(Result(4896))})])
                    , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt2"))])
                    )
                  )
                )
              )
            )
          ]
        ){ Scope(
             [ ( NablNsRule()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/21"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             ]
           )
         }
      , Local(
          [ HideAll()
          , Include(
              [ "EQ-none"
              , "EQ-some"
              , "DIFF-none-some"
              , "isSome0"
              , "isSome1"
              , "getSome0"
              , "isSome-INV-1"
              , "isSome-INV-2"
              , "EQ-ctype"
              , "EQ-aempty"
              , "EQ-acons"
              , "EQ-ttempty"
              , "EQ-ttcons"
              , "EQ-rtempty"
              , "EQ-rtcons"
              , "DIFF-aempty-acons"
              , "DIFF-ttempty-ttcons"
              , "DIFF-rtempty-rtcons"
              , "EQ-rempty"
              , "EQ-rcons"
              , "EQ-tempty"
              , "EQ-tcons"
              , "EQ-table"
              , "DIFF-rempty-rcons"
              , "DIFF-tempty-tcons"
              , "welltypedtable0"
              , "matchingAList0"
              , "matchingAList1"
              , "matchingAList2"
              , "rawType0"
              , "rawType1"
              , "rawType-INV"
              , "attachColToFrontRaw0"
              , "attachColToFrontRaw1"
              , "attachColToFrontRaw2"
              , "attachColToFrontRaw3"
              , "attachColToFrontRaw-INV"
              ]
            )
          , Consts(
              [ ConstructorDecl("f"{ Def(
                                       URI(
                                         Language("Veritas")
                                       , [ ID(NablNsSymbol(), "f", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                         , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/23")
                                         , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                         ]
                                       )
                                     )
                                   }, [], SortRef("FVal"{Use(Result(4915))}))
              , ConstructorDecl("rt1"{ Def(
                                         URI(
                                           Language("Veritas")
                                         , [ ID(NablNsSymbol(), "rt1", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                           , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/23")
                                           , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                           ]
                                         )
                                       )
                                     }, [], SortRef("RawTable"{Use(Result(4919))}))
              , ConstructorDecl("r"{ Def(
                                       URI(
                                         Language("Veritas")
                                       , [ ID(NablNsSymbol(), "r", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                         , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/23")
                                         , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                         ]
                                       )
                                     )
                                   }, [], SortRef("Row"{Use(Result(4923))}))
              , ConstructorDecl("rt2"{ Def(
                                         URI(
                                           Language("Veritas")
                                         , [ ID(NablNsSymbol(), "rt2", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                           , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/23")
                                           , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                           ]
                                         )
                                       )
                                     }, [], SortRef("RawTable"{Use(Result(4919))}))
              ]
            )
          , Axioms(
              [ TypingRule(
                  PremiseList(
                    JudgementCons(
                      FunctionExpJudgment(
                        FunctionExpApp(
                          "welltypedtable"{Use(Result(4932))}
                        , [FunctionExpMeta(Meta("TT1")), FunctionExpMeta(Meta("t"))]
                        )
                      )
                    , JudgementCons(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4934))}
                            , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("t"))]
                            )
                          , FunctionExpApp("some"{Use(Result(4938))}, [FunctionExpVar("rt1"{Use(Result(4936))})])
                          )
                        )
                      , FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "project"{Use(Result(4940))}
                            , [FunctionExpMeta(Meta("ar")), FunctionExpMeta(Meta("t"))]
                            )
                          , FunctionExpApp("some"{Use(Result(4938))}, [FunctionExpVar("rt2"{Use(Result(4942))})])
                          )
                        )
                      )
                    )
                  )
                , RuleName("=================================================", "progress-attachColToFrontRaw-2-IH"{ Def(
                                                                                                                       URI(
                                                                                                                         Language("Veritas")
                                                                                                                       , [ ID(NablNsRule(), "progress-attachColToFrontRaw-2-IH", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                         , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/25")
                                                                                                                         , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                         ]
                                                                                                                       )
                                                                                                                     )
                                                                                                                   })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("rt3")]
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp("attachColToFrontRaw"{Use(Result(4949))}, [FunctionExpVar("rt1"{Use(Result(4936))}), FunctionExpVar("rt2"{Use(Result(4942))})])
                        , FunctionExpApp("some"{Use(Result(4938))}, [FunctionExpMeta(Meta("rt3"))])
                        )
                      )
                    )
                  )
                )
              ]
            )
          , Strategy(
              "welltyped-table-defs"
            , []
            , [ HideAll()
              , Include(
                  [ "welltypedtable0"
                  , "matchingAList0"
                  , "matchingAList1"
                  , "matchingAList2"
                  , "rawType0"
                  , "rawType1"
                  , "rawType-INV"
                  , "welltypedRawtable0"
                  , "welltypedRawtable1"
                  , "welltypedRow0"
                  , "welltypedRow1"
                  , "welltypedRow2"
                  ]
                )
              ]
            )
          , LemmasWithStrategy(
              "welltyped-table-defs"
            , None()
            , [ TypingRule(
                  PremiseList(
                    FunctionExpJudgment(
                      FunctionExpApp(
                        "welltypedtable"{Use(Result(4932))}
                      , [ FunctionExpMeta(Meta("TT1"))
                        , FunctionExpApp(
                            "table"{Use(Result(4956))}
                          , [ FunctionExpApp(
                                "acons"{Use(Result(4952))}
                              , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("al"))]
                              )
                            , FunctionExpApp(
                                "tcons"{Use(Result(4954))}
                              , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                              )
                            ]
                          )
                        ]
                      )
                    )
                  )
                , RuleName("======================================================", "table-minus-first-row-welltyped"{ Def(
                                                                                                                          URI(
                                                                                                                            Language("Veritas")
                                                                                                                          , [ ID(NablNsRule(), "table-minus-first-row-welltyped", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                            , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/25")
                                                                                                                            , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                            ]
                                                                                                                          )
                                                                                                                        )
                                                                                                                      })
                , ConsequenceList(
                    FunctionExpJudgment(
                      FunctionExpApp(
                        "welltypedtable"{Use(Result(4932))}
                      , [ FunctionExpMeta(Meta("TT1"))
                        , FunctionExpApp(
                            "table"{Use(Result(4956))}
                          , [ FunctionExpApp(
                                "acons"{Use(Result(4952))}
                              , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("al"))]
                              )
                            , FunctionExpMeta(Meta("trest"))
                            ]
                          )
                        ]
                      )
                    )
                  )
                )
              ]
            )
          , LemmasWithStrategy(
              "proof-table-minus-first-row-findCol"
            , None()
            , [ TypingRule(
                  PremiseList(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "findCol"{Use(Result(4934))}
                        , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("t"))]
                        )
                      , FunctionExpApp(
                          "some"{Use(Result(4938))}
                        , [ FunctionExpApp(
                              "tcons"{Use(Result(4954))}
                            , [ FunctionExpApp("rcons"{Use(Result(4967))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4965))})])
                              , FunctionExpMeta(Meta("rt1"))
                              ]
                            )
                          ]
                        )
                      )
                    )
                  )
                , RuleName("======================================================", "table-minus-first-row-findCol"{ Def(
                                                                                                                        URI(
                                                                                                                          Language("Veritas")
                                                                                                                        , [ ID(NablNsRule(), "table-minus-first-row-findCol", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                          , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/25")
                                                                                                                          , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                          ]
                                                                                                                        )
                                                                                                                      )
                                                                                                                    })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("a2"), Meta("al"), Meta("r"), Meta("trest")]
                    , JudgementCons(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpMeta(Meta("t"))
                          , FunctionExpApp(
                              "table"{Use(Result(4956))}
                            , [ FunctionExpApp(
                                  "acons"{Use(Result(4952))}
                                , [FunctionExpMeta(Meta("a2")), FunctionExpMeta(Meta("al"))]
                                )
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4954))}
                                , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                )
                              ]
                            )
                          )
                        )
                      , FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4934))}
                            , [ FunctionExpMeta(Meta("a"))
                              , FunctionExpApp(
                                  "table"{Use(Result(4956))}
                                , [ FunctionExpApp(
                                      "acons"{Use(Result(4952))}
                                    , [FunctionExpMeta(Meta("a2")), FunctionExpMeta(Meta("al"))]
                                    )
                                  , FunctionExpMeta(Meta("trest"))
                                  ]
                                )
                              ]
                            )
                          , FunctionExpApp("some"{Use(Result(4938))}, [FunctionExpMeta(Meta("rt1"))])
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , LemmasWithStrategy(
              "proof-table-minus-first-row-project"
            , None()
            , [ TypingRule(
                  PremiseList(
                    JudgementCons(
                      FunctionExpJudgment(
                        FunctionExpApp(
                          "welltypedtable"{Use(Result(4932))}
                        , [FunctionExpMeta(Meta("TT1")), FunctionExpMeta(Meta("t"))]
                        )
                      )
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp(
                            "project"{Use(Result(4940))}
                          , [FunctionExpMeta(Meta("ar")), FunctionExpMeta(Meta("t"))]
                          )
                        , FunctionExpApp(
                            "some"{Use(Result(4938))}
                          , [FunctionExpApp(
                               "tcons"{Use(Result(4954))}
                             , [FunctionExpMeta(Meta("r1")), FunctionExpMeta(Meta("rt2"))]
                             )]
                          )
                        )
                      )
                    )
                  )
                , RuleName("======================================================", "table-minus-first-row-project"{ Def(
                                                                                                                        URI(
                                                                                                                          Language("Veritas")
                                                                                                                        , [ ID(NablNsRule(), "table-minus-first-row-project", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                          , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/25")
                                                                                                                          , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                          ]
                                                                                                                        )
                                                                                                                      )
                                                                                                                    })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("ar2"), Meta("r"), Meta("trest")]
                    , JudgementCons(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpMeta(Meta("t"))
                          , FunctionExpApp(
                              "table"{Use(Result(4956))}
                            , [ FunctionExpMeta(Meta("ar2"))
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4954))}
                                , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("trest"))]
                                )
                              ]
                            )
                          )
                        )
                      , FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "project"{Use(Result(4940))}
                            , [ FunctionExpMeta(Meta("ar"))
                              , FunctionExpApp(
                                  "table"{Use(Result(4956))}
                                , [FunctionExpMeta(Meta("ar2")), FunctionExpMeta(Meta("trest"))]
                                )
                              ]
                            )
                          , FunctionExpApp("some"{Use(Result(4938))}, [FunctionExpMeta(Meta("rt2"))])
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          , Goals(
              None()
            , [ TypingRule(
                  PremiseList(
                    JudgementCons(
                      FunctionExpJudgment(
                        FunctionExpApp(
                          "welltypedtable"{Use(Result(4932))}
                        , [FunctionExpMeta(Meta("TT1")), FunctionExpMeta(Meta("t"))]
                        )
                      )
                    , JudgementCons(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4934))}
                            , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("t"))]
                            )
                          , FunctionExpApp(
                              "some"{Use(Result(4938))}
                            , [ FunctionExpApp(
                                  "tcons"{Use(Result(4954))}
                                , [FunctionExpApp("rcons"{Use(Result(4967))}, [FunctionExpVar("f"{Use(Result(4993))}), FunctionExpVar("rempty"{Use(Result(4965))})]), FunctionExpVar("rt1"{Use(Result(4936))})]
                                )
                              ]
                            )
                          )
                        )
                      , FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "project"{Use(Result(4940))}
                            , [FunctionExpMeta(Meta("ar")), FunctionExpMeta(Meta("t"))]
                            )
                          , FunctionExpApp(
                              "some"{Use(Result(4938))}
                            , [FunctionExpApp("tcons"{Use(Result(4954))}, [FunctionExpVar("r"{Use(Result(5001))}), FunctionExpVar("rt2"{Use(Result(4942))})])]
                            )
                          )
                        )
                      )
                    )
                  )
                , RuleName("===================================================================================", "progress-attachColToFrontRaw-2"{ Def(
                                                                                                                                                      URI(
                                                                                                                                                        Language("Veritas")
                                                                                                                                                      , [ ID(NablNsRule(), "progress-attachColToFrontRaw-2", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                        , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0")
                                                                                                                                                        , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/25")
                                                                                                                                                        , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                                        ]
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                  })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("rt3")]
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp(
                            "attachColToFrontRaw"{Use(Result(4949))}
                          , [ FunctionExpApp(
                                "tcons"{Use(Result(4954))}
                              , [FunctionExpApp("rcons"{Use(Result(4967))}, [FunctionExpVar("f"{Use(Result(4993))}), FunctionExpVar("rempty"{Use(Result(4965))})]), FunctionExpVar("rt1"{Use(Result(4936))})]
                              )
                            , FunctionExpApp("tcons"{Use(Result(4954))}, [FunctionExpVar("r"{Use(Result(5001))}), FunctionExpVar("rt2"{Use(Result(4942))})])
                            ]
                          )
                        , FunctionExpApp("some"{Use(Result(4938))}, [FunctionExpMeta(Meta("rt3"))])
                        )
                      )
                    )
                  )
                )
              ]
            ){ Scope(
                 [ ( NablNsRule()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"), Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/25"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 ]
               )
             }
          ]
        ){ Scope(
             [ ( NablNsSort()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/22"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             , ( NablNsSymbol()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/23"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             , ( NablNsAxiom()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/24"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             , ( NablNsRule()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/25"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             ]
           )
         }
      , Goals(
          Some("1")
        , [ TypingRule(
              PremiseList(
                JudgementCons(
                  OrJudgement(
                    OrCons(
                      FunctionExpJudgment(FunctionExpNeq(FunctionExpMeta(Meta("crt")), FunctionExpVar("tempty"{Use(Result(4896))})))
                    , OrEnd(FunctionExpJudgment(FunctionExpNeq(FunctionExpMeta(Meta("rt")), FunctionExpVar("tempty"{Use(Result(4896))}))))
                    )
                  )
                , JudgementCons(
                    OrJudgement(
                      OrCons(
                        ForallJudgment(
                          [Meta("f"), Meta("rt1")]
                        , FunctionExpJudgment(
                            FunctionExpNeq(
                              FunctionExpMeta(Meta("crt"))
                            , FunctionExpApp(
                                "tcons"{Use(Result(4407))}
                              , [ FunctionExpApp("rcons"{Use(Result(4405))}, [FunctionExpMeta(Meta("f")), FunctionExpVar("rempty"{Use(Result(4403))})])
                                , FunctionExpMeta(Meta("rt1"))
                                ]
                              )
                            )
                          )
                        )
                      , OrEnd(
                          ForallJudgment(
                            [Meta("r"), Meta("rt2")]
                          , FunctionExpJudgment(
                              FunctionExpNeq(
                                FunctionExpMeta(Meta("rt"))
                              , FunctionExpApp(
                                  "tcons"{Use(Result(4407))}
                                , [FunctionExpMeta(Meta("r")), FunctionExpMeta(Meta("rt2"))]
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  , JudgementCons(
                      FunctionExpJudgment(
                        FunctionExpApp(
                          "welltypedtable"{Use(Result(4882))}
                        , [FunctionExpMeta(Meta("TT1")), FunctionExpMeta(Meta("t"))]
                        )
                      )
                    , JudgementCons(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "findCol"{Use(Result(4401))}
                            , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("t"))]
                            )
                          , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("crt"))])
                          )
                        )
                      , FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "project"{Use(Result(4605))}
                            , [FunctionExpMeta(Meta("ar")), FunctionExpMeta(Meta("t"))]
                            )
                          , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt"))])
                          )
                        )
                      )
                    )
                  )
                )
              )
            , RuleName("=================================================", "progress-attachColToFrontRaw-3"{ Def(
                                                                                                                URI(
                                                                                                                  Language("Veritas")
                                                                                                                , [ ID(NablNsRule(), "progress-attachColToFrontRaw-3", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                  , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/26")
                                                                                                                  , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                  ]
                                                                                                                )
                                                                                                              )
                                                                                                            })
            , ConsequenceList(
                ExistsJudgment(
                  [Meta("rt3")]
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp(
                        "attachColToFrontRaw"{Use(Result(4906))}
                      , [FunctionExpMeta(Meta("crt")), FunctionExpMeta(Meta("rt"))]
                      )
                    , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt3"))])
                    )
                  )
                )
              )
            )
          ]
        ){ Scope(
             [ ( NablNsRule()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/26"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             ]
           )
         }
      , HideAll()
      , Axioms(
          [ TypingRule(
              PremiseList(
                JudgementCons(
                  FunctionExpJudgment(
                    FunctionExpApp(
                      "welltypedtable"{Use(Result(4882))}
                    , [FunctionExpMeta(Meta("TT1")), FunctionExpMeta(Meta("t"))]
                    )
                  )
                , JudgementCons(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "findCol"{Use(Result(4401))}
                        , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("t"))]
                        )
                      , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("crt"))])
                      )
                    )
                  , FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "project"{Use(Result(4605))}
                        , [FunctionExpMeta(Meta("ar")), FunctionExpMeta(Meta("t"))]
                        )
                      , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt"))])
                      )
                    )
                  )
                )
              )
            , RuleName("=================================================", "progress-attachColToFrontRaw-ind"{ Def(
                                                                                                                  URI(
                                                                                                                    Language("Veritas")
                                                                                                                  , [ ID(NablNsRule(), "progress-attachColToFrontRaw-ind", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                    , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                    ]
                                                                                                                  )
                                                                                                                )
                                                                                                              })
            , ConsequenceList(
                ExistsJudgment(
                  [Meta("rt2")]
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp(
                        "attachColToFrontRaw"{Use(Result(4906))}
                      , [FunctionExpMeta(Meta("crt")), FunctionExpMeta(Meta("rt"))]
                      )
                    , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt2"))])
                    )
                  )
                )
              )
            )
          ]
        )
      ]
    )
  , LemmasWithStrategy(
      "induction-progress-attachColToFrontRaw"
    , None()
    , [ TypingRule(
          PremiseList(
            JudgementCons(
              FunctionExpJudgment(
                FunctionExpApp(
                  "welltypedtable"{Use(Result(4882))}
                , [FunctionExpMeta(Meta("TT1")), FunctionExpMeta(Meta("t"))]
                )
              )
            , JudgementCons(
                FunctionExpJudgment(
                  FunctionExpEq(
                    FunctionExpApp(
                      "findCol"{Use(Result(4401))}
                    , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("t"))]
                    )
                  , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("crt"))])
                  )
                )
              , FunctionExpJudgment(
                  FunctionExpEq(
                    FunctionExpApp(
                      "project"{Use(Result(4605))}
                    , [FunctionExpMeta(Meta("ar")), FunctionExpMeta(Meta("t"))]
                    )
                  , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt"))])
                  )
                )
              )
            )
          )
        , RuleName("=================================================", "progress-attachColToFrontRaw"{ Def(
                                                                                                          URI(
                                                                                                            Language("Veritas")
                                                                                                          , [ ID(NablNsRule(), "progress-attachColToFrontRaw", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                            , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                            ]
                                                                                                          )
                                                                                                        )
                                                                                                      })
        , ConsequenceList(
            ExistsJudgment(
              [Meta("rt2")]
            , FunctionExpJudgment(
                FunctionExpEq(
                  FunctionExpApp(
                    "attachColToFrontRaw"{Use(Result(4906))}
                  , [FunctionExpMeta(Meta("crt")), FunctionExpMeta(Meta("rt"))]
                  )
                , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt2"))])
                )
              )
            )
          )
        )
      ]
    )
  , Strategy(
      "induction-progress-findCol"
    , []
    , [ Goals(
          None()
        , [ TypingRule(
              PremiseList(
                JudgementCons(
                  FunctionExpJudgment(
                    FunctionExpApp(
                      "welltypedtable"{Use(Result(4882))}
                    , [ FunctionExpMeta(Meta("TT1"))
                      , FunctionExpApp("table"{Use(Result(4399))}, [FunctionExpVar("aempty"{Use(Result(4397))}), FunctionExpMeta(Meta("rt"))])
                      ]
                    )
                  )
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp(
                        "projectType"{Use(Result(5055))}
                      , [ FunctionExpApp(
                            "acons"{Use(Result(4413))}
                          , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("ar"))]
                          )
                        , FunctionExpMeta(Meta("TT1"))
                        ]
                      )
                    , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("TT2"))])
                    )
                  )
                )
              )
            , RuleName("===============================================", "progress-findCol-aempty"{ Def(
                                                                                                       URI(
                                                                                                         Language("Veritas")
                                                                                                       , [ ID(NablNsRule(), "progress-findCol-aempty", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                         , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/27")
                                                                                                         , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                         ]
                                                                                                       )
                                                                                                     )
                                                                                                   })
            , ConsequenceList(
                ExistsJudgment(
                  [Meta("c")]
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp(
                        "findCol"{Use(Result(4401))}
                      , [ FunctionExpMeta(Meta("a"))
                        , FunctionExpApp("table"{Use(Result(4399))}, [FunctionExpVar("aempty"{Use(Result(4397))}), FunctionExpMeta(Meta("rt"))])
                        ]
                      )
                    , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("c"))])
                    )
                  )
                )
              )
            )
          ]
        ){ Scope(
             [ ( NablNsRule()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/27"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             ]
           )
         }
      , Local(
          [ Strategy(
              "progress-findCol-inductionstep"
            , [Import("sql.PreservationProjection"{Use(Result(5064))}, None())]
            , [ HideAll()
              , Consts(
                  [ ConstructorDecl("a"{ Def(
                                           URI(
                                             Language("Veritas")
                                           , [ ID(NablNsSymbol(), "a", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                             , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/29")
                                             , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                             ]
                                           )
                                         )
                                       }, [], SortRef("AName"{Use(Result(5072))}))
                  , ConstructorDecl("a2"{ Def(
                                            URI(
                                              Language("Veritas")
                                            , [ ID(NablNsSymbol(), "a2", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/29")
                                              , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              ]
                                            )
                                          )
                                        }, [], SortRef("AName"{Use(Result(5072))}))
                  , ConstructorDecl("al"{ Def(
                                            URI(
                                              Language("Veritas")
                                            , [ ID(NablNsSymbol(), "al", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/29")
                                              , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              ]
                                            )
                                          )
                                        }, [], SortRef("AList"{Use(Result(5079))}))
                  , ConstructorDecl("rt"{ Def(
                                            URI(
                                              Language("Veritas")
                                            , [ ID(NablNsSymbol(), "rt", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/29")
                                              , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                              ]
                                            )
                                          )
                                        }, [], SortRef("RawTable"{Use(Result(5083))}))
                  ]
                )
              , Axioms(
                  [ TypingRule(
                      PremiseList(
                        JudgementCons(
                          FunctionExpJudgment(
                            FunctionExpApp(
                              "welltypedtable"{Use(Result(5097))}
                            , [ FunctionExpMeta(Meta("TTR"))
                              , FunctionExpApp(
                                  "table"{Use(Result(5095))}
                                , [FunctionExpVar("al"{Use(Result(5089))}), FunctionExpApp("dropFirstColRaw"{Use(Result(5093))}, [FunctionExpVar("rt"{Use(Result(5091))})])]
                                )
                              ]
                            )
                          )
                        , FunctionExpJudgment(
                            FunctionExpEq(
                              FunctionExpApp("findColType"{Use(Result(5101))}, [FunctionExpVar("a"{Use(Result(5099))}), FunctionExpMeta(Meta("TTR"))])
                            , FunctionExpApp("some"{Use(Result(5103))}, [FunctionExpMeta(Meta("TTR2"))])
                            )
                          )
                        )
                      )
                    , RuleName("============================================================", "progress-findCol-acons-IH"{ Def(
                                                                                                                              URI(
                                                                                                                                Language("Veritas")
                                                                                                                              , [ ID(NablNsRule(), "progress-findCol-acons-IH", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/31")
                                                                                                                                , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                ]
                                                                                                                              )
                                                                                                                            )
                                                                                                                          })
                    , ConsequenceList(
                        ExistsJudgment(
                          [Meta("c")]
                        , FunctionExpJudgment(
                            FunctionExpEq(
                              FunctionExpApp(
                                "findCol"{Use(Result(5112))}
                              , [ FunctionExpVar("a"{Use(Result(5099))})
                                , FunctionExpApp(
                                    "table"{Use(Result(5095))}
                                  , [FunctionExpVar("al"{Use(Result(5089))}), FunctionExpApp("dropFirstColRaw"{Use(Result(5093))}, [FunctionExpVar("rt"{Use(Result(5091))})])]
                                  )
                                ]
                              )
                            , FunctionExpApp("some"{Use(Result(5103))}, [FunctionExpMeta(Meta("c"))])
                            )
                          )
                        )
                      )
                    )
                  ]
                )
              , Include(
                  [ "DropFirstCol-Preservation"
                  , "findColType0"
                  , "findColType1"
                  , "findColType2"
                  , "findColType-INV"
                  , "findCol0"
                  , "findCol1"
                  , "findCol2"
                  , "findCol-INV"
                  , "dropFirstColRaw0"
                  , "dropFirstColRaw1"
                  , "dropFirstColRaw2"
                  , "dropFirstColRaw-INV"
                  , "projectFirstRaw0"
                  , "projectFirstRaw1"
                  , "projectFirstRaw2"
                  , "projectFirstRaw-INV"
                  , "welltypedtable0"
                  , "matchingAList0"
                  , "matchingAList1"
                  , "matchingAList2"
                  , "rawType0"
                  , "rawType1"
                  , "rawType-INV"
                  , "welltypedRawtable0"
                  , "welltypedRawtable1"
                  , "welltypedRow0"
                  , "welltypedRow1"
                  , "welltypedRow2"
                  , "EQ-none"
                  , "EQ-some"
                  , "DIFF-none-some"
                  , "isSome0"
                  , "isSome1"
                  , "getSome0"
                  , "isSome-INV-1"
                  , "isSome-INV-2"
                  , "EQ-ctype"
                  , "EQ-aempty"
                  , "EQ-acons"
                  , "EQ-ttempty"
                  , "EQ-ttcons"
                  , "EQ-rtempty"
                  , "EQ-rtcons"
                  , "DIFF-aempty-acons"
                  , "DIFF-ttempty-ttcons"
                  , "DIFF-rtempty-rtcons"
                  , "EQ-rempty"
                  , "EQ-rcons"
                  , "EQ-tempty"
                  , "EQ-tcons"
                  , "EQ-table"
                  , "DIFF-rempty-rcons"
                  , "DIFF-tempty-tcons"
                  ]
                )
              , Strategy("exclude-IH", [], [Hide(["progress-findCol-acons-IH"])])
              , LemmasWithStrategy(
                  "exclude-IH"
                , None()
                , [ TypingRule(
                      PremiseList(
                        FunctionExpJudgment(
                          FunctionExpApp(
                            "welltypedtable"{Use(Result(5097))}
                          , [ FunctionExpMeta(Meta("TT1"))
                            , FunctionExpApp(
                                "table"{Use(Result(5095))}
                              , [ FunctionExpApp(
                                    "acons"{Use(Result(5115))}
                                  , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("al"))]
                                  )
                                , FunctionExpMeta(Meta("rt"))
                                ]
                              )
                            ]
                          )
                        )
                      )
                    , RuleName("===================================================", "welltypedtable-type"{ Def(
                                                                                                               URI(
                                                                                                                 Language("Veritas")
                                                                                                               , [ ID(NablNsRule(), "welltypedtable-type", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                 , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/31")
                                                                                                                 , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                 ]
                                                                                                               )
                                                                                                             )
                                                                                                           })
                    , ConsequenceList(
                        ExistsJudgment(
                          [Meta("ft"), Meta("TTR")]
                        , FunctionExpJudgment(
                            FunctionExpEq(
                              FunctionExpMeta(Meta("TT1"))
                            , FunctionExpApp(
                                "ttcons"{Use(Result(5123))}
                              , [ FunctionExpApp(
                                    "ctype"{Use(Result(5121))}
                                  , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("ft"))]
                                  )
                                , FunctionExpMeta(Meta("TTR"))
                                ]
                              )
                            )
                          )
                        )
                      )
                    )
                  ]
                )
              , LemmasWithStrategy(
                  "exclude-IH"
                , None()
                , [ TypingRule(
                      PremiseList(
                        FunctionExpJudgment(
                          FunctionExpApp(
                            "welltypedtable"{Use(Result(5097))}
                          , [ FunctionExpApp(
                                "ttcons"{Use(Result(5123))}
                              , [ FunctionExpApp(
                                    "ctype"{Use(Result(5121))}
                                  , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("ft"))]
                                  )
                                , FunctionExpMeta(Meta("TTR"))
                                ]
                              )
                            , FunctionExpApp(
                                "table"{Use(Result(5095))}
                              , [ FunctionExpApp(
                                    "acons"{Use(Result(5115))}
                                  , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("al"))]
                                  )
                                , FunctionExpMeta(Meta("rt"))
                                ]
                              )
                            ]
                          )
                        )
                      )
                    , RuleName("==========================================================================", "welltyped-subtable"{ Def(
                                                                                                                                     URI(
                                                                                                                                       Language("Veritas")
                                                                                                                                     , [ ID(NablNsRule(), "welltyped-subtable", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                       , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/31")
                                                                                                                                       , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                                       ]
                                                                                                                                     )
                                                                                                                                   )
                                                                                                                                 })
                    , ConsequenceList(
                        FunctionExpJudgment(
                          FunctionExpApp(
                            "welltypedtable"{Use(Result(5097))}
                          , [ FunctionExpMeta(Meta("TTR"))
                            , FunctionExpApp(
                                "table"{Use(Result(5095))}
                              , [FunctionExpMeta(Meta("al")), FunctionExpApp("dropFirstColRaw"{Use(Result(5093))}, [FunctionExpMeta(Meta("rt"))])]
                              )
                            ]
                          )
                        )
                      )
                    )
                  ]
                )
              ]
            )
          , GoalsWithStrategy(
              "progress-findCol-inductionstep"
            , None()
            , [ TypingRule(
                  PremiseList(
                    JudgementCons(
                      FunctionExpJudgment(
                        FunctionExpApp(
                          "welltypedtable"{Use(Result(5097))}
                        , [ FunctionExpMeta(Meta("TT1"))
                          , FunctionExpApp(
                              "table"{Use(Result(5095))}
                            , [FunctionExpApp("acons"{Use(Result(5115))}, [FunctionExpVar("a2"{Use(Result(5135))}), FunctionExpVar("al"{Use(Result(5089))})]), FunctionExpVar("rt"{Use(Result(5091))})]
                            )
                          ]
                        )
                      )
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp("findColType"{Use(Result(5101))}, [FunctionExpVar("a"{Use(Result(5099))}), FunctionExpMeta(Meta("TT1"))])
                        , FunctionExpApp("some"{Use(Result(5103))}, [FunctionExpMeta(Meta("TT2"))])
                        )
                      )
                    )
                  )
                , RuleName("====================================================", "progress-findCol-acons"{ Def(
                                                                                                               URI(
                                                                                                                 Language("Veritas")
                                                                                                               , [ ID(NablNsRule(), "progress-findCol-acons", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                 , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/31")
                                                                                                                 , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                                 ]
                                                                                                               )
                                                                                                             )
                                                                                                           })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("c")]
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp(
                            "findCol"{Use(Result(5112))}
                          , [ FunctionExpVar("a"{Use(Result(5099))})
                            , FunctionExpApp(
                                "table"{Use(Result(5095))}
                              , [FunctionExpApp("acons"{Use(Result(5115))}, [FunctionExpVar("a2"{Use(Result(5135))}), FunctionExpVar("al"{Use(Result(5089))})]), FunctionExpVar("rt"{Use(Result(5091))})]
                              )
                            ]
                          )
                        , FunctionExpApp("some"{Use(Result(5103))}, [FunctionExpMeta(Meta("c"))])
                        )
                      )
                    )
                  )
                )
              ]
            )
          ]
        ){ Scope(
             [ ( NablNsSort()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/28"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             , ( NablNsSymbol()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/29"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             , ( NablNsAxiom()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/30"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             , ( NablNsRule()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/31"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             ]
           )
         }
      , Axioms(
          [ TypingRule(
              PremiseList(
                JudgementCons(
                  FunctionExpJudgment(
                    FunctionExpApp(
                      "welltypedtable"{Use(Result(4882))}
                    , [FunctionExpMeta(Meta("TT1")), FunctionExpMeta(Meta("t"))]
                    )
                  )
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp(
                        "findColType"{Use(Result(5156))}
                      , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("TT1"))]
                      )
                    , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("TT2"))])
                    )
                  )
                )
              )
            , RuleName("===============================================", "progress-findCol-ind"{ Def(
                                                                                                    URI(
                                                                                                      Language("Veritas")
                                                                                                    , [ ID(NablNsRule(), "progress-findCol-ind", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                      , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                      ]
                                                                                                    )
                                                                                                  )
                                                                                                })
            , ConsequenceList(
                ExistsJudgment(
                  [Meta("c")]
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp(
                        "findCol"{Use(Result(4401))}
                      , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("t"))]
                      )
                    , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("c"))])
                    )
                  )
                )
              )
            )
          ]
        )
      ]
    )
  , LemmasWithStrategy(
      "induction-progress-findCol"
    , None()
    , [ TypingRule(
          PremiseList(
            JudgementCons(
              FunctionExpJudgment(
                FunctionExpApp(
                  "welltypedtable"{Use(Result(4882))}
                , [FunctionExpMeta(Meta("TT1")), FunctionExpMeta(Meta("t"))]
                )
              )
            , FunctionExpJudgment(
                FunctionExpEq(
                  FunctionExpApp(
                    "findColType"{Use(Result(5156))}
                  , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("TT1"))]
                  )
                , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("TT2"))])
                )
              )
            )
          )
        , RuleName("===============================================", "progress-findCol"{ Def(
                                                                                            URI(
                                                                                              Language("Veritas")
                                                                                            , [ ID(NablNsRule(), "progress-findCol", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                              , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                              ]
                                                                                            )
                                                                                          )
                                                                                        })
        , ConsequenceList(
            ExistsJudgment(
              [Meta("c")]
            , FunctionExpJudgment(
                FunctionExpEq(
                  FunctionExpApp(
                    "findCol"{Use(Result(4401))}
                  , [FunctionExpMeta(Meta("a")), FunctionExpMeta(Meta("t"))]
                  )
                , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("c"))])
                )
              )
            )
          )
        )
      ]
    )
  , Strategy(
      "induction-progress-projection"
    , []
    , [ Consts([ConstructorDecl("ar"{ Def(
                                        URI(
                                          Language("Veritas")
                                        , [ ID(NablNsSymbol(), "ar", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                          , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                          ]
                                        )
                                      )
                                    }, [], SortRef("AList"{Use(Result(5173))}))])
      , Goals(
          None()
        , [ TypingRule(
              PremiseList(
                JudgementCons(
                  FunctionExpJudgment(
                    FunctionExpApp(
                      "StoreContextConsistent"{Use(Result(5175))}
                    , [FunctionExpMeta(Meta("TS")), FunctionExpMeta(Meta("TTC"))]
                    )
                  )
                , JudgementCons(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "clookup"{Use(Result(5177))}
                        , [FunctionExpMeta(Meta("tn")), FunctionExpMeta(Meta("TTC"))]
                        )
                      , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("TT1"))])
                      )
                    )
                  , JudgementCons(
                      FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp(
                            "lookup"{Use(Result(5180))}
                          , [FunctionExpMeta(Meta("tn")), FunctionExpMeta(Meta("TS"))]
                          )
                        , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("t"))])
                        )
                      )
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp("projectType"{Use(Result(5055))}, [FunctionExpVar("aempty"{Use(Result(4397))}), FunctionExpMeta(Meta("TT1"))])
                        , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("TT2"))])
                        )
                      )
                    )
                  )
                )
              )
            , RuleName("======================================", "progress-projection-aempty"{ Def(
                                                                                                 URI(
                                                                                                   Language("Veritas")
                                                                                                 , [ ID(NablNsRule(), "progress-projection-aempty", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                   , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/32")
                                                                                                   , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                   ]
                                                                                                 )
                                                                                               )
                                                                                             })
            , ConsequenceList(
                ExistsJudgment(
                  [Meta("t2")]
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp("project"{Use(Result(4605))}, [FunctionExpVar("aempty"{Use(Result(4397))}), FunctionExpMeta(Meta("t"))])
                    , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("t2"))])
                    )
                  )
                )
              )
            )
          ]
        ){ Scope(
             [ ( NablNsRule()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/32"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             ]
           )
         }
      , Local(
          [ HideAll()
          , Axioms(
              [ TypingRule(
                  PremiseList(
                    JudgementCons(
                      FunctionExpJudgment(
                        FunctionExpApp(
                          "StoreContextConsistent"{Use(Result(5195))}
                        , [FunctionExpMeta(Meta("TS")), FunctionExpMeta(Meta("TTC"))]
                        )
                      )
                    , JudgementCons(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "clookup"{Use(Result(5197))}
                            , [FunctionExpMeta(Meta("tn")), FunctionExpMeta(Meta("TTC"))]
                            )
                          , FunctionExpApp("some"{Use(Result(5199))}, [FunctionExpMeta(Meta("TT1"))])
                          )
                        )
                      , JudgementCons(
                          FunctionExpJudgment(
                            FunctionExpEq(
                              FunctionExpApp(
                                "lookup"{Use(Result(5201))}
                              , [FunctionExpMeta(Meta("tn")), FunctionExpMeta(Meta("TS"))]
                              )
                            , FunctionExpApp("some"{Use(Result(5199))}, [FunctionExpMeta(Meta("t"))])
                            )
                          )
                        , FunctionExpJudgment(
                            FunctionExpEq(
                              FunctionExpApp("projectType"{Use(Result(5206))}, [FunctionExpVar("ar"{Use(Result(5204))}), FunctionExpMeta(Meta("TT1"))])
                            , FunctionExpApp("some"{Use(Result(5199))}, [FunctionExpMeta(Meta("TT2"))])
                            )
                          )
                        )
                      )
                    )
                  )
                , RuleName("======================================", "progress-projection-acons-IH"{ Def(
                                                                                                       URI(
                                                                                                         Language("Veritas")
                                                                                                       , [ ID(NablNsRule(), "progress-projection-acons-IH", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                         , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/36")
                                                                                                         , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                         ]
                                                                                                       )
                                                                                                     )
                                                                                                   })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("rt")]
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp("project"{Use(Result(5212))}, [FunctionExpVar("ar"{Use(Result(5204))}), FunctionExpMeta(Meta("t"))])
                        , FunctionExpApp("some"{Use(Result(5199))}, [FunctionExpMeta(Meta("rt"))])
                        )
                      )
                    )
                  )
                )
              ]
            )
          , Include(
              [ "progress-findCol"
              , "progress-attachColToFrontRaw"
              , "StoreContext-Lookup-WT"
              , "project0"
              , "project1"
              , "project2"
              , "project-INV"
              , "projectType0"
              , "projectType1"
              , "projectType2"
              , "projectType-INV"
              , "findColType0"
              , "findColType1"
              , "findColType2"
              , "findColType-INV"
              , "EQ-none"
              , "EQ-some"
              , "DIFF-none-some"
              , "isSome0"
              , "isSome1"
              , "getSome0"
              , "isSome-INV-1"
              , "isSome-INV-2"
              , "EQ-ctype"
              , "EQ-aempty"
              , "EQ-acons"
              , "EQ-ttempty"
              , "EQ-ttcons"
              , "EQ-rtempty"
              , "EQ-rtcons"
              , "DIFF-aempty-acons"
              , "DIFF-ttempty-ttcons"
              , "DIFF-rtempty-rtcons"
              , "EQ-rempty"
              , "EQ-rcons"
              , "EQ-tempty"
              , "EQ-tcons"
              , "EQ-table"
              , "DIFF-rempty-rcons"
              , "DIFF-tempty-tcons"
              , "lookup0"
              , "lookup1"
              , "lookup2"
              , "lookup-INV"
              , "clookup0"
              , "clookup1"
              , "clookup2"
              , "clookup-INV"
              ]
            )
          , Goals(
              Some("40")
            , [ TypingRule(
                  PremiseList(
                    JudgementCons(
                      FunctionExpJudgment(
                        FunctionExpApp(
                          "StoreContextConsistent"{Use(Result(5195))}
                        , [FunctionExpMeta(Meta("TS")), FunctionExpMeta(Meta("TTC"))]
                        )
                      )
                    , JudgementCons(
                        FunctionExpJudgment(
                          FunctionExpEq(
                            FunctionExpApp(
                              "clookup"{Use(Result(5197))}
                            , [FunctionExpMeta(Meta("tn")), FunctionExpMeta(Meta("TTC"))]
                            )
                          , FunctionExpApp("some"{Use(Result(5199))}, [FunctionExpMeta(Meta("TT1"))])
                          )
                        )
                      , JudgementCons(
                          FunctionExpJudgment(
                            FunctionExpEq(
                              FunctionExpApp(
                                "lookup"{Use(Result(5201))}
                              , [FunctionExpMeta(Meta("tn")), FunctionExpMeta(Meta("TS"))]
                              )
                            , FunctionExpApp("some"{Use(Result(5199))}, [FunctionExpMeta(Meta("t"))])
                            )
                          )
                        , FunctionExpJudgment(
                            FunctionExpEq(
                              FunctionExpApp(
                                "projectType"{Use(Result(5206))}
                              , [ FunctionExpApp("acons"{Use(Result(5221))}, [FunctionExpMeta(Meta("a")), FunctionExpVar("ar"{Use(Result(5204))})])
                                , FunctionExpMeta(Meta("TT1"))
                                ]
                              )
                            , FunctionExpApp("some"{Use(Result(5199))}, [FunctionExpMeta(Meta("TT2"))])
                            )
                          )
                        )
                      )
                    )
                  )
                , RuleName("===============================================", "progress-projection-acons"{ Def(
                                                                                                             URI(
                                                                                                               Language("Veritas")
                                                                                                             , [ ID(NablNsRule(), "progress-projection-acons", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                               , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0")
                                                                                                               , Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/36")
                                                                                                               , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                               ]
                                                                                                             )
                                                                                                           )
                                                                                                         })
                , ConsequenceList(
                    ExistsJudgment(
                      [Meta("rt")]
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp(
                            "project"{Use(Result(5212))}
                          , [ FunctionExpApp("acons"{Use(Result(5221))}, [FunctionExpMeta(Meta("a")), FunctionExpVar("ar"{Use(Result(5204))})])
                            , FunctionExpMeta(Meta("t"))
                            ]
                          )
                        , FunctionExpApp("some"{Use(Result(5199))}, [FunctionExpMeta(Meta("rt"))])
                        )
                      )
                    )
                  )
                )
              ]
            ){ Scope(
                 [ ( NablNsRule()
                   , URI(
                       Language("Veritas")
                     , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"), Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/36"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                     )
                   )
                 ]
               )
             }
          ]
        ){ Scope(
             [ ( NablNsSort()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/33"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             , ( NablNsSymbol()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/34"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             , ( NablNsAxiom()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/35"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             , ( NablNsRule()
               , URI(
                   Language("Veritas")
                 , [Anonymous("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/36"), ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))]
                 )
               )
             ]
           )
         }
      , HideAll()
      , Axioms(
          [ TypingRule(
              PremiseList(
                JudgementCons(
                  FunctionExpJudgment(
                    FunctionExpApp(
                      "StoreContextConsistent"{Use(Result(5175))}
                    , [FunctionExpMeta(Meta("TS")), FunctionExpMeta(Meta("TTC"))]
                    )
                  )
                , JudgementCons(
                    FunctionExpJudgment(
                      FunctionExpEq(
                        FunctionExpApp(
                          "clookup"{Use(Result(5177))}
                        , [FunctionExpMeta(Meta("tn")), FunctionExpMeta(Meta("TTC"))]
                        )
                      , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("TT1"))])
                      )
                    )
                  , JudgementCons(
                      FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp(
                            "lookup"{Use(Result(5180))}
                          , [FunctionExpMeta(Meta("tn")), FunctionExpMeta(Meta("TS"))]
                          )
                        , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("t"))])
                        )
                      )
                    , FunctionExpJudgment(
                        FunctionExpEq(
                          FunctionExpApp(
                            "projectType"{Use(Result(5055))}
                          , [FunctionExpMeta(Meta("al")), FunctionExpMeta(Meta("TT1"))]
                          )
                        , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("TT2"))])
                        )
                      )
                    )
                  )
                )
              )
            , RuleName("======================================", "progress-projection-ind"{ Def(
                                                                                              URI(
                                                                                                Language("Veritas")
                                                                                              , [ ID(NablNsRule(), "progress-projection-ind", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                                ]
                                                                                              )
                                                                                            )
                                                                                          })
            , ConsequenceList(
                ExistsJudgment(
                  [Meta("rt")]
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp(
                        "project"{Use(Result(4605))}
                      , [FunctionExpMeta(Meta("al")), FunctionExpMeta(Meta("t"))]
                      )
                    , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt"))])
                    )
                  )
                )
              )
            )
          ]
        )
      ]
    )
  , LemmasWithStrategy(
      "induction-progress-projection"
    , None()
    , [ TypingRule(
          PremiseList(
            JudgementCons(
              FunctionExpJudgment(
                FunctionExpApp(
                  "StoreContextConsistent"{Use(Result(5175))}
                , [FunctionExpMeta(Meta("TS")), FunctionExpMeta(Meta("TTC"))]
                )
              )
            , JudgementCons(
                FunctionExpJudgment(
                  FunctionExpEq(
                    FunctionExpApp(
                      "clookup"{Use(Result(5177))}
                    , [FunctionExpMeta(Meta("tn")), FunctionExpMeta(Meta("TTC"))]
                    )
                  , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("TT1"))])
                  )
                )
              , JudgementCons(
                  FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp(
                        "lookup"{Use(Result(5180))}
                      , [FunctionExpMeta(Meta("tn")), FunctionExpMeta(Meta("TS"))]
                      )
                    , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("t"))])
                    )
                  )
                , FunctionExpJudgment(
                    FunctionExpEq(
                      FunctionExpApp(
                        "projectType"{Use(Result(5055))}
                      , [FunctionExpMeta(Meta("al")), FunctionExpMeta(Meta("TT1"))]
                      )
                    , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("TT2"))])
                    )
                  )
                )
              )
            )
          )
        , RuleName("======================================", "progress-projection"{ Def(
                                                                                      URI(
                                                                                        Language("Veritas")
                                                                                      , [ ID(NablNsRule(), "progress-projection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                        , ID(NablNsModule(), "sql.ProgressProjection", Unique("C:/Users/Daniel/Documents/HiWi Veritas/[Github offizielles Repo]/Veritas/test/sql/ProgressProjection.stl/0"))
                                                                                        ]
                                                                                      )
                                                                                    )
                                                                                  })
        , ConsequenceList(
            ExistsJudgment(
              [Meta("rt")]
            , FunctionExpJudgment(
                FunctionExpEq(
                  FunctionExpApp(
                    "project"{Use(Result(4605))}
                  , [FunctionExpMeta(Meta("al")), FunctionExpMeta(Meta("t"))]
                  )
                , FunctionExpApp("some"{Use(Result(4409))}, [FunctionExpMeta(Meta("rt"))])
                )
              )
            )
          )
        )
      ]
    )
  ]
)