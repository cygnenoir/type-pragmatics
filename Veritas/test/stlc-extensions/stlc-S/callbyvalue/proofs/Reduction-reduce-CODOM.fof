
fof('reduce0', axiom, (![Vx,VExp0,RESULT] : ((VExp0=vvar(Vx)) => ((RESULT=vreduce(VExp0)) => (RESULT=vnoExp))))).
fof('reduce1', axiom, (![Vx,VS,Ve,VExp0,RESULT] : ((VExp0=vabs(Vx,VS,Ve)) => ((RESULT=vreduce(VExp0)) => (RESULT=vnoExp))))).
fof('reduce2', axiom, (![Ve2,VExp0,RESULT,Vx,VS,Ve1,Ve2red] : ((VExp0=vapp(vabs(Vx,VS,Ve1),Ve2)) => (((Ve2red=vreduce(Ve2)) & visSomeExp(Ve2red)) => ((RESULT=vreduce(VExp0)) => (RESULT=vsomeExp(vapp(vabs(Vx,VS,Ve1),vgetSomeExp(Ve2red))))))))).
fof('reduce3', axiom, (![VS,Ve2red,VExp0,RESULT,Vx,Ve2,Ve1] : ((VExp0=vapp(vabs(Vx,VS,Ve1),Ve2)) => (((Ve2red=vreduce(Ve2)) & ((~visSomeExp(Ve2red)) & visValue(Ve2))) => ((RESULT=vreduce(VExp0)) => (RESULT=vsomeExp(vsubst(Vx,Ve2,Ve1)))))))).
fof('reduce4', axiom, (![Vx,VS,Ve1,Ve2red,Ve2,VExp0,RESULT] : ((VExp0=vapp(vabs(Vx,VS,Ve1),Ve2)) => (((Ve2red=vreduce(Ve2)) & ((~visSomeExp(Ve2red)) & (~visValue(Ve2)))) => ((RESULT=vreduce(VExp0)) => (RESULT=vnoExp)))))).
fof('reduce5', axiom, (![Ve1,VExp0,RESULT,Ve1red,Ve2] : (((VExp0=vapp(Ve1,Ve2)) & (![VVx0,VVS0,VVe10] : (Ve1!=vabs(VVx0,VVS0,VVe10)))) => (((Ve1red=vreduce(Ve1)) & visSomeExp(Ve1red)) => ((RESULT=vreduce(VExp0)) => (RESULT=vsomeExp(vapp(vgetSomeExp(Ve1red),Ve2)))))))).
fof('reduce6', axiom, (![Ve2,Ve1,Ve1red,VExp0,RESULT] : (((VExp0=vapp(Ve1,Ve2)) & (![VVx0,VVS0,VVe10] : (Ve1!=vabs(VVx0,VVS0,VVe10)))) => (((Ve1red=vreduce(Ve1)) & (~visSomeExp(Ve1red))) => ((RESULT=vreduce(VExp0)) => (RESULT=vnoExp)))))).
fof('reduce7', axiom, (![VT,Vx2,Vt2,VExp0,RESULT,Vx1,Vv,Vt1] : ((VExp0=vcase(vinl(Vv,VT),Vx1,Vt1,Vx2,Vt2)) => (visValue(Vv) => ((RESULT=vreduce(VExp0)) => (RESULT=vsomeExp(vsubst(Vx1,Vv,Vt1)))))))).
fof('reduce8', axiom, (![Vv,VExp0,RESULT,Vvred,VT,Vx1,Vt1,Vx2,Vt2] : ((VExp0=vcase(vinl(Vv,VT),Vx1,Vt1,Vx2,Vt2)) => (((~visValue(Vv)) & ((Vvred=vreduce(Vv)) & visSomeExp(Vvred))) => ((RESULT=vreduce(VExp0)) => (RESULT=vsomeExp(vcase(vinl(vgetSomeExp(Vvred),VT),Vx1,Vt1,Vx2,Vt2)))))))).
fof('reduce9', axiom, (![VT,Vx1,Vt1,Vx2,Vt2,Vv,Vvred,VExp0,RESULT] : ((VExp0=vcase(vinl(Vv,VT),Vx1,Vt1,Vx2,Vt2)) => (((~visValue(Vv)) & ((Vvred=vreduce(Vv)) & (~visSomeExp(Vvred)))) => ((RESULT=vreduce(VExp0)) => (RESULT=vnoExp)))))).
fof('reduce10', axiom, (![VT,Vx1,Vt1,VExp0,RESULT,Vx2,Vv,Vt2] : ((VExp0=vcase(vinr(Vv,VT),Vx1,Vt1,Vx2,Vt2)) => (visValue(Vv) => ((RESULT=vreduce(VExp0)) => (RESULT=vsomeExp(vsubst(Vx2,Vv,Vt2)))))))).
fof('reduce11', axiom, (![Vv,VExp0,RESULT,Vvred,VT,Vx1,Vt1,Vx2,Vt2] : ((VExp0=vcase(vinr(Vv,VT),Vx1,Vt1,Vx2,Vt2)) => (((~visValue(Vv)) & ((Vvred=vreduce(Vv)) & visSomeExp(Vvred))) => ((RESULT=vreduce(VExp0)) => (RESULT=vsomeExp(vcase(vinr(vgetSomeExp(Vvred),VT),Vx1,Vt1,Vx2,Vt2)))))))).
fof('reduce12', axiom, (![VT,Vx1,Vt1,Vx2,Vt2,Vv,Vvred,VExp0,RESULT] : ((VExp0=vcase(vinr(Vv,VT),Vx1,Vt1,Vx2,Vt2)) => (((~visValue(Vv)) & ((Vvred=vreduce(Vv)) & (~visSomeExp(Vvred)))) => ((RESULT=vreduce(VExp0)) => (RESULT=vnoExp)))))).
fof('reduce13', axiom, (![Ve,VExp0,RESULT,Vered,VT] : ((VExp0=vinl(Ve,VT)) => (((Vered=vreduce(Ve)) & visSomeExp(Vered)) => ((RESULT=vreduce(VExp0)) => (RESULT=vsomeExp(vinl(vgetSomeExp(Vered),VT)))))))).
fof('reduce14', axiom, (![VT,Ve,Vered,VExp0,RESULT] : ((VExp0=vinl(Ve,VT)) => (((Vered=vreduce(Ve)) & (~visSomeExp(Vered))) => ((RESULT=vreduce(VExp0)) => (RESULT=vnoExp)))))).
fof('reduce15', axiom, (![Ve,VExp0,RESULT,Vered,VT] : ((VExp0=vinr(Ve,VT)) => (((Vered=vreduce(Ve)) & visSomeExp(Vered)) => ((RESULT=vreduce(VExp0)) => (RESULT=vsomeExp(vinr(vgetSomeExp(Vered),VT)))))))).
fof('reduce16', axiom, (![VT,Ve,Vered,VExp0,RESULT] : ((VExp0=vinr(Ve,VT)) => (((Vered=vreduce(Ve)) & (~visSomeExp(Vered))) => ((RESULT=vreduce(VExp0)) => (RESULT=vnoExp)))))).
fof('reduce17', axiom, (![Vered,VExp0,RESULT,Ve,Vx1,Vt1,Vx2,Vt2] : (((VExp0=vcase(Ve,Vx1,Vt1,Vx2,Vt2)) & ((![VVv0,VVT0] : (Ve!=vinr(VVv0,VVT0))) & (![VVv1,VVT1] : (Ve!=vinl(VVv1,VVT1))))) => (((Vered=vreduce(Ve)) & visSomeExp(Ve)) => ((RESULT=vreduce(VExp0)) => (RESULT=vsomeExp(vcase(vgetSomeExp(Ve),Vx1,Vt1,Vx2,Vt2)))))))).
fof('reduce18', axiom, (![Vx1,Vt1,Vx2,Vt2,Vered,Ve,VExp0,RESULT] : (((VExp0=vcase(Ve,Vx1,Vt1,Vx2,Vt2)) & ((![VVv0,VVT0] : (Ve!=vinr(VVv0,VVT0))) & (![VVv1,VVT1] : (Ve!=vinl(VVv1,VVT1))))) => (((Vered=vreduce(Ve)) & (~visSomeExp(Ve))) => ((RESULT=vreduce(VExp0)) => (RESULT=vnoExp)))))).
fof('reduce-INV', axiom, (![VExp0,RESULT] : ((reduce(VExp0)=RESULT) => ((?[Vx] : ((VExp0=vvar(Vx)) & (RESULT=vnoExp))) | ((?[Vx,VS,Ve] : ((VExp0=vabs(Vx,VS,Ve)) & (RESULT=vnoExp))) | ((?[Ve2,Vx,VS,Ve1,Ve2red] : ((VExp0=vapp(vabs(Vx,VS,Ve1),Ve2)) & ((Ve2red=vreduce(Ve2)) & (visSomeExp(Ve2red) & (RESULT=vsomeExp(vapp(vabs(Vx,VS,Ve1),vgetSomeExp(Ve2red)))))))) | ((?[VS,Ve2red,Vx,Ve2,Ve1] : ((VExp0=vapp(vabs(Vx,VS,Ve1),Ve2)) & ((Ve2red=vreduce(Ve2)) & ((~visSomeExp(Ve2red)) & (visValue(Ve2) & (RESULT=vsomeExp(vsubst(Vx,Ve2,Ve1)))))))) | ((?[Vx,VS,Ve1,Ve2red,Ve2] : ((VExp0=vapp(vabs(Vx,VS,Ve1),Ve2)) & ((Ve2red=vreduce(Ve2)) & ((~visSomeExp(Ve2red)) & ((~visValue(Ve2)) & (RESULT=vnoExp)))))) | ((?[Ve1,Ve1red,Ve2] : ((VExp0=vapp(Ve1,Ve2)) & ((![VVx0,VVS0,VVe10] : (Ve1!=vabs(VVx0,VVS0,VVe10))) & ((Ve1red=vreduce(Ve1)) & (visSomeExp(Ve1red) & (RESULT=vsomeExp(vapp(vgetSomeExp(Ve1red),Ve2)))))))) | ((?[Ve2,Ve1,Ve1red] : ((VExp0=vapp(Ve1,Ve2)) & ((![VVx0,VVS0,VVe10] : (Ve1!=vabs(VVx0,VVS0,VVe10))) & ((Ve1red=vreduce(Ve1)) & ((~visSomeExp(Ve1red)) & (RESULT=vnoExp)))))) | ((?[VT,Vx2,Vt2,Vx1,Vv,Vt1] : ((VExp0=vcase(vinl(Vv,VT),Vx1,Vt1,Vx2,Vt2)) & (visValue(Vv) & (RESULT=vsomeExp(vsubst(Vx1,Vv,Vt1)))))) | ((?[Vv,Vvred,VT,Vx1,Vt1,Vx2,Vt2] : ((VExp0=vcase(vinl(Vv,VT),Vx1,Vt1,Vx2,Vt2)) & ((~visValue(Vv)) & ((Vvred=vreduce(Vv)) & (visSomeExp(Vvred) & (RESULT=vsomeExp(vcase(vinl(vgetSomeExp(Vvred),VT),Vx1,Vt1,Vx2,Vt2)))))))) | ((?[VT,Vx1,Vt1,Vx2,Vt2,Vv,Vvred] : ((VExp0=vcase(vinl(Vv,VT),Vx1,Vt1,Vx2,Vt2)) & ((~visValue(Vv)) & ((Vvred=vreduce(Vv)) & ((~visSomeExp(Vvred)) & (RESULT=vnoExp)))))) | ((?[VT,Vx1,Vt1,Vx2,Vv,Vt2] : ((VExp0=vcase(vinr(Vv,VT),Vx1,Vt1,Vx2,Vt2)) & (visValue(Vv) & (RESULT=vsomeExp(vsubst(Vx2,Vv,Vt2)))))) | ((?[Vv,Vvred,VT,Vx1,Vt1,Vx2,Vt2] : ((VExp0=vcase(vinr(Vv,VT),Vx1,Vt1,Vx2,Vt2)) & ((~visValue(Vv)) & ((Vvred=vreduce(Vv)) & (visSomeExp(Vvred) & (RESULT=vsomeExp(vcase(vinr(vgetSomeExp(Vvred),VT),Vx1,Vt1,Vx2,Vt2)))))))) | ((?[VT,Vx1,Vt1,Vx2,Vt2,Vv,Vvred] : ((VExp0=vcase(vinr(Vv,VT),Vx1,Vt1,Vx2,Vt2)) & ((~visValue(Vv)) & ((Vvred=vreduce(Vv)) & ((~visSomeExp(Vvred)) & (RESULT=vnoExp)))))) | ((?[Ve,Vered,VT] : ((VExp0=vinl(Ve,VT)) & ((Vered=vreduce(Ve)) & (visSomeExp(Vered) & (RESULT=vsomeExp(vinl(vgetSomeExp(Vered),VT))))))) | ((?[VT,Ve,Vered] : ((VExp0=vinl(Ve,VT)) & ((Vered=vreduce(Ve)) & ((~visSomeExp(Vered)) & (RESULT=vnoExp))))) | ((?[Ve,Vered,VT] : ((VExp0=vinr(Ve,VT)) & ((Vered=vreduce(Ve)) & (visSomeExp(Vered) & (RESULT=vsomeExp(vinr(vgetSomeExp(Vered),VT))))))) | ((?[VT,Ve,Vered] : ((VExp0=vinr(Ve,VT)) & ((Vered=vreduce(Ve)) & ((~visSomeExp(Vered)) & (RESULT=vnoExp))))) | ((?[Vered,Ve,Vx1,Vt1,Vx2,Vt2] : ((VExp0=vcase(Ve,Vx1,Vt1,Vx2,Vt2)) & ((![VVv0,VVT0] : (Ve!=vinr(VVv0,VVT0))) & ((![VVv1,VVT1] : (Ve!=vinl(VVv1,VVT1))) & ((Vered=vreduce(Ve)) & (visSomeExp(Ve) & (RESULT=vsomeExp(vcase(vgetSomeExp(Ve),Vx1,Vt1,Vx2,Vt2))))))))) | (?[Vx1,Vt1,Vx2,Vt2,Vered,Ve] : ((VExp0=vcase(Ve,Vx1,Vt1,Vx2,Vt2)) & ((![VVv0,VVT0] : (Ve!=vinr(VVv0,VVT0))) & ((![VVv1,VVT1] : (Ve!=vinl(VVv1,VVT1))) & ((Vered=vreduce(Ve)) & ((~visSomeExp(Ve)) & (RESULT=vnoExp)))))))))))))))))))))))))))).
fof('reduce-CODOM', conjecture, (![Ve,Vres] : ((vreduce(Ve)=Vres) => ((Vres=vnoExp) | (?[Ve2] : (Vres=vsomeExp(Ve2))))))).