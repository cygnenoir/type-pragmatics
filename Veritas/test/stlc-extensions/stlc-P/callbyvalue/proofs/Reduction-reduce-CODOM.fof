
fof('reduce-INV', axiom, (![VExp0,RESULT] : ((vreduce(VExp0)=RESULT) => ((?[Ve2,Ve1,Ve2red] : ((VExp0=vpair(Ve1,Ve2)) & (visValue(Ve1) & ((Ve2red=vreduce(Ve2)) & (visSomeExp(Ve2red) & (RESULT=vsomeExp(vpair(Ve1,vgetSomeExp(Ve2red))))))))) | ((?[Ve1,Ve2,Ve2red] : ((VExp0=vpair(Ve1,Ve2)) & (visValue(Ve1) & ((Ve2red=vreduce(Ve2)) & ((~visSomeExp(Ve2red)) & (RESULT=vnoExp)))))) | ((?[Ve1,Ve1red,Ve2] : ((VExp0=vpair(Ve1,Ve2)) & ((~visValue(Ve1)) & ((Ve1red=vreduce(Ve1)) & (visSomeExp(Ve1red) & (RESULT=vsomeExp(vpair(vgetSomeExp(Ve1red),Ve2)))))))) | ((?[Ve2,Ve1,Ve1red] : ((VExp0=vpair(Ve1,Ve2)) & ((~visValue(Ve1)) & ((Ve1red=vreduce(Ve1)) & ((~visSomeExp(Ve1red)) & (RESULT=vnoExp)))))) | ((?[Vpred,Ve2,Ve1] : ((VExp0=vfirst(vpair(Ve1,Ve2))) & ((Vpred=vreduce(vpair(Ve1,Ve2))) & (visValue(vpair(Ve1,Ve2)) & (RESULT=vsomeExp(Ve1)))))) | ((?[Ve1,Ve2,Vpred] : ((VExp0=vfirst(vpair(Ve1,Ve2))) & ((Vpred=vreduce(vpair(Ve1,Ve2))) & ((~visValue(vpair(Ve1,Ve2))) & (visSomeExp(Vpred) & (RESULT=vsomeExp(vfirst(vgetSomeExp(Vpred))))))))) | ((?[Ve1,Ve2,Vpred] : ((VExp0=vfirst(vpair(Ve1,Ve2))) & ((Vpred=vreduce(vpair(Ve1,Ve2))) & ((~visValue(vpair(Ve1,Ve2))) & ((~visSomeExp(Vpred)) & (RESULT=vnoExp)))))) | ((?[Ve,Vered] : ((VExp0=vfirst(Ve)) & ((![VVe10,VVe20] : (Ve!=vpair(VVe10,VVe20))) & ((Vered=vreduce(Ve)) & (visSomeExp(Vered) & (RESULT=vsomeExp(vfirst(vgetSomeExp(Vered))))))))) | ((?[Ve,Vered] : ((VExp0=vfirst(Ve)) & ((![VVe10,VVe20] : (Ve!=vpair(VVe10,VVe20))) & ((Vered=vreduce(Ve)) & ((~visSomeExp(Vered)) & (RESULT=vnoExp)))))) | ((?[Vpred,Ve1,Ve2] : ((VExp0=vsecond(vpair(Ve1,Ve2))) & ((Vpred=vreduce(vpair(Ve1,Ve2))) & (visValue(vpair(Ve1,Ve2)) & (RESULT=vsomeExp(Ve2)))))) | ((?[Ve1,Ve2,Vpred] : ((VExp0=vsecond(vpair(Ve1,Ve2))) & ((Vpred=vreduce(vpair(Ve1,Ve2))) & ((~visValue(vpair(Ve1,Ve2))) & (visSomeExp(Vpred) & (RESULT=vsomeExp(vsecond(vgetSomeExp(Vpred))))))))) | ((?[Ve1,Ve2,Vpred] : ((VExp0=vsecond(vpair(Ve1,Ve2))) & ((Vpred=vreduce(vpair(Ve1,Ve2))) & ((~visValue(vpair(Ve1,Ve2))) & ((~visSomeExp(Vpred)) & (RESULT=vnoExp)))))) | ((?[Ve,Vered] : ((VExp0=vsecond(Ve)) & ((![VVe11,VVe21] : (Ve!=vpair(VVe11,VVe21))) & ((Vered=vreduce(Ve)) & (visSomeExp(Vered) & (RESULT=vsomeExp(vsecond(vgetSomeExp(Vered))))))))) | ((?[Ve,Vered] : ((VExp0=vsecond(Ve)) & ((![VVe11,VVe21] : (Ve!=vpair(VVe11,VVe21))) & ((Vered=vreduce(Ve)) & ((~visSomeExp(Vered)) & (RESULT=vnoExp)))))) | ((?[Vx] : ((VExp0=vvar(Vx)) & (RESULT=vnoExp))) | ((?[Vx,VS,Ve] : ((VExp0=vabs(Vx,VS,Ve)) & (RESULT=vnoExp))) | ((?[Ve2,Vx,VS,Ve1,Ve2red] : ((VExp0=vapp(vabs(Vx,VS,Ve1),Ve2)) & ((Ve2red=vreduce(Ve2)) & (visSomeExp(Ve2red) & (RESULT=vsomeExp(vapp(vabs(Vx,VS,Ve1),vgetSomeExp(Ve2red)))))))) | ((?[VS,Ve2red,Vx,Ve2,Ve1] : ((VExp0=vapp(vabs(Vx,VS,Ve1),Ve2)) & ((Ve2red=vreduce(Ve2)) & ((~visSomeExp(Ve2red)) & (visValue(Ve2) & (RESULT=vsomeExp(vsubst(Vx,Ve2,Ve1)))))))) | ((?[Vx,VS,Ve1,Ve2red,Ve2] : ((VExp0=vapp(vabs(Vx,VS,Ve1),Ve2)) & ((Ve2red=vreduce(Ve2)) & ((~visSomeExp(Ve2red)) & ((~visValue(Ve2)) & (RESULT=vnoExp)))))) | ((?[Ve1,Ve1red,Ve2] : ((VExp0=vapp(Ve1,Ve2)) & ((![VVx0,VVS0,VVe12] : (Ve1!=vabs(VVx0,VVS0,VVe12))) & ((Ve1red=vreduce(Ve1)) & (visSomeExp(Ve1red) & (RESULT=vsomeExp(vapp(vgetSomeExp(Ve1red),Ve2)))))))) | (?[Ve2,Ve1,Ve1red] : ((VExp0=vapp(Ve1,Ve2)) & ((![VVx0,VVS0,VVe12] : (Ve1!=vabs(VVx0,VVS0,VVe12))) & ((Ve1red=vreduce(Ve1)) & ((~visSomeExp(Ve1red)) & (RESULT=vnoExp))))))))))))))))))))))))))))).
fof('reduce-CODOM-pair', axiom, (![Ve1,Ve2,Vres] : ((vreduce(vpair(Ve1,Ve2))=Vres) => ((Vres=vnoExp) | (?[Ve2] : (Vres=vsomeExp(Ve2))))))).
fof('reduce-CODOM-first', axiom, (![Ve,Vres] : ((vreduce(vfirst(Ve))=Vres) => ((Vres=vnoExp) | (?[Ve2] : (Vres=vsomeExp(Ve2))))))).
fof('reduce-CODOM-second', axiom, (![Ve,Vres] : ((vreduce(vsecond(Ve))=Vres) => ((Vres=vnoExp) | (?[Ve2] : (Vres=vsomeExp(Ve2))))))).
fof('reduce-CODOM-var', axiom, (![Vx,Vres] : ((vreduce(vvar(Vx))=Vres) => ((Vres=vnoExp) | (?[Ve2] : (Vres=vsomeExp(Ve2))))))).
fof('reduce-CODOM-abs', axiom, (![Vx,VS,Ve,Vres] : ((vreduce(vabs(Vx,VS,Ve))=Vres) => ((Vres=vnoExp) | (?[Ve2] : (Vres=vsomeExp(Ve2))))))).
fof('reduce-CODOM-app', axiom, (![Ve1,Ve3,Vres] : ((vreduce(vapp(Ve1,Ve3))=Vres) => ((Vres=vnoExp) | (?[Ve2] : (Vres=vsomeExp(Ve2))))))).
fof('reduce-CODOM', conjecture, (![Ve,Vres] : ((vreduce(Ve)=Vres) => ((Vres=vnoExp) | (?[Ve2] : (Vres=vsomeExp(Ve2))))))).