fof('EQ-ctype', axiom, (![VAName0,VFType0,VAName1,VFType1] : (((vctype(VAName0,VFType0)=vctype(VAName1,VFType1)) => ((VAName0=VAName1) & (VFType0=VFType1))) & (((VAName0=VAName1) & (VFType0=VFType1)) => (vctype(VAName0,VFType0)=vctype(VAName1,VFType1)))))).
fof('EQ-aempty', axiom, (((vaempty=vaempty) => $true) & ($true => (vaempty=vaempty)))).
fof('EQ-acons', axiom, (![VAName0,VAList0,VAName1,VAList1] : (((vacons(VAName0,VAList0)=vacons(VAName1,VAList1)) => ((VAName0=VAName1) & (VAList0=VAList1))) & (((VAName0=VAName1) & (VAList0=VAList1)) => (vacons(VAName0,VAList0)=vacons(VAName1,VAList1)))))).
fof('EQ-ttempty', axiom, (((vttempty=vttempty) => $true) & ($true => (vttempty=vttempty)))).
fof('EQ-ttcons', axiom, (![VCType0,VTType0,VCType1,VTType1] : (((vttcons(VCType0,VTType0)=vttcons(VCType1,VTType1)) => ((VCType0=VCType1) & (VTType0=VTType1))) & (((VCType0=VCType1) & (VTType0=VTType1)) => (vttcons(VCType0,VTType0)=vttcons(VCType1,VTType1)))))).
fof('EQ-rtempty', axiom, (((vrtempty=vrtempty) => $true) & ($true => (vrtempty=vrtempty)))).
fof('EQ-rtcons', axiom, (![VFType0,VRawType0,VFType1,VRawType1] : (((vrtcons(VFType0,VRawType0)=vrtcons(VFType1,VRawType1)) => ((VFType0=VFType1) & (VRawType0=VRawType1))) & (((VFType0=VFType1) & (VRawType0=VRawType1)) => (vrtcons(VFType0,VRawType0)=vrtcons(VFType1,VRawType1)))))).
fof('DIFF-aempty-acons', axiom, (![VAName0,VAList0] : (vaempty!=vacons(VAName0,VAList0)))).
fof('DIFF-ttempty-ttcons', axiom, (![VCType0,VTType0] : (vttempty!=vttcons(VCType0,VTType0)))).
fof('DIFF-rtempty-rtcons', axiom, (![VFType0,VRawType0] : (vrtempty!=vrtcons(VFType0,VRawType0)))).
fof('EQ-rempty', axiom, (((vrempty=vrempty) => $true) & ($true => (vrempty=vrempty)))).
fof('EQ-rcons', axiom, (![VFVal0,VRow0,VFVal1,VRow1] : (((vrcons(VFVal0,VRow0)=vrcons(VFVal1,VRow1)) => ((VFVal0=VFVal1) & (VRow0=VRow1))) & (((VFVal0=VFVal1) & (VRow0=VRow1)) => (vrcons(VFVal0,VRow0)=vrcons(VFVal1,VRow1)))))).
fof('EQ-tempty', axiom, (((vtempty=vtempty) => $true) & ($true => (vtempty=vtempty)))).
fof('EQ-tcons', axiom, (![VRow0,VRawTable0,VRow1,VRawTable1] : (((vtcons(VRow0,VRawTable0)=vtcons(VRow1,VRawTable1)) => ((VRow0=VRow1) & (VRawTable0=VRawTable1))) & (((VRow0=VRow1) & (VRawTable0=VRawTable1)) => (vtcons(VRow0,VRawTable0)=vtcons(VRow1,VRawTable1)))))).
fof('EQ-table', axiom, (![VAList0,VRawTable0,VAList1,VRawTable1] : (((vtable(VAList0,VRawTable0)=vtable(VAList1,VRawTable1)) => ((VAList0=VAList1) & (VRawTable0=VRawTable1))) & (((VAList0=VAList1) & (VRawTable0=VRawTable1)) => (vtable(VAList0,VRawTable0)=vtable(VAList1,VRawTable1)))))).
fof('DIFF-rempty-rcons', axiom, (![VFVal0,VRow0] : (vrempty!=vrcons(VFVal0,VRow0)))).
fof('DIFF-tempty-tcons', axiom, (![VRow0,VRawTable0] : (vtempty!=vtcons(VRow0,VRawTable0)))).
fof('getRaw0', axiom, (![Val,VTable0,RESULT,Vrt] : ((VTable0=vtable(Val,Vrt)) => ((RESULT=vgetRaw(VTable0)) => (RESULT=Vrt))))).
fof('getRaw-INV', axiom, (![VTable0,RESULT] : ((getRaw(VTable0)=RESULT) => (?[Val,Vrt] : ((VTable0=vtable(Val,Vrt)) & (RESULT=Vrt)))))).
fof('getAL0', axiom, (![Vrt,VTable0,RESULT,Val] : ((VTable0=vtable(Val,Vrt)) => ((RESULT=vgetAL(VTable0)) => (RESULT=Val))))).
fof('getAL-INV', axiom, (![VTable0,RESULT] : ((getAL(VTable0)=RESULT) => (?[Vrt,Val] : ((VTable0=vtable(Val,Vrt)) & (RESULT=Val)))))).
fof('matchingAList0', axiom, (![VTType0,VAList0] : (((VTType0=vttempty) & (VAList0=vaempty)) => vmatchingAList(VTType0,VAList0)))).
fof('matchingAList1', axiom, (![Vf,VTType0,VAList0,Va1,Va2,Vtt,Val] : (((VTType0=vttcons(vctype(Va1,Vf),Vtt)) & (VAList0=vacons(Va2,Val))) => ((((Va1=Va2) & vmatchingAList(Vtt,Val)) => vmatchingAList(VTType0,VAList0)) & (vmatchingAList(VTType0,VAList0) => ((Va1=Va2) & vmatchingAList(Vtt,Val))))))).
fof('matchingAList2', axiom, (![Vtt,Val,VTType0,VAList0] : (((VTType0=Vtt) & ((VAList0=Val) & (((![VVa10,VVf0,VVtt0] : (Vtt!=vttcons(vctype(VVa10,VVf0),VVtt0))) | (![VVa20,VVal0] : (Val!=vacons(VVa20,VVal0)))) & ((Vtt!=vttempty) | (Val!=vaempty))))) => (~vmatchingAList(VTType0,VAList0))))).
fof('welltypedtable0', axiom, (![VTType0,VTable0,Val,Vtt,Vt] : (((VTType0=Vtt) & (VTable0=vtable(Val,Vt))) => (((vmatchingAList(Vtt,Val) & vwelltypedRawtable(vrawType(Vtt),Vt)) => vwelltypedtable(VTType0,VTable0)) & (vwelltypedtable(VTType0,VTable0) => (vmatchingAList(Vtt,Val) & vwelltypedRawtable(vrawType(Vtt),Vt))))))).
fof('rawType0', axiom, (![VTType0,RESULT] : ((VTType0=vttempty) => ((RESULT=vrawType(VTType0)) => (RESULT=vrtempty))))).
fof('rawType1', axiom, (![Va,VTType0,RESULT,Vft,Vtt] : ((VTType0=vttcons(vctype(Va,Vft),Vtt)) => ((RESULT=vrawType(VTType0)) => (RESULT=vrtcons(Vft,vrawType(Vtt))))))).
fof('rawType-INV', axiom, (![VTType0,RESULT] : ((rawType(VTType0)=RESULT) => (((VTType0=vttempty) & (RESULT=vrtempty)) | (?[Va,Vft,Vtt] : ((VTType0=vttcons(vctype(Va,Vft),Vtt)) & (RESULT=vrtcons(Vft,vrawType(Vtt))))))))).
fof('welltypedRawtable0', axiom, (![Vrt,VRawType0,VRawTable0] : (((VRawType0=Vrt) & (VRawTable0=vtempty)) => vwelltypedRawtable(VRawType0,VRawTable0)))).
fof('welltypedRawtable1', axiom, (![VRawType0,VRawTable0,Vr,Vrt,Vt] : (((VRawType0=Vrt) & (VRawTable0=vtcons(Vr,Vt))) => (((vwelltypedRow(Vrt,Vr) & vwelltypedRawtable(Vrt,Vt)) => vwelltypedRawtable(VRawType0,VRawTable0)) & (vwelltypedRawtable(VRawType0,VRawTable0) => (vwelltypedRow(Vrt,Vr) & vwelltypedRawtable(Vrt,Vt))))))).
fof('welltypedRow0', axiom, (![VRawType0,VRow0] : (((VRawType0=vrtempty) & (VRow0=vrempty)) => vwelltypedRow(VRawType0,VRow0)))).
fof('welltypedRow1', axiom, (![VRawType0,VRow0,Vv,Vft,Vrt,Vr] : (((VRawType0=vrtcons(Vft,Vrt)) & (VRow0=vrcons(Vv,Vr))) => ((((vfieldType(Vv)=Vft) & vwelltypedRow(Vrt,Vr)) => vwelltypedRow(VRawType0,VRow0)) & (vwelltypedRow(VRawType0,VRow0) => ((vfieldType(Vv)=Vft) & vwelltypedRow(Vrt,Vr))))))).
fof('welltypedRow2', axiom, (![Vrt,Vr,VRawType0,VRow0] : (((VRawType0=Vrt) & ((VRow0=Vr) & (((![VVft0,VVrt0] : (Vrt!=vrtcons(VVft0,VVrt0))) | (![VVv0,VVr0] : (Vr!=vrcons(VVv0,VVr0)))) & ((Vrt!=vrtempty) | (Vr!=vrempty))))) => (~vwelltypedRow(VRawType0,VRow0))))).
fof('FALSE', conjecture, $false).