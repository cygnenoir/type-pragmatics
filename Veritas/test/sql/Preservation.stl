module sql.Preservation

import sql.Syntax
import sql.Semantics
import sql.TContext
import sql.TypeSystem
import sql.TypeSystemInv
import sql.TStore
import sql.Tables
import sql.TableAux
import sql.SoundnessAuxDefs
import sql.PreservationProjection


strategy induction-Preservation {
	
	goal 
	~qi == Tvalue(~t)
	~cin == conf(~qi, ~TS)
	~cout == conf(~qo, ~TS)
	reduce(~cin) = someConf(~cout)
	~TTC |- ~qi : ~TT
	StoreContextConsistent(~TS, ~TTC)
	=================================== SQL-Preservation-T-Tvalue
	~TTC |- ~qo : ~TT


	goal 
	~qi == SelectAllFrom(Ref(~tn))
	~cin == conf(~qi, ~TS)
	~cout == conf(~qo, ~TS)
	reduce(~cin) = someConf(~cout)
	~TTC |- ~qi : ~TT
	StoreContextConsistent(~TS, ~TTC)
	=================================== SQL-Preservation-T-Selectallfrom
	~TTC |- ~qo : ~TT

	// Verification succeeded, used lemmas: StoreContext-Lookup-WT, EQ-Tvalue, isSome-INV-1, T-inv-Selectallfrom, 
	//  T-Tvalue, getRaw0, getAL0, getAL-INV, isValue0, EQ-conf, reduce1, reduce2, DIFF-none-some, getSome0, 
	//  isValue-INV.

	goal 40
	~qi == SelectSomeFrom(~al, Ref(~tn))
	~cin == conf(~qi, ~TS)
	~cout == conf(~qo, ~TS)
	reduce(~cin) = someConf(~cout)
	~TTC |- ~qi : ~TT
	StoreContextConsistent(~TS, ~TTC)
	=================================== SQL-Preservation-T-Selectsomefrom
	~TTC |- ~qo : ~TT

	// Verification succeeded, used lemmas: EQ-conf, reduce3, isSome1, Project-Preservation, T-inv-Selectallfrom, 
	//  StoreContext-Lookup-WT, isSome-INV-2, T-Selectallfrom, T-inv-Selectsomefrom, reduce4, reduce5, DIFF-none-
	//  some, isSome-INV-1.


// 
// // goal 
// // ~sqli == SelectAllFromWhere(Ref(~tn), ~p)
// // ~cin == conf(~qi, ~TS)
// // ~cout == conf(~qo, ~TS)
// // reduce(~cin) = some(~cout)
// // ~TTC |- ~qi : ~TT
// // StoreContextConsistent(~TS, ~TTC)
// // ================================ SQL-Preservation-T-SelectAllFromWhere1
// // ~TTC |- ~qo : ~TT
// 
// 
// // goal 
// // ~sqli == SelectSomeFromWhere(~al, Ref(~tn), ~p)
// // ~cin == conf(~qi, ~TS)
// // ~cout == conf(~qo, ~TS)
// // reduce(~cin) = someConf(~cout)
// // ~TTC |- ~qi : ~TT
// // ================================ SQL-Preservation-T-SelectFromWhere1
// // ~TTC |- ~qo : ~TT
// 
// local {
// 	consts q1 : Query
// 		q2 : Query
// 		TS : TStore
// 		TTC : TTContext
// 		TT : TType
// 	
// 	local {
// 	
// 		axiom
// 		~TTC |- Tvalue(~t1) : ~TT
// 		~TTC |- Tvalue(~t2) : ~TT
// 		================================================ Union-type-aux
// 		~TTC |- Tvalue(union(~t1, ~t2)) : ~TT
// 		
// 		goal
// 		~qi == Union(Tvalue(~t1), Tvalue(~t2))
// 		~cin == conf(~qi, TS)
// 		~cout == conf(~qo, TS)
// 		reduce(~cin) = someConf(~cout)
// 		TTC |- ~qi : TT
// 		StoreContextConsistent(~TS, ~TTC)
// 		========================================== SQL-Preservation-T-Union-1
// 		TTC |- ~qo : TT
// 	}	
// 		
// 	axiom 
// 	~qi == Union(Tvalue(~t1), Tvalue(~t2))
// 	~cin == conf(~qi, TS)
// 	~cout == conf(~qo, TS)
// 	reduce(~cin) = someConf(~cout)
// 	TTC |- ~qi : TT
// 	StoreContextConsistent(~TS, ~TTC)
// 	========================================== SQL-Preservation-T-Union-1
// 	TTC |- ~qo : TT	
// 	
// 	local {
// 
// 		axiom
// 		~qi == Union(Tvalue(~t1), q2)
// 		forall ~t2 q2 != Tvalue(~t2)
// 		~cin == conf(~qi, TS)
// 		~cout == conf(~qo, TS)
// 		reduce(~cin) = someConf(~cout)
// 		TTC |- ~qi : TT
// 		StoreContextConsistent(~TS, ~TTC)
// 		====================================== sql2-Progress
// 		exists ~cout
// 			reduce(q2, TS) == someConf(~cout)
// 		
// 		axiom 
// 		~qi == q2
// 		~cin == conf(~qi, TS)
// 		~cout == conf(~qo, TS)
// 		reduce(~cin) = someConf(~cout)
// 		TTC |- ~qi : TT
// 		StoreContextConsistent(~TS, ~TTC)
// 		================================ SQL-Preservation-T-Union-IH2
// 		TTC |- ~qo : TT
// 		
// 		// goal 
// 		// ~qi == Union(Tvalue(~t1), q2)
// 		// forall ~t2 q2 != Tvalue(~t2)
// 		// ~cin == conf(~qi, TS)
// 		// ~cout == conf(~qo, TS)
// 		// reduce(~cin) = someConf(~cout)
// 		// TTC |- ~qi : TT
// 		// StoreContextConsistent(~TS, ~TTC)
// 		// ========================================== SQL-Preservation-T-Union-2
// 		// TTC |- ~qo : TT	
// 	}
// 	
// 	axiom 
// 	~qi == Union(Tvalue(~t1), q2)
// 	forall ~t2 q2 != Tvalue(~t2)
// 	~cin == conf(~qi, TS)
// 	~cout == conf(~qo, TS)
// 	reduce(~cin) = someConf(~cout)
// 	TTC |- ~qi : TT
// 	StoreContextConsistent(~TS, ~TTC)
// 	========================================== SQL-Preservation-T-Union-2
// 	TTC |- ~qo : TT	
// 	
// 	local {
// 		
// 		axiom 
// 		~qi == q1
// 		~cin == conf(~qi, TS)
// 		~cout == conf(~qo, TS)
// 		reduce(~cin) = someConf(~cout)
// 		TTC |- ~qi : TT
// 		StoreContextConsistent(~TS, ~TTC)
// 		================================ SQL-Preservation-T-Union-IH1
// 		TS |- ~qo : TT
// 		
// 		// goal 
// 		// ~qi == Union(q1, q2)
// 		// forall ~t1 q1 != Tvalue(~t1)
// 		// ~cin == conf(~qi, TS)
// 		// ~cout == conf(~qo, TS)
// 		// reduce(~cin) = someConf(~cout)
// 		// TTC |- ~qi : TT
// 		// StoreContextConsistent(~TS, ~TTC)
// 		// ========================================== SQL-Preservation-T-Union-3
// 		// TTC |- ~qo : TT	
// 	}
// 	
// 	axiom 
// 	~qi == Union(q1, q2)
// 	forall ~t1 q1 != Tvalue(~t1)
// 	~cin == conf(~qi, TS)
// 	~cout == conf(~qo, TS)
// 	reduce(~cin) = someConf(~cout)
// 	TTC |- ~qi : TT
// 	StoreContextConsistent(~TS, ~TTC)
// 	========================================== SQL-Preservation-T-Union-3
// 	TTC |- ~qo : TT	
// 		
// 	goal 
// 	~qi == Union(q1, q2)
// 	~cin == conf(~qi, TS)
// 	~cout == conf(~qo, TS)
// 	reduce(~cin) = someConf(~cout)
// 	TTC |- ~qi : TT
// 	StoreContextConsistent(~TS, ~TTC)
// 	================================ SQL-Preservation-T-Union
// 	TTC |- ~qo : TT
// }
// // 
// // local {
// // 	consts q1 : Query
// // 		q2 : Query
// //       TTC : TTContext
// // 		TS : TStore
// // 		TT : TType
// // 	
// // 	axiom 
// // 	~cin == conf(q1, TS)
// // 	~cout == conf(~qo, TS)
// // 	reduce(~cin) = someConf(~cout)
// // 	TTC |- ~qi : TT
// //   StoreContextConsistent(TS, TTC)
// // 	================================ SQL-Preservation-T-Intersection-IH1
// // 	TTC |- ~qo : TT
// // 	
// // 	axiom 
// // 	~cin == conf(q2, TS)
// // 	~cout == conf(~qo, TS)
// // 	reduce(~cin) = someConf(~cout)
// // 	TTC |- ~qi : TT
// //   StoreContextConsistent(TS, TTC)
// // 	================================ SQL-Preservation-T-Intersection-IH2
// // 	TTC |- ~qo : TT
// // 		
// // 	goal 
// // 	~qi == Intersection(q1, q2)
// // 	~cin == conf(~qi, TS)
// // 	~cout == conf(~qo, TS)
// // 	reduce(~cin) = someConf(~cout)
// // 	TTC |- ~qi : TT
// // 	================================ SQL-Preservation-T-Intersection
// // 	TTC |- ~qo : TT
// // }
// // 
// // 
// // local {
// // 	consts q1 : Query
// // 		q2 : Query
// //       TTC : TTContext
// // 		TS : TStore
// // 		TT : TType
// // 	
// // 	axiom 
// // 	~cin == conf(q1, TS)
// // 	~cout == conf(~qo, TS)
// // 	reduce(~cin) = someConf(~cout)
// // 	TTC |- ~qi : TT
// //   StoreContextConsistent(TS, TTC)
// // 	================================ SQL-Preservation-T-Difference-IH1
// // 	TTC |- ~qo : TT
// // 	
// // 	axiom 
// // 	~cin == conf(q2, TS)
// // 	~cout == conf(~qo, TS)
// // 	reduce(~cin) = someConf(~cout)
// // 	TTC |- ~qi : TT
// //   StoreContextConsistent(TS, TTC)
// // 	================================ SQL-Preservation-T-Difference-IH2
// // 	TTC |- ~qo : TT
// // 		
// // 	goal 
// // 	~qi == Difference(q1, q2)
// // 	~cin == conf(~qi, TS)
// // 	~cout == conf(~qo, TS)
// // 	reduce(~cin) = someConf(~cout)
// // 	TTC |- ~qi : TT
// // 	================================ SQL-Preservation-T-Difference
// // 	TTC |- ~qo : TT
// // }
// 
	hide-all
	axiom
	~cin == conf(~qi, ~TS)
	~cout == conf(~qo, ~TS)
	reduce(~cin) = someConf(~cout)
	~TTC |- ~qi : ~TT
	StoreContextConsistent(~TS, ~TTC)
	=================================== SQL-Preservation-ind
	~TTC |- ~qo : ~TT

}


//final preservation theorem
//for now: restricted to the case where table store (and context) does not change!
goal verify-with induction-Preservation
~cin == conf(~qi, ~TS)
~cout == conf(~qo, ~TS)
reduce(~cin) = someConf(~cout)
~TTC |- ~qi : ~TT
StoreContextConsistent(~TS, ~TTC)
=================================== SQL-Preservation
~TTC |- ~qo : ~TT