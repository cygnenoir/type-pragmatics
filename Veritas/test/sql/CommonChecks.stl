module sql.CommonChecks

import sql.Tables
import sql.Syntax

//checks whether a given predicate is valid for a given table typwe
function
checkPValidity : SQLPred TType -> Bool
checkPValidity(VEquals(a, fv), tt) = ctypeIn(a, fieldType(fv), tt)
checkPValidity(VGreater(a, fv), tt) = ctypeIn(a, fieldType(fv), tt)
checkPValidity(VSmaller(a, fv), tt) = ctypeIn(a, fieldType(fv), tt)

//function checks whether first table type is "part of" second table type
//i.e. all column types in first tt are included in second tt
function
typePartOf : TType TType -> Bool
typePartOf(ttone(ctype(a, ft)), tt) = ctypeIn(a, ft, tt)
typePartOf(ttmany(ctype(a, ft), ttrest), tt) = 
	ctypeIn(a, ft, tt) && typePartOf(ttrest, tt)
