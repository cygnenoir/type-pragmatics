module sql.AuxLemmas

import sql.TStore
import sql.TContext
import sql.SoundnessAuxDefs
import sql.Tables


//proof by simple induction over the structure of the table type context
goal //trivial, premise wrong
lookupContext(~tn, emptyContext) == someTType(~TT)
StoreContextConsistent(~TS, emptyContext)
============================================== lookup-aux-cempty
exists ~t
	lookupStore(~tn, ~TS) == someTable(~t)
	
local {
	const TTR : TTContext
	
	axiom 
	lookupContext(~tn, TTR) == someTType(~TT)
	StoreContextConsistent(~TS, TTR)
	============================================== lookup-aux-cbind-IH
	exists ~t
		lookupStore(~tn, ~TS) == someTable(~t)
	
	goal
	lookupContext(~tn, bindContext(~tm, ~tt, TTR)) == someTType(~TT)
	StoreContextConsistent(~TS, bindContext(~tm, ~tt, TTR))
	==================================================== lookup-aux-cbind
	exists ~t
		lookupStore(~tn, ~TS) == someTable(~t)
	
} //qed lookup-aux


axiom
lookupContext(~tn, ~TTC) == someTType(~TT)
StoreContextConsistent(~TS, ~TTC)
============================================== lookup-aux
exists ~t
	lookupStore(~tn, ~TS) == someTable(~t)