module sql.ProjectionAuxLemmas

import sql.BasicFunctions
import sql.SoundnessAuxDefs
import sql.TypeSystem
import sql.Semantics
import sql.TStore
import sql.Tables

goal
StoreContextConsistent(~TS, ~TTC)
lookup(~tn, ~TS) == some(~t)
~t == table(~al1, ~rt)
clookup(~tn, ~TTC) == some(~TT1)
typePart(~al2, ~TT1) == some(~TT)
==================================== projection-aux
isSome(projection(~al, ~t))

axiom
StoreContextConsistent(~TS, ~TTC)
lookup(~tn, ~TS) == some(~t)
~t == table(~al1, ~rt)
clookup(~tn, ~TTC) == some(~TT1)
typePart(~al2, ~TT1) == some(~TT)
==================================== projection-aux
isSome(projection(~al, ~t))
