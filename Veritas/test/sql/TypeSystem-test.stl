module sql.TypeSystem-test

import sql.Tables
import sql.TStore
import sql.Syntax
import sql.TContext
import sql.TypeSystem


goal

======================================================== T-Tvalue-test1
emptyContext |- Tvalue(table(aempty, tempty)) : ttempty

local {
	
	constructors 
		x1 : FVal
		x2 : FVal
		y1 : FVal
		y2 : FVal
		z1 : FVal
		z2 : FVal
	
	constructors
		TN : TName
		T1 : FType
		T2 : FType
		T3 : FType
		A1 : AName
		A2 : AName
		A3 : AName
		
	axiom 
	=================== ftype-x1
	fieldType(x1) == T1
	
	axiom 
	=================== ftype-x2
	fieldType(x2) == T1
	
	axiom 
	=================== ftype-y1
	fieldType(y1) == T2
	
	axiom 
	=================== ftype-y2
	fieldType(y2) == T2
	
	axiom 
	=================== ftype-z1
	fieldType(z1) == T3
	
	axiom 
	=================== ftype-z2
	fieldType(z2) == T3
	
	goal 
	~al == acons(A1, acons(A2, acons(A3, aempty)))
	~tt == ttcons(ctype(A1, T1), ttcons(ctype(A2, T2), ttcons(ctype(A3, T3), ttempty)))
	~rt == tcons(rcons(x1, rcons(y2, rcons(z2, rempty))), 
		tcons(rcons(x2, rcons(y1, rcons(z1, rempty))), tempty))
	=============================================================================== T-tvalue-test2
	~ttc |- Tvalue(table(~al, ~rt)) : ~tt
	
}

   
local {
	
	constructors
		TN : TName
		T1 : FType
		T2 : FType
		T3 : FType
		A1 : AName
		A2 : AName
		A3 : AName
		
	
	goal 
	~tt == ttcons(ctype(A1, T1), ttcons(ctype(A2, T2), ttcons(ctype(A3, T3), ttempty)))
	~ttc == bindContext(TN, ~tt, emptyContext)
	=============================================================================== T-SelectAllFrom-test
	~ttc |- SelectAllFrom(Ref(TN)) : ~tt
	
}

local {
	
	constructors
		TN : TName
		T1 : FType
		T2 : FType
		T3 : FType
		A1 : AName
		A2 : AName
		A3 : AName
		
	
	goal 
	~tt == ttcons(ctype(A1, T1), ttcons(ctype(A2, T2), ttcons(ctype(A3, T3), ttempty)))
	~ttc == bindContext(TN, ~tt, emptyContext)
	===================================================================================== T-SelectSomeFrom-test1
	~ttc |- SelectSomeFrom(acons(A3, aempty), Ref(TN)) : ttcons(ctype(A3, T3), ttempty)
	
}

local {
	
	constructors
		TN : TName
		T1 : FType
		T2 : FType
		T3 : FType
		A1 : AName
		A2 : AName
		A3 : AName
		
	goal 
	~tt == ttcons(ctype(A1, T1), ttcons(ctype(A2, T2), ttcons(ctype(A3, T3), ttempty)))
	~ttc == bindContext(TN, ~tt, emptyContext)
	=============================================================================== T-SelectSomeFrom-test2
	~ttc |- SelectSomeFrom(acons(A3, acons(A1, aempty)), Ref(TN)) : ttcons(ctype(A3, T3), ttcons(ctype(A1, T1), ttempty))
	
}

// local {
// 	
// 	constructors 
// 		x1 : FVal
// 	
// 	constructors
// 		TN : TName
// 		T1 : FType
// 		T2 : FType
// 		T3 : FType
// 		A1 : AName
// 		A2 : AName
// 		A3 : AName
// 		
// 	
// 	goal 
// 	~tt == ttcons(ctype(A1, T1), ttcons(ctype(A2, T2), ttcons(ctype(A3, T3), ttempty)))
// 	~p == VEquals(A3, x1)
// 	~ttc == bindContext(TN, ~tt, emptyContext)
// 	=============================================================================== T-SelectAllFromWhere-test1
// 	~ttc |- SelectAllFromWhere(Ref(TN), ~p) : ~tt
// 	
// }

// local {
// 	
// 	constructors 
// 		z1 : FVal
// 	
// 	constructors
// 		TN : TName
// 		T1 : FType
// 		T2 : FType
// 		T3 : FType
// 		A1 : AName
// 		A2 : AName
// 		A3 : AName
// 		
// 	
// 	goal 
// 	~tt == ttcons(ctype(A1, T1), ttcons(ctype(A2, T2), ttcons(ctype(A3, T3), ttempty)))
// 	~p == VEquals(A3, z1)
// 	~ttc == bindContext(TN, ~tt, emptyContext)
// 	=============================================================================== T-SelectAllFromWhere-test1
// 	~ttc |- SelectAllFromWhere(Ref(TN), ~p) : ~tt
// 	
// }

// local {
// 	
// 	constructors 
// 		x1 : FVal
// 	
// 	constructors
// 		TN : TName
// 		T1 : FType
// 		T2 : FType
// 		T3 : FType
// 		A1 : AName
// 		A2 : AName
// 		A3 : AName
// 		
// 	
// 	goal 
// 	~tt == ttcons(ctype(A1, T1), ttcons(ctype(A2, T2), ttcons(ctype(A3, T3), ttempty)))
// 	~p == VEquals(A1, x1)
// 	~ttc == bindContext(TN, ~tt, emptyContext)
// 	=============================================================================== T-SelectSomeFromWhere-test1
// 	~ttc |- SelectSomeFromWhere(acons(A3, aempty), Ref(TN), ~p) : ttcons(ctype(A3, T3), ttempty)
// 	
// }









