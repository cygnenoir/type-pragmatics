module sql.Tables

sorts
	FType RType AName CType TType
	
constructors
	rtone : FType -> RType
	rtmany : FType RType -> RType
	ctype : AName FType -> CType
	ttone : CType -> TType
	ttmany : CType TType -> TType

	
function 
correspondingRType : TType -> RType
correspondingRType(ttone(ctype(a, f))) = rtone(f)
correspondingRType(ttmany(ctype(a, f), tt)) = rtmany(f, correspondingRType(tt))	

	
sorts
	FVar RVar RawTable Table 

constructors
	rone : FVar -> RVar
	rmany : FVar RVar -> RVar
	tempty : RawTable
	tmany : RVar RawTable -> RawTable
	table : TType RawTable -> Table

function
getRaw : Table -> RawTable
getRaw(table(tt, rt)) = rt
	
function
fieldType : FVar -> FType

function
le : FVar FVar -> Bool

function
ge : FVar FVar -> Bool

// well-typed table (functional notation)
// does not yet check for whether the table type contains only unique attribute names!!
// (but semantics should be possible to define in a sensible way without that requirement...)
function
welltypedrow : RVar RType -> Bool
welltypedrow(rone(f), rtone(ft)) = fieldType(f) == ft
welltypedrow(rone(f), rtmany(ft, rt)) = false
welltypedrow(rmany(f, r), rtmany(ft, rt)) = 
	(fieldType(f) == ft) && welltypedrow(r, rt)
	
function
welltypedtable : Table -> Bool
welltypedtable(table(tt, tempty)) = true
welltypedtable(table(tt, tmany(r, tempty))) = 
	welltypedrow(r, correspondingRType(tt))
welltypedtable(table(tt, tmany(r, t))) =
	welltypedrow(r, correspondingRType(tt)) && welltypedtable(table(tt, t))
	

//typing rules for well-typed table

// axioms
// fieldType(~f) = ~FT
// ======================= T-rone
// rone(~f) : rtone(~FT)
// 
// rone(~f) : rtone(~FT) 
// ~r : ~RT
// ================================= T-rmany
// rmany(~f, ~r) : rtmany(~FT, ~RT)
// 
// ~r : ~RT
// correspondingRType(~T) = ~RT
// ============================= T-tone
// tone(~r) : ~T
// 
// tone(~r) : ~T
// ~t : ~T
// ==================== T-tmany
// tmany(~r, ~t) : ~T
	

//a few tests for well-typedness
goal
fieldType(~x) = ~xt
~tt = ttone(ctype(~a, ~xt))
============================================================================ test1
welltypedtable(table(~tt, tmany(rone(~x), tempty)))

goal
fieldType(~x) = ~xt
fieldType(~y) = ~yt
~tt = ttmany(ctype(~a, ~xt), ttone(ctype(~b, ~yt)))
============================================================================ test21
!welltypedtable(table(~tt, tmany(rone(~x), tempty)))

goal
fieldType(~x) = ~xt
fieldType(~y) = ~yt
~tt = ttmany(ctype(~a, ~xt), ttone(ctype(~b, ~yt)))
============================================================================ test22
welltypedtable(table(~tt, tmany(rmany(~x, rone(~y)), tempty)))

goal
fieldType(~x1) = ~xt
fieldType(~x2) = ~xt
fieldType(~y1) = ~yt
fieldType(~y2) = ~yt
~tt = ttmany(ctype(~a, ~xt), ttone(ctype(~b, ~yt)))
============================================================================ test23
welltypedtable(table(~tt, tmany(rmany(~x1, rone(~y1)), 
	tmany(rmany(~x2, rone(~y2)), tempty))))
	
goal
fieldType(~x1) = ~xt
fieldType(~x2) = ~xt
fieldType(~y1) = ~yt
fieldType(~y2) = ~yt
~tt = ttmany(ctype(~a, ~xt), ttone(ctype(~b, ~yt)))
============================================================================ test24
!welltypedtable(table(~tt, tmany(rmany(~x1, rone(~y1)), 
	tmany(rone(~x2), tempty))))


goal
fieldType(~x) = ~xt
fieldType(~y) = ~yt
fieldType(~z) = ~zt
~tt = ttmany(ctype(~a, ~xt), ttmany(ctype(~b, ~yt), ttone(ctype(~c, ~zt))))
============================================================================ test3
welltypedtable(table(~tt, tmany(rmany(~x, rmany(~y, rone(~z))), tempty)))


goal
fieldType(~x) = ~xt
fieldType(~y) = ~yt
~xt != ~yt 
fieldType(~z) = ~zt
~tt = ttmany(ctype(~a, ~xt), ttmany(ctype(~b, ~yt), ttone(ctype(~c, ~zt))))
============================================================================ test31
!welltypedtable(table(~tt, tmany(rmany(~x, rmany(~x, rone(~z))), tempty)))

goal
fieldType(~x1) = ~xt
fieldType(~x2) = ~xt
fieldType(~y1) = ~yt
fieldType(~y2) = ~yt
fieldType(~z1) = ~zt
fieldType(~z2) = ~zt
~tt = ttmany(ctype(~a, ~xt), ttmany(ctype(~b, ~yt), ttone(ctype(~c, ~zt))))
============================================================================ test32
welltypedtable(table(~tt, 
	tmany(rmany(~x1, rmany(~y2, rone(~z2))), 
	tmany(rmany(~x2, rmany(~y1, rone(~z1))), tempty))))
	
	
goal
fieldType(~x1) = ~xt
fieldType(~x2) = ~xt
fieldType(~y1) = ~yt
fieldType(~y2) = ~yt
fieldType(~z1) = ~zt
fieldType(~z2) = ~zt
~tt = ttmany(ctype(~a, ~xt), ttmany(ctype(~b, ~yt), ttone(ctype(~c, ~zt))))
============================================================================ test33
!welltypedtable(table(~tt, 
	tmany(rmany(~x1, rmany(~y2, rone(~z2))), 
	tmany(rmany(~x2, rone(~y1)), tempty))))
	
goal
fieldType(~x1) = ~xt
fieldType(~x2) = ~xt
fieldType(~y1) = ~yt
fieldType(~y2) = ~yt
fieldType(~z1) = ~zt
fieldType(~z2) = ~zt
~tt = ttmany(ctype(~a, ~xt), ttmany(ctype(~b, ~yt), ttone(ctype(~c, ~zt))))
============================================================================ test34
welltypedtable(table(~tt, 
	tmany(rmany(~x1, rmany(~y2, rone(~z2))), 
	tmany(rmany(~x2, rmany(~y1, rone(~z1))), 
	tmany(rmany(~x2, rmany(~y2, rone(~z1))), tempty)))))
	
goal
fieldType(~x1) = ~xt
fieldType(~x2) = ~xt
fieldType(~y1) = ~yt
fieldType(~y2) = ~yt
fieldType(~z1) = ~zt
fieldType(~z2) = ~zt
~tt = ttmany(ctype(~a, ~xt), ttmany(ctype(~b, ~yt), ttone(ctype(~c, ~zt))))
============================================================================ test35
welltypedtable(table(~tt, 
	tmany(rmany(~x1, rmany(~y2, rone(~z2))), 
	tmany(rmany(~x2, rmany(~y1, rone(~z1))), 
	tmany(rmany(~x2, rmany(~y2, rone(~z1))), 
	tmany(rmany(~x1, rmany(~y1, rone(~z1))),
	tmany(rmany(~x1, rmany(~y2, rone(~z1))),
	tmany(rmany(~x2, rmany(~y2, rone(~z2))), tempty))))))))
