module sql.TypeSystem

import sql.BasicFunctions
import sql.Tables
import sql.TStore
import sql.Syntax

sorts
	TTContext
	
constructors
	cempty : TTContext
	cbind : TName TType TTContext -> TTContext
	
function
clookup : TName TTContext -> Opt
clookup(tn, cempty) = none
clookup(tn, cbind(tm, tt, TTC)) =
	if (tn == tm)
	then some(tt)
	else clookup(tn, TTC) 
	
axioms
~x == ~y
cbind(~x, ~Tx, cbind(~y, ~Ty, ~C)) |- ~e : ~T
================================================ T-TTContext-Duplicate
cbind(~x, ~Tx, ~C) |- ~e : ~T

~x != ~y
cbind(~x, ~Tx, cbind(~y, ~Ty, ~C)) |- ~e : ~T
================================================ T-TTContext-Swap
cbind(~y, ~Ty, cbind(~x, ~Tx, ~C)) |- ~e : ~T

function
dropFirstColType : TType -> TType
dropFirstColType(ttempty) = ttempty
dropFirstColtType(ttcons(ct, tt)) = tt
	
function
findColType : AName TType -> Opt // Opt[FType]
findColType(an, ttempty) = none
findColType(an, ttcons(ctype(a, ft), ttr)) =
	if (an == a)
	then some(ft)
	else findColType(an, ttr)

function
projectType : AList TType -> Opt // Opt[TType]
projectType(aempty, tt) = some(ttempty)
projectType(acons(a, alr), tt) =
	let ft = findColType(a, tt) in
		let tprest = projectType(alr, tt) in
			if (isSome(ft) && isSome(tprest))
			then some(ttcons(ctype(a, getSome(ft)), getSome(tprest)))
			else none

 
axioms
//a table value with a well-typed table is typable
welltypedtable(~TT, table(~al, ~rt))
====================================== T-Tvalue
~TTC |- Tvalue(table(~al, ~rt)) : ~TT

clookup(~tn, ~TTC) == some(~TT)
=============================================== T-Selectallfrom
~TTC |- Selectallfrom(Ref(~tn)) : ~TT

clookup(~tn, ~TTC) == some(~TT1)
projectType(~al, ~TT1) == some(~TT)
================================================ T-Selectsomefrom
~TTC |- Selectsomefrom(~al, Ref(~tn)) : ~TT

// lookup(~tn, ~TS) == some(table(~TT, ~rt))
// welltypedtable(table(~TT, ~rt))
// checkPValidity(~p, ~TT)
// ================================================ T-SelectAllFromWhere1
// ~TS |- SelectAllFromWhere1(~tn, ~p) : ~TT
// 
// lookup(~tn, ~TS) == some(table(~TT1, ~rt))
// welltypedtable(table(~TT1, ~rt))
// checkPValidity(~p, ~TT1)
// typePartOf(~TT, ~TT1)
// ================================================ T-SelectFromWhere1
// ~TS |- SelectFromWhere1(~TT, ~tn, ~p) : ~TT
// 
~TTC |- ~q1 : ~TT
~TTC |- ~q2 : ~TT
============================================ T-Union
~TTC |- Union(~q1, ~q2) : ~TT
// 
// ~TS |- ~sql1 : ~TT
// ~TS |- ~sql2 : ~TT
// ============================================ T-Intersection
// ~TS |- Intersection(~sql1, ~sql2) : ~TT
// 
// ~TS |- ~sql1 : ~TT
// ~TS |- ~sql2 : ~TT
// ============================================ T-Difference
// ~TS |- Difference(~sql1, ~sql2) : ~TT



~TTC |- ~q : ~TT
==================================================== T-inv
OR
=> exists ~al, ~rt
		~q = Tvalue(table(~al, ~rt))
		welltypedtable(~TT, table(~al, ~rt))
=> exists ~tn, ~rt
		~q == Selectallfrom(Ref(~tn))
		clookup(~tn, ~TTC) == some(~TT)
=> exists ~tn, ~TT1, ~al, ~rt
		~q == Selectsomefrom(~al, Ref(~tn))
		clookup(~tn, ~TTC) == some(~TT1)
		projectType(~al, ~TT1) == some(~TT)	
// => exists ~tn, ~p, ~rt
// 		~sql == SelectAllFromWhere1(~tn, ~p)
// 		lookup(~tn, ~TS) == some(table(~TT, ~rt))
// 		welltypedtable(table(~TT, ~rt))
// 		checkPValidity(~p, ~TT)	
// => exists ~tn, ~p, ~TT1, ~rt
// 		~sql == SelectFromWhere1(~TT, ~tn, ~p)
// 		lookup(~tn, ~TS) == some(table(~TT1, ~rt))
// 		welltypedtable(table(~TT1, ~rt))
// 		checkPValidity(~p, ~TT1)
// 		typePartOf(~TT, ~TT1)
=> exists ~q1, ~q2
		~q == Union(~q1, ~q2)
		~TTC |- ~q1 : ~TT
		~TTC |- ~q2 : ~TT
// => exists ~sql1, ~sql2
// 		~sql == Intersection(~sql1, ~sql2)
// 		~TS |- ~sql1 : ~TT
// 		~TS |- ~sql2 : ~TT
// => exists ~sql1, ~sql2
// 		~sql == Difference(~sql1, ~sql2)
// 		~TS |- ~sql1 : ~TT
// 		~TS |- ~sql2 : ~TT
		
//variant of inversion lemma in several different lemmas 
//(seems to be helpful for progress proof)
goal
~q == Tvalue(table(~al, ~rt))
~TTC |- ~q : ~TT
==================================================== T-inv-tvalue
welltypedtable(~TT, table(~al, ~rt))

axiom
~q == Tvalue(table(~al, ~rt))
~TTC |- ~q : ~TT
==================================================== T-inv-Tvalue
welltypedtable(~TT, table(~al, ~rt))


goal
~q == Selectallfrom(Ref(~tn))		
~TTC |- ~q : ~TT
==================================================== T-inv-Selectallfrom		
clookup(~tn, ~TTC) == some(~TT)

axiom
~q == Selectallfrom(Ref(~tn))		
~TTC |- ~q : ~TT
==================================================== T-inv-Selectallfrom	
clookup(~tn, ~TTC) == some(~TT)


goal
~q == Selectsomefrom(~al, Ref(~tn))
~TTC |- ~q : ~TT
==================================================== T-inv-Selectsomefrom
exists ~TT1
	clookup(~tn, ~TTC) == some(~TT1)
	projectType(~al, ~TT1) == some(~TT)	
	
axiom
~q == Selectsomefrom(~al, Ref(~tn))
~TTC |- ~q : ~TT
==================================================== T-inv-Selectsomefrom
exists ~TT1
	clookup(~tn, ~TTC) == some(~TT1)
	projectType(~al, ~TT1) == some(~TT)	
		
// ~sql == SelectAllFromWhere1(~tn, ~p)
// ~TS |- ~sql : ~TT
// ==================================================== T-inv-SelectAllFromWhere1
// exists ~rt
// 	lookup(~tn, ~TS) == some(table(~TT, ~rt))
// 	welltypedtable(table(~TT, ~rt))
// 	checkPValidity(~p, ~TT)	
// 		
// ~sql == SelectFromWhere1(~TT, ~tn, ~p)
// ~TS |- ~sql : ~TT
// ==================================================== T-inv-SelectFromWhere1
// exists ~rt, ~TT1
// 	lookup(~tn, ~TS) == some(table(~TT1, ~rt))
// 	welltypedtable(table(~TT1, ~rt))
// 	checkPValidity(~p, ~TT1)
// 	typePartOf(~TT, ~TT1)
// 		

goal
~q == Union(~q1, ~q2)
~TTC |- ~q : ~TT
==================================================== T-inv-Union		
~TTC |- ~q1 : ~TT
~TTC |- ~q2 : ~TT

axiom
~q == Union(~q1, ~q2)
~TTC |- ~q : ~TT
==================================================== T-inv-Union		
~TTC |- ~q1 : ~TT
~TTC |- ~q2 : ~TT

// 
// ~sql == Intersection(~sql1, ~sql2)
// ~TS |- ~sql : ~TT
// ==================================================== T-inv-Intersection
// ~TS |- ~sql1 : ~TT
// ~TS |- ~sql2 : ~TT
// 
// ~sql == Difference(~sql1, ~sql2)
// ~TS |- ~sql : ~TT
// ==================================================== T-inv-Difference
// ~TS |- ~sql1 : ~TT
// ~TS |- ~sql2 : ~TT
