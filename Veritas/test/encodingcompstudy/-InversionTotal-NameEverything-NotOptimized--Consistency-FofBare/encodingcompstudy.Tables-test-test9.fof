fof('EQ-ctype', axiom, ![VAName0, VVAR1, VFType0, VVAR0, VAName1, VFType1] : ((VVAR0 = vctype(VAName0, VFType0) & VVAR1 = vctype(VAName1, VFType1)) => ((VAName0 = VAName1 & VFType0 = VFType1) <=> VVAR0 = VVAR1))).
fof('EQ-aempty', axiom, ![VVAR0] : (VVAR0 = vaempty => ($true <=> VVAR0 = VVAR0))).
fof('EQ-acons', axiom, ![VAList0, VAName0, VVAR1, VVAR0, VAName1, VAList1] : ((VVAR0 = vacons(VAName0, VAList0) & VVAR1 = vacons(VAName1, VAList1)) => ((VAName0 = VAName1 & VAList0 = VAList1) <=> VVAR0 = VVAR1))).
fof('EQ-ttempty', axiom, ![VVAR0] : (VVAR0 = vttempty => ($true <=> VVAR0 = VVAR0))).
fof('EQ-ttcons', axiom, ![VTType0, VTType1, VCType0, VVAR1, VVAR0, VCType1] : ((VVAR0 = vttcons(VCType0, VTType0) & VVAR1 = vttcons(VCType1, VTType1)) => ((VCType0 = VCType1 & VTType0 = VTType1) <=> VVAR0 = VVAR1))).
fof('EQ-rtempty', axiom, ![VVAR0] : (VVAR0 = vrtempty => ($true <=> VVAR0 = VVAR0))).
fof('EQ-rtcons', axiom, ![VRawType1, VRawType0, VVAR1, VFType0, VVAR0, VFType1] : ((VVAR0 = vrtcons(VFType0, VRawType0) & VVAR1 = vrtcons(VFType1, VRawType1)) => ((VFType0 = VFType1 & VRawType0 = VRawType1) <=> VVAR0 = VVAR1))).
fof('EQ-rempty', axiom, ![VVAR0] : (VVAR0 = vrempty => ($true <=> VVAR0 = VVAR0))).
fof('EQ-rcons', axiom, ![VRow0, VFVal1, VVAR1, VVAR0, VFVal0, VRow1] : ((VVAR0 = vrcons(VFVal0, VRow0) & VVAR1 = vrcons(VFVal1, VRow1)) => ((VFVal0 = VFVal1 & VRow0 = VRow1) <=> VVAR0 = VVAR1))).
fof('EQ-tempty', axiom, ![VVAR0] : (VVAR0 = vtempty => ($true <=> VVAR0 = VVAR0))).
fof('EQ-tcons', axiom, ![VRow0, VRawTable0, VRawTable1, VVAR1, VVAR0, VRow1] : ((VVAR0 = vtcons(VRow0, VRawTable0) & VVAR1 = vtcons(VRow1, VRawTable1)) => ((VRow0 = VRow1 & VRawTable0 = VRawTable1) <=> VVAR0 = VVAR1))).
fof('EQ-table', axiom, ![VAList0, VRawTable0, VRawTable1, VVAR1, VVAR0, VAList1] : ((VVAR0 = vtable(VAList0, VRawTable0) & VVAR1 = vtable(VAList1, VRawTable1)) => ((VAList0 = VAList1 & VRawTable0 = VRawTable1) <=> VVAR0 = VVAR1))).
fof('DIFF-aempty-acons', axiom, ![VVAR0, VVAR1, VAName0, VAList0] : ((VVAR0 = vaempty & VVAR1 = vacons(VAName0, VAList0)) => VVAR0 != VVAR1)).
fof('DIFF-ttempty-ttcons', axiom, ![VVAR0, VVAR1, VCType0, VTType0] : ((VVAR0 = vttempty & VVAR1 = vttcons(VCType0, VTType0)) => VVAR0 != VVAR1)).
fof('DIFF-rtempty-rtcons', axiom, ![VVAR0, VVAR1, VFType0, VRawType0] : ((VVAR0 = vrtempty & VVAR1 = vrtcons(VFType0, VRawType0)) => VVAR0 != VVAR1)).
fof('DIFF-rempty-rcons', axiom, ![VVAR0, VVAR1, VFVal0, VRow0] : ((VVAR0 = vrempty & VVAR1 = vrcons(VFVal0, VRow0)) => VVAR0 != VVAR1)).
fof('DIFF-tempty-tcons', axiom, ![VVAR0, VVAR1, VRow0, VRawTable0] : ((VVAR0 = vtempty & VVAR1 = vtcons(VRow0, VRawTable0)) => VVAR0 != VVAR1)).
fof('getRaw0', axiom, ![VVAR0, Val, Vrt, VVAR1] : ((VVAR0 = vtable(Val, Vrt) & VVAR1 = vgetRaw(VVAR0)) => VVAR1 = Vrt)).
fof('getRaw-INV', axiom, ![VVAR0, VTable0, VRESULT] : ((VVAR0 = vgetRaw(VTable0) & VVAR0 = VRESULT) => ?[Vrt, VVAR1, Val] : ((~VVAR1 = vtable(Val, Vrt)) | (VTable0 = VVAR1 & VRESULT = Vrt)))).
fof('getAL0', axiom, ![VVAR0, Val, Vrt, VVAR1] : ((VVAR0 = vtable(Val, Vrt) & VVAR1 = vgetAL(VVAR0)) => VVAR1 = Val)).
fof('getAL-INV', axiom, ![VVAR0, VTable0, VRESULT] : ((VVAR0 = vgetAL(VTable0) & VVAR0 = VRESULT) => ?[Vrt, VVAR1, Val] : ((~VVAR1 = vtable(Val, Vrt)) | (VTable0 = VVAR1 & VRESULT = Val)))).
fof('matchingAList0', axiom, ![VVAR0, VVAR1] : ((VVAR0 = vttempty & VVAR1 = vaempty) => vmatchingAList(VVAR0, VVAR1))).
fof('matchingAList1', axiom, ![Va1, Va2, VVAR2, VVAR1, Val, VVAR0, Vf, Vtt] : ((VVAR0 = vctype(Va1, Vf) & VVAR1 = vttcons(VVAR0, Vtt) & VVAR2 = vacons(Va2, Val)) => (vmatchingAList(VVAR1, VVAR2) <=> (Va1 = Va2 & vmatchingAList(Vtt, Val))))).
fof('matchingAList2', axiom, ![VVAR0, VVAR1, Vtt, Val] : ((VVAR0 = vttempty & VVAR1 = vaempty & (Vtt != VVAR0 | Val != VVAR1) & (![Vf0, Vtt0, Va10, VVAR2, VVAR3] : ((~VVAR2 = vctype(Va10, Vf0)) | (~VVAR3 = vttcons(VVAR2, Vtt0)) | Vtt != VVAR3) | ![VVAR4, Va20, Val0] : ((~VVAR4 = vacons(Va20, Val0)) | Val != VVAR4))) => (~vmatchingAList(Vtt, Val)))).
fof('matchingAList-true-INV', axiom, ![VVAR0, VVAR1, VTType0, VAList0] : ((VVAR0 = vttempty & VVAR1 = vaempty & vmatchingAList(VTType0, VAList0)) => ((VTType0 = VVAR0 & VAList0 = VVAR1) | ?[Va1, Va2, VVAR2, VVAR3, VVAR4, Val, Vf, Vtt] : ((~VVAR2 = vctype(Va1, Vf)) | (~VVAR3 = vttcons(VVAR2, Vtt)) | (~VVAR4 = vacons(Va2, Val)) | (VTType0 = VVAR3 & VAList0 = VVAR4 & (Va1 = Va2 & vmatchingAList(Vtt, Val))))))).
fof('matchingAList-false-INV', axiom, ![VTType0, VAList0] : ((~vmatchingAList(VTType0, VAList0)) => (?[Va1, Va2, VVAR2, VVAR1, Val, VVAR0, Vf, Vtt] : ((~VVAR0 = vctype(Va1, Vf)) | (~VVAR1 = vttcons(VVAR0, Vtt)) | (~VVAR2 = vacons(Va2, Val)) | (VTType0 = VVAR1 & VAList0 = VVAR2 & (~(Va1 = Va2 & vmatchingAList(Vtt, Val))))) | ?[VVAR3, VVAR4, Val, Vtt] : ((~VVAR3 = vttempty) | (~VVAR4 = vaempty) | ((Vtt != VVAR3 | Val != VVAR4) & (![Vf0, Vtt0, Va10, VVAR5, VVAR6] : ((~VVAR5 = vctype(Va10, Vf0)) | (~VVAR6 = vttcons(VVAR5, Vtt0)) | Vtt != VVAR6) | ![VVAR7, Va20, Val0] : ((~VVAR7 = vacons(Va20, Val0)) | Val != VVAR7)) & VTType0 = Vtt & VAList0 = Val))))).
fof('welltypedtable0', axiom, ![Vt, VVAR1, Val, VVAR0, Vtt] : ((VVAR0 = vtable(Val, Vt) & VVAR1 = vrawType(Vtt)) => (vwelltypedtable(Vtt, VVAR0) <=> (vmatchingAList(Vtt, Val) & vwelltypedRawtable(VVAR1, Vt))))).
fof('welltypedtable-true-INV', axiom, ![VTType0, VTable0] : (vwelltypedtable(VTType0, VTable0) => ?[Vt, VVAR1, Val, VVAR0, Vtt] : ((~VVAR0 = vtable(Val, Vt)) | (~VVAR1 = vrawType(Vtt)) | (VTType0 = Vtt & VTable0 = VVAR0 & (vmatchingAList(Vtt, Val) & vwelltypedRawtable(VVAR1, Vt)))))).
fof('welltypedtable-false-INV', axiom, ![VTType0, VTable0] : ((~vwelltypedtable(VTType0, VTable0)) => ?[Vt, VVAR1, Val, VVAR0, Vtt] : ((~VVAR0 = vtable(Val, Vt)) | (~VVAR1 = vrawType(Vtt)) | (VTType0 = Vtt & VTable0 = VVAR0 & (~(vmatchingAList(Vtt, Val) & vwelltypedRawtable(VVAR1, Vt))))))).
fof('rawType0', axiom, ![VVAR0, VVAR1, VVAR2] : ((VVAR0 = vttempty & VVAR1 = vrawType(VVAR0) & VVAR2 = vrtempty) => VVAR1 = VVAR2)).
fof('rawType1', axiom, ![Va, Vft, VVAR2, VVAR3, VVAR4, VVAR1, VVAR0, Vtt] : ((VVAR1 = vttcons(VVAR0, Vtt) & VVAR3 = vrawType(VVAR1) & VVAR2 = vrawType(Vtt) & VVAR0 = vctype(Va, Vft) & VVAR4 = vrtcons(Vft, VVAR2)) => VVAR3 = VVAR4)).
fof('rawType-INV', axiom, ![VTType0, VVAR2, VVAR1, VVAR0, VRESULT] : ((VVAR0 = vrawType(VTType0) & VVAR1 = vttempty & VVAR2 = vrtempty & VVAR0 = VRESULT) => ((VTType0 = VVAR1 & VRESULT = VVAR2) | ?[Va, VVAR5, Vft, VVAR3, VVAR4, VVAR6, Vtt] : ((~VVAR3 = vctype(Va, Vft)) | (~VVAR4 = vttcons(VVAR3, Vtt)) | (~VVAR5 = vrawType(Vtt)) | (~VVAR6 = vrtcons(Vft, VVAR5)) | (VTType0 = VVAR4 & VRESULT = VVAR6))))).
fof('welltypedRawtable0', axiom, ![VVAR0, Vrt] : (VVAR0 = vtempty => vwelltypedRawtable(Vrt, VVAR0))).
fof('welltypedRawtable1', axiom, ![VVAR0, Vr, Vt, Vrt] : (VVAR0 = vtcons(Vr, Vt) => (vwelltypedRawtable(Vrt, VVAR0) <=> (vwelltypedRow(Vrt, Vr) & vwelltypedRawtable(Vrt, Vt))))).
fof('welltypedRawtable-true-INV', axiom, ![VRawType0, VRawTable0] : (vwelltypedRawtable(VRawType0, VRawTable0) => (?[VVAR0, Vrt] : ((~VVAR0 = vtempty) | (VRawType0 = Vrt & VRawTable0 = VVAR0)) | ?[Vt, Vrt, Vr, VVAR1] : ((~VVAR1 = vtcons(Vr, Vt)) | (VRawType0 = Vrt & VRawTable0 = VVAR1 & (vwelltypedRow(Vrt, Vr) & vwelltypedRawtable(Vrt, Vt))))))).
fof('welltypedRawtable-false-INV', axiom, ![VRawType0, VRawTable0] : ((~vwelltypedRawtable(VRawType0, VRawTable0)) => ?[Vt, Vrt, Vr, VVAR0] : ((~VVAR0 = vtcons(Vr, Vt)) | (VRawType0 = Vrt & VRawTable0 = VVAR0 & (~(vwelltypedRow(Vrt, Vr) & vwelltypedRawtable(Vrt, Vt))))))).
fof('welltypedRow0', axiom, ![VVAR0, VVAR1] : ((VVAR0 = vrtempty & VVAR1 = vrempty) => vwelltypedRow(VVAR0, VVAR1))).
fof('welltypedRow1', axiom, ![Vv, Vrt, Vft, Vr, VVAR2, VVAR1, VVAR0] : ((VVAR0 = vrtcons(Vft, Vrt) & VVAR1 = vrcons(Vv, Vr) & VVAR2 = vfieldType(Vv)) => (vwelltypedRow(VVAR0, VVAR1) <=> (VVAR2 = Vft & vwelltypedRow(Vrt, Vr))))).
fof('welltypedRow2', axiom, ![VVAR0, VVAR1, Vrt, Vr] : ((VVAR0 = vrtempty & VVAR1 = vrempty & (Vrt != VVAR0 | Vr != VVAR1) & (![VVAR2, Vft0, Vrt0] : ((~VVAR2 = vrtcons(Vft0, Vrt0)) | Vrt != VVAR2) | ![VVAR3, Vv0, Vr0] : ((~VVAR3 = vrcons(Vv0, Vr0)) | Vr != VVAR3))) => (~vwelltypedRow(Vrt, Vr)))).
fof('welltypedRow-true-INV', axiom, ![VVAR0, VVAR1, VRawType0, VRow0] : ((VVAR0 = vrtempty & VVAR1 = vrempty & vwelltypedRow(VRawType0, VRow0)) => ((VRawType0 = VVAR0 & VRow0 = VVAR1) | ?[Vv, Vrt, Vft, Vr, VVAR2, VVAR3, VVAR4] : ((~VVAR2 = vrtcons(Vft, Vrt)) | (~VVAR3 = vrcons(Vv, Vr)) | (~VVAR4 = vfieldType(Vv)) | (VRawType0 = VVAR2 & VRow0 = VVAR3 & (VVAR4 = Vft & vwelltypedRow(Vrt, Vr))))))).
fof('welltypedRow-false-INV', axiom, ![VRawType0, VRow0] : ((~vwelltypedRow(VRawType0, VRow0)) => (?[Vv, Vrt, Vft, Vr, VVAR2, VVAR1, VVAR0] : ((~VVAR0 = vrtcons(Vft, Vrt)) | (~VVAR1 = vrcons(Vv, Vr)) | (~VVAR2 = vfieldType(Vv)) | (VRawType0 = VVAR0 & VRow0 = VVAR1 & (~(VVAR2 = Vft & vwelltypedRow(Vrt, Vr))))) | ?[Vrt, Vr, VVAR3, VVAR4] : ((~VVAR3 = vrtempty) | (~VVAR4 = vrempty) | ((Vrt != VVAR3 | Vr != VVAR4) & (![VVAR5, Vft0, Vrt0] : ((~VVAR5 = vrtcons(Vft0, Vrt0)) | Vrt != VVAR5) | ![VVAR6, Vv0, Vr0] : ((~VVAR6 = vrcons(Vv0, Vr0)) | Vr != VVAR6)) & VRawType0 = Vrt & VRow0 = Vr))))).
fof('test9', axiom, ![VVAR26, VVAR25, VVAR17, VVAR21, VVAR14, Vz1, Vy2, VVAR22, Vyt, Va, VVAR5, VVAR20, VVAR24, VVAR23, Vxt, VVAR7, Vz2, Vb, Vx1, VVAR13, Vc, VVAR11, Vzt, VVAR2, VVAR15, VVAR3, Vx2, VVAR10, VVAR4, VVAR1, VVAR6, VVAR8, Val, VVAR0, VVAR12, Vy1, VVAR18, VVAR19, VVAR9, Vtt, VVAR16] : ((VVAR26 = vtable(Val, VVAR25) & VVAR12 = vctype(Vb, Vyt) & VVAR20 = vrcons(Vy1, VVAR17) & VVAR14 = vctype(Va, Vxt) & VVAR25 = vtcons(VVAR23, VVAR24) & VVAR24 = vtcons(VVAR21, VVAR22) & VVAR9 = vacons(Va, VVAR8) & VVAR5 = vfieldType(Vz2) & VVAR1 = vfieldType(Vx2) & VVAR21 = vrcons(Vx2, VVAR20) & VVAR4 = vfieldType(Vz1) & VVAR16 = vttcons(VVAR14, VVAR15) & VVAR17 = vrempty & VVAR2 = vfieldType(Vy1) & VVAR22 = vtempty & VVAR8 = vacons(Vb, VVAR7) & VVAR11 = vttempty & VVAR15 = vttcons(VVAR12, VVAR13) & VVAR23 = vrcons(Vx1, VVAR19) & VVAR10 = vctype(Vc, Vzt) & VVAR13 = vttcons(VVAR10, VVAR11) & VVAR6 = vaempty & VVAR3 = vfieldType(Vy2) & VVAR19 = vrcons(Vy2, VVAR18) & VVAR0 = vfieldType(Vx1) & VVAR7 = vacons(Vc, VVAR6) & VVAR18 = vrcons(Vz2, VVAR17) & VVAR0 = Vxt & VVAR1 = Vxt & VVAR2 = Vyt & VVAR3 = Vyt & VVAR4 = Vzt & VVAR5 = Vzt & Val = VVAR9 & Vtt = VVAR16) => (~vwelltypedtable(Vtt, VVAR26)))).
fof('false-goal', conjecture, ($true => $false)).
