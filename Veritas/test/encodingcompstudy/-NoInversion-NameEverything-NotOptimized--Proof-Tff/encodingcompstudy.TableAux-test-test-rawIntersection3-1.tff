tff('FType_type', type, vFType: $tType).
tff('AName_type', type, vAName: $tType).
tff('AList_type', type, vAList: $tType).
tff('CType_type', type, vCType: $tType).
tff('TType_type', type, vTType: $tType).
tff('RawType_type', type, vRawType: $tType).
tff('FVal_type', type, vFVal: $tType).
tff('Row_type', type, vRow: $tType).
tff('RawTable_type', type, vRawTable: $tType).
tff('Table_type', type, vTable: $tType).
tff('OptRawTable_type', type, vOptRawTable: $tType).
tff('ctype_type', type, vctype: (vAName * vFType) > vCType).
tff('aempty_type', type, vaempty: vAList).
tff('acons_type', type, vacons: (vAName * vAList) > vAList).
tff('ttempty_type', type, vttempty: vTType).
tff('ttcons_type', type, vttcons: (vCType * vTType) > vTType).
tff('rtempty_type', type, vrtempty: vRawType).
tff('rtcons_type', type, vrtcons: (vFType * vRawType) > vRawType).
tff('rempty_type', type, vrempty: vRow).
tff('rcons_type', type, vrcons: (vFVal * vRow) > vRow).
tff('tempty_type', type, vtempty: vRawTable).
tff('tcons_type', type, vtcons: (vRow * vRawTable) > vRawTable).
tff('table_type', type, vtable: (vAList * vRawTable) > vTable).
tff('noRawTable_type', type, vnoRawTable: vOptRawTable).
tff('someRawTable_type', type, vsomeRawTable: vRawTable > vOptRawTable).
tff('x1_type', type, vx1: vFVal).
tff('x2_type', type, vx2: vFVal).
tff('y1_type', type, vy1: vFVal).
tff('y2_type', type, vy2: vFVal).
tff('z1_type', type, vz1: vFVal).
tff('z2_type', type, vz2: vFVal).
tff('getRaw_type', type, vgetRaw: vTable > vRawTable).
tff('getAL_type', type, vgetAL: vTable > vAList).
tff('fieldType_type', type, vfieldType: vFVal > vFType).
tff('le_type', type, vle: (vFVal * vFVal) > $o).
tff('ge_type', type, vge: (vFVal * vFVal) > $o).
tff('matchingAList_type', type, vmatchingAList: (vTType * vAList) > $o).
tff('welltypedtable_type', type, vwelltypedtable: (vTType * vTable) > $o).
tff('rawType_type', type, vrawType: vTType > vRawType).
tff('welltypedRawtable_type', type, vwelltypedRawtable: (vRawType * vRawTable) > $o).
tff('welltypedRow_type', type, vwelltypedRow: (vRawType * vRow) > $o).
tff('rowIn_type', type, vrowIn: (vRow * vRawTable) > $o).
tff('projectFirstRaw_type', type, vprojectFirstRaw: vRawTable > vRawTable).
tff('dropFirstColRaw_type', type, vdropFirstColRaw: vRawTable > vRawTable).
tff('isSomeRawTable_type', type, visSomeRawTable: vOptRawTable > $o).
tff('attachColToFrontRaw_type', type, vattachColToFrontRaw: (vRawTable * vRawTable) > vOptRawTable).
tff('rawUnion_type', type, vrawUnion: (vRawTable * vRawTable) > vRawTable).
tff('rawIntersection_type', type, vrawIntersection: (vRawTable * vRawTable) > vRawTable).
tff('rawDifference_type', type, vrawDifference: (vRawTable * vRawTable) > vRawTable).
tff('getSomeRawTable_type', type, vgetSomeRawTable: vOptRawTable > vRawTable).
tff('EQ-ctype', axiom, ![VAName0: vAName, VVAR1: vCType, VFType0: vFType, VVAR0: vCType, VAName1: vAName, VFType1: vFType] : ((VVAR0 = vctype(VAName0, VFType0) & VVAR1 = vctype(VAName1, VFType1)) => ((VAName0 = VAName1 & VFType0 = VFType1) <=> VVAR0 = VVAR1))).
tff('EQ-aempty', axiom, ![VVAR0: vAList] : (VVAR0 = vaempty => ($true <=> VVAR0 = VVAR0))).
tff('EQ-acons', axiom, ![VAList0: vAList, VAName0: vAName, VVAR1: vAList, VVAR0: vAList, VAName1: vAName, VAList1: vAList] : ((VVAR0 = vacons(VAName0, VAList0) & VVAR1 = vacons(VAName1, VAList1)) => ((VAName0 = VAName1 & VAList0 = VAList1) <=> VVAR0 = VVAR1))).
tff('EQ-ttempty', axiom, ![VVAR0: vTType] : (VVAR0 = vttempty => ($true <=> VVAR0 = VVAR0))).
tff('EQ-ttcons', axiom, ![VTType0: vTType, VTType1: vTType, VCType0: vCType, VVAR1: vTType, VVAR0: vTType, VCType1: vCType] : ((VVAR0 = vttcons(VCType0, VTType0) & VVAR1 = vttcons(VCType1, VTType1)) => ((VCType0 = VCType1 & VTType0 = VTType1) <=> VVAR0 = VVAR1))).
tff('EQ-rtempty', axiom, ![VVAR0: vRawType] : (VVAR0 = vrtempty => ($true <=> VVAR0 = VVAR0))).
tff('EQ-rtcons', axiom, ![VRawType1: vRawType, VRawType0: vRawType, VVAR1: vRawType, VFType0: vFType, VVAR0: vRawType, VFType1: vFType] : ((VVAR0 = vrtcons(VFType0, VRawType0) & VVAR1 = vrtcons(VFType1, VRawType1)) => ((VFType0 = VFType1 & VRawType0 = VRawType1) <=> VVAR0 = VVAR1))).
tff('EQ-rempty', axiom, ![VVAR0: vRow] : (VVAR0 = vrempty => ($true <=> VVAR0 = VVAR0))).
tff('EQ-rcons', axiom, ![VRow0: vRow, VFVal1: vFVal, VVAR1: vRow, VVAR0: vRow, VFVal0: vFVal, VRow1: vRow] : ((VVAR0 = vrcons(VFVal0, VRow0) & VVAR1 = vrcons(VFVal1, VRow1)) => ((VFVal0 = VFVal1 & VRow0 = VRow1) <=> VVAR0 = VVAR1))).
tff('EQ-tempty', axiom, ![VVAR0: vRawTable] : (VVAR0 = vtempty => ($true <=> VVAR0 = VVAR0))).
tff('EQ-tcons', axiom, ![VRow0: vRow, VRawTable0: vRawTable, VRawTable1: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, VRow1: vRow] : ((VVAR0 = vtcons(VRow0, VRawTable0) & VVAR1 = vtcons(VRow1, VRawTable1)) => ((VRow0 = VRow1 & VRawTable0 = VRawTable1) <=> VVAR0 = VVAR1))).
tff('EQ-table', axiom, ![VAList0: vAList, VRawTable0: vRawTable, VRawTable1: vRawTable, VVAR1: vTable, VVAR0: vTable, VAList1: vAList] : ((VVAR0 = vtable(VAList0, VRawTable0) & VVAR1 = vtable(VAList1, VRawTable1)) => ((VAList0 = VAList1 & VRawTable0 = VRawTable1) <=> VVAR0 = VVAR1))).
tff('EQ-noRawTable', axiom, ![VVAR0: vOptRawTable] : (VVAR0 = vnoRawTable => ($true <=> VVAR0 = VVAR0))).
tff('EQ-someRawTable', axiom, ![VVAR0: vOptRawTable, VRawTable0: vRawTable, VVAR1: vOptRawTable, VRawTable1: vRawTable] : ((VVAR0 = vsomeRawTable(VRawTable0) & VVAR1 = vsomeRawTable(VRawTable1)) => (VRawTable0 = VRawTable1 <=> VVAR0 = VVAR1))).
tff('DIFF-aempty-acons', axiom, ![VVAR0: vAList, VVAR1: vAList, VAName0: vAName, VAList0: vAList] : ((VVAR0 = vaempty & VVAR1 = vacons(VAName0, VAList0)) => VVAR0 != VVAR1)).
tff('DIFF-ttempty-ttcons', axiom, ![VVAR0: vTType, VVAR1: vTType, VCType0: vCType, VTType0: vTType] : ((VVAR0 = vttempty & VVAR1 = vttcons(VCType0, VTType0)) => VVAR0 != VVAR1)).
tff('DIFF-rtempty-rtcons', axiom, ![VVAR0: vRawType, VVAR1: vRawType, VFType0: vFType, VRawType0: vRawType] : ((VVAR0 = vrtempty & VVAR1 = vrtcons(VFType0, VRawType0)) => VVAR0 != VVAR1)).
tff('DIFF-rempty-rcons', axiom, ![VVAR0: vRow, VVAR1: vRow, VFVal0: vFVal, VRow0: vRow] : ((VVAR0 = vrempty & VVAR1 = vrcons(VFVal0, VRow0)) => VVAR0 != VVAR1)).
tff('DIFF-tempty-tcons', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, VRow0: vRow, VRawTable0: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(VRow0, VRawTable0)) => VVAR0 != VVAR1)).
tff('DIFF-noRawTable-someRawTable', axiom, ![VVAR0: vOptRawTable, VVAR1: vOptRawTable, VRawTable0: vRawTable] : ((VVAR0 = vnoRawTable & VVAR1 = vsomeRawTable(VRawTable0)) => VVAR0 != VVAR1)).
tff('getRaw0', axiom, ![VVAR0: vTable, Val: vAList, Vrt: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vtable(Val, Vrt) & VVAR1 = vgetRaw(VVAR0)) => VVAR1 = Vrt)).
tff('getAL0', axiom, ![VVAR0: vTable, Val: vAList, Vrt: vRawTable, VVAR1: vAList] : ((VVAR0 = vtable(Val, Vrt) & VVAR1 = vgetAL(VVAR0)) => VVAR1 = Val)).
tff('matchingAList0', axiom, ![VVAR0: vTType, VVAR1: vAList] : ((VVAR0 = vttempty & VVAR1 = vaempty) => vmatchingAList(VVAR0, VVAR1))).
tff('matchingAList1', axiom, ![Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR1: vTType, Val: vAList, VVAR0: vCType, Vf: vFType, Vtt: vTType] : ((VVAR0 = vctype(Va1, Vf) & VVAR1 = vttcons(VVAR0, Vtt) & VVAR2 = vacons(Va2, Val)) => (vmatchingAList(VVAR1, VVAR2) <=> (Va1 = Va2 & vmatchingAList(Vtt, Val))))).
tff('matchingAList2', axiom, ![VVAR0: vTType, VVAR1: vAList, Vtt: vTType, Val: vAList] : ((VVAR0 = vttempty & VVAR1 = vaempty & (Vtt != VVAR0 | Val != VVAR1) & (![Vf0: vFType, Vtt0: vTType, Va10: vAName, VVAR2: vCType, VVAR3: vTType, Vtt] : ((~VVAR2 = vctype(Va10, Vf0)) | (~VVAR3 = vttcons(VVAR2, Vtt0)) | Vtt != VVAR3) | ![VVAR4: vAList, Va20: vAName, Val0: vAList, Val] : ((~VVAR4 = vacons(Va20, Val0)) | Val != VVAR4))) => (~vmatchingAList(Vtt, Val)))).
tff('welltypedtable0', axiom, ![Vt: vRawTable, VVAR1: vRawType, Val: vAList, VVAR0: vTable, Vtt: vTType] : ((VVAR0 = vtable(Val, Vt) & VVAR1 = vrawType(Vtt)) => (vwelltypedtable(Vtt, VVAR0) <=> (vmatchingAList(Vtt, Val) & vwelltypedRawtable(VVAR1, Vt))))).
tff('rawType0', axiom, ![VVAR0: vTType, VVAR1: vRawType, VVAR2: vRawType] : ((VVAR0 = vttempty & VVAR1 = vrawType(VVAR0) & VVAR2 = vrtempty) => VVAR1 = VVAR2)).
tff('rawType1', axiom, ![Va: vAName, Vft: vFType, VVAR2: vRawType, VVAR3: vRawType, VVAR4: vRawType, VVAR1: vTType, VVAR0: vCType, Vtt: vTType] : ((VVAR1 = vttcons(VVAR0, Vtt) & VVAR3 = vrawType(VVAR1) & VVAR2 = vrawType(Vtt) & VVAR0 = vctype(Va, Vft) & VVAR4 = vrtcons(Vft, VVAR2)) => VVAR3 = VVAR4)).
tff('welltypedRawtable0', axiom, ![VVAR0: vRawTable, Vrt: vRawType] : (VVAR0 = vtempty => vwelltypedRawtable(Vrt, VVAR0))).
tff('welltypedRawtable1', axiom, ![VVAR0: vRawTable, Vr: vRow, Vt: vRawTable, Vrt: vRawType] : (VVAR0 = vtcons(Vr, Vt) => (vwelltypedRawtable(Vrt, VVAR0) <=> (vwelltypedRow(Vrt, Vr) & vwelltypedRawtable(Vrt, Vt))))).
tff('welltypedRow0', axiom, ![VVAR0: vRawType, VVAR1: vRow] : ((VVAR0 = vrtempty & VVAR1 = vrempty) => vwelltypedRow(VVAR0, VVAR1))).
tff('welltypedRow1', axiom, ![Vv: vFVal, Vrt: vRawType, Vft: vFType, Vr: vRow, VVAR2: vFType, VVAR1: vRow, VVAR0: vRawType] : ((VVAR0 = vrtcons(Vft, Vrt) & VVAR1 = vrcons(Vv, Vr) & VVAR2 = vfieldType(Vv)) => (vwelltypedRow(VVAR0, VVAR1) <=> (VVAR2 = Vft & vwelltypedRow(Vrt, Vr))))).
tff('welltypedRow2', axiom, ![VVAR0: vRawType, VVAR1: vRow, Vrt: vRawType, Vr: vRow] : ((VVAR0 = vrtempty & VVAR1 = vrempty & (Vrt != VVAR0 | Vr != VVAR1) & (![VVAR2: vRawType, Vft0: vFType, Vrt0: vRawType, Vrt] : ((~VVAR2 = vrtcons(Vft0, Vrt0)) | Vrt != VVAR2) | ![VVAR3: vRow, Vv0: vFVal, Vr0: vRow, Vr] : ((~VVAR3 = vrcons(Vv0, Vr0)) | Vr != VVAR3))) => (~vwelltypedRow(Vrt, Vr)))).
tff('rowIn0', axiom, ![VVAR0: vRawTable, Vr1: vRow] : (VVAR0 = vtempty => (~vrowIn(Vr1, VVAR0)))).
tff('rowIn1', axiom, ![VVAR0: vRawTable, Vr2: vRow, Vrt: vRawTable, Vr1: vRow] : (VVAR0 = vtcons(Vr2, Vrt) => (vrowIn(Vr1, VVAR0) <=> (Vr1 = Vr2 | vrowIn(Vr1, Vrt))))).
tff('projectFirstRaw0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vprojectFirstRaw(VVAR0)) => VVAR1 = VVAR0)).
tff('projectFirstRaw1', axiom, ![Vrt: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRow] : ((VVAR0 = vrempty & VVAR2 = vprojectFirstRaw(Vrt) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR3 = vprojectFirstRaw(VVAR1) & VVAR4 = vtcons(VVAR0, VVAR2)) => VVAR3 = VVAR4)).
tff('projectFirstRaw2', axiom, ![Vrt: vRawTable, VVAR5: vRawTable, Vr: vRow, VVAR2: vRow, VVAR3: vRow, VVAR4: vRawTable, VVAR1: vRawTable, VVAR6: vRawTable, VVAR0: vRow, Vf: vFVal] : ((VVAR0 = vrcons(Vf, Vr) & VVAR2 = vrempty & VVAR4 = vprojectFirstRaw(Vrt) & VVAR3 = vrcons(Vf, VVAR2) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR5 = vprojectFirstRaw(VVAR1) & VVAR6 = vtcons(VVAR3, VVAR4)) => VVAR5 = VVAR6)).
tff('dropFirstColRaw0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vdropFirstColRaw(VVAR0)) => VVAR1 = VVAR0)).
tff('dropFirstColRaw1', axiom, ![Vrt: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRow] : ((VVAR0 = vrempty & VVAR1 = vtcons(VVAR0, Vrt) & VVAR2 = vdropFirstColRaw(Vrt) & VVAR4 = vtcons(VVAR0, VVAR2) & VVAR3 = vdropFirstColRaw(VVAR1)) => VVAR3 = VVAR4)).
tff('dropFirstColRaw2', axiom, ![Vrt: vRawTable, Vr: vRow, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRow, Vf: vFVal] : ((VVAR0 = vrcons(Vf, Vr) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR4 = vtcons(Vr, VVAR2) & VVAR2 = vdropFirstColRaw(Vrt) & VVAR3 = vdropFirstColRaw(VVAR1)) => VVAR3 = VVAR4)).
tff('isSomeRawTable0', axiom, ![VVAR0: vOptRawTable] : (VVAR0 = vnoRawTable => (~visSomeRawTable(VVAR0)))).
tff('isSomeRawTable1', axiom, ![VVAR0: vOptRawTable, Vt: vRawTable] : (VVAR0 = vsomeRawTable(Vt) => visSomeRawTable(VVAR0))).
tff('getSomeRawTable0', axiom, ![VVAR0: vOptRawTable, Vt: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vsomeRawTable(Vt) & VVAR1 = vgetSomeRawTable(VVAR0)) => VVAR1 = Vt)).
tff('attachColToFrontRaw0', axiom, ![VVAR0: vRawTable, VVAR1: vOptRawTable, VVAR2: vOptRawTable] : ((VVAR0 = vtempty & VVAR1 = vattachColToFrontRaw(VVAR0, VVAR0) & VVAR2 = vsomeRawTable(VVAR0)) => VVAR1 = VVAR2)).
tff('attachColToFrontRaw1', axiom, ![Vrt1: vRawTable, VVAR5: vRow, Vrest: vOptRawTable, VVAR7: vRawTable, Vr: vRow, VVAR2: vRow, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRow, VVAR6: vRawTable, VVAR8: vOptRawTable, VVAR0: vOptRawTable, Vf: vFVal, VVAR9: vOptRawTable, Vrt2: vRawTable] : ((VVAR5 = vrcons(Vf, Vr) & VVAR4 = vtcons(Vr, Vrt2) & VVAR1 = vrempty & VVAR6 = vgetSomeRawTable(Vrest) & VVAR2 = vrcons(Vf, VVAR1) & VVAR9 = vsomeRawTable(VVAR7) & VVAR8 = vattachColToFrontRaw(VVAR3, VVAR4) & VVAR0 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR3 = vtcons(VVAR2, Vrt1) & VVAR7 = vtcons(VVAR5, VVAR6) & Vrest = VVAR0 & visSomeRawTable(Vrest)) => VVAR8 = VVAR9)).
tff('attachColToFrontRaw2', axiom, ![Vrt1: vRawTable, VVAR5: vOptRawTable, Vrest: vOptRawTable, Vr: vRow, VVAR2: vRow, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRow, VVAR6: vOptRawTable, VVAR0: vOptRawTable, Vf: vFVal, Vrt2: vRawTable] : ((VVAR4 = vtcons(Vr, Vrt2) & VVAR1 = vrempty & VVAR2 = vrcons(Vf, VVAR1) & VVAR5 = vattachColToFrontRaw(VVAR3, VVAR4) & VVAR6 = vnoRawTable & VVAR0 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR3 = vtcons(VVAR2, Vrt1) & Vrest = VVAR0 & (~visSomeRawTable(Vrest))) => VVAR5 = VVAR6)).
tff('attachColToFrontRaw3', axiom, ![Vrt1: vRawTable, VVAR5: vOptRawTable, VVAR6: vOptRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR5 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR6 = vnoRawTable & (Vrt1 != VVAR0 | Vrt2 != VVAR0) & (![Vf0: vFVal, Vrt1, Vrt10: vRawTable, VVAR2: vRow, VVAR3: vRawTable, VVAR1: vRow] : ((~VVAR1 = vrempty) | (~VVAR2 = vrcons(Vf0, VVAR1)) | (~VVAR3 = vtcons(VVAR2, Vrt10)) | Vrt1 != VVAR3) | ![VVAR4: vRawTable, Vr0: vRow, Vrt20: vRawTable, Vrt2] : ((~VVAR4 = vtcons(Vr0, Vrt20)) | Vrt2 != VVAR4))) => VVAR5 = VVAR6)).
tff('rawUnion0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawUnion(VVAR0, Vrt2)) => VVAR1 = Vrt2)).
tff('rawUnion1', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawUnion(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = Vrt1)).
tff('rawUnion2', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vrawUnion(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR4 = vtcons(Vr1, Vurt1rt2) & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawUnion(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1) => VVAR3 = VVAR4)).
tff('rawUnion3', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2, Vrt2: vRawTable] : ((VVAR0 = vrawUnion(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawUnion(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1) => VVAR3 = Vurt1rt2)).
tff('rawIntersection0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawIntersection(VVAR0, Vrt2)) => VVAR1 = VVAR0)).
tff('rawIntersection1', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawIntersection(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = VVAR0)).
tff('rawIntersection2', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawIntersection(VVAR1, Vrt2) & vrowIn(Vr1, Vrt2) & Vrt2 != VVAR0) => VVAR2 = VVAR1)).
tff('rawIntersection3', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawIntersection(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR0)).
tff('rawIntersection4', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vrawIntersection(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR3 = vrawIntersection(VVAR2, Vrt2) & VVAR4 = vtcons(Vr1, Vurt1rt2) & VVAR2 = vtcons(Vr1, Vrt1) & Vurt1rt2 = VVAR0 & vrowIn(Vr1, Vrt2) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = VVAR4)).
tff('rawIntersection5', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2, Vrt2: vRawTable] : ((VVAR0 = vrawIntersection(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawIntersection(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = Vurt1rt2)).
tff('rawDifference0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawDifference(VVAR0, Vrt2)) => VVAR1 = VVAR0)).
tff('rawDifference1', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawDifference(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = Vrt1)).
tff('rawDifference2', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawDifference(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR1)).
tff('rawDifference3', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawDifference(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR0)).
tff('rawDifference4', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable, Vdrt1rt2: vRawTable] : ((VVAR1 = vtempty & VVAR3 = vrawDifference(VVAR2, Vrt2) & VVAR2 = vtcons(Vr1, Vrt1) & VVAR0 = vrawDifference(Vrt1, Vrt2) & VVAR4 = vtcons(Vr1, Vdrt1rt2) & Vdrt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = VVAR4)).
tff('rawDifference5', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable, Vdrt1rt2] : ((VVAR0 = vrawDifference(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawDifference(VVAR2, Vrt2) & Vdrt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = Vdrt1rt2)).
tff('test-rawIntersection3-1', conjecture, ![Vz1: vFVal, Vy2: vFVal, Vrt, VVAR5: vRow, VVAR7: vRawTable, Vz2: vFVal, Vdrt: vRawTable, Vprt: vRawTable, VVAR11: vRawTable, VVAR2: vRow, VVAR3: vRow, VVAR10: vRawTable, VVAR4: vRawTable, VVAR1: vRow, VVAR6: vRawTable, VVAR8: vRow, VVAR0: vRow, VVAR12: vRawTable, Vy1: vFVal, VVAR9: vRawTable] : ((VVAR8 = vrcons(Vy1, VVAR2) & VVAR2 = vrcons(Vz1, VVAR0) & VVAR0 = vrempty & VVAR4 = vtempty & VVAR10 = vtcons(VVAR3, VVAR9) & VVAR3 = vrcons(Vy2, VVAR2) & VVAR9 = vtcons(VVAR8, VVAR4) & VVAR12 = vrawIntersection(Vprt, Vdrt) & VVAR1 = vrcons(Vz2, VVAR0) & VVAR5 = vrcons(Vy2, VVAR1) & VVAR6 = vtcons(VVAR3, VVAR4) & VVAR7 = vtcons(VVAR5, VVAR6) & VVAR11 = vtcons(VVAR8, VVAR10) & Vprt = VVAR7 & Vdrt = VVAR11 & Vrt = VVAR6 & Vz1 != Vz2 & Vz1 != Vy1 & Vz1 != Vy2 & Vy1 != Vy2) => VVAR12 = Vrt)).
