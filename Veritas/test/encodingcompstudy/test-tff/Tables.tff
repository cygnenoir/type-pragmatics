tff('FType_type', type, vFType: $tType).
tff('AName_type', type, vAName: $tType).
tff('AList_type', type, vAList: $tType).
tff('CType_type', type, vCType: $tType).
tff('TType_type', type, vTType: $tType).
tff('RawType_type', type, vRawType: $tType).
tff('FVal_type', type, vFVal: $tType).
tff('Row_type', type, vRow: $tType).
tff('RawTable_type', type, vRawTable: $tType).
tff('Table_type', type, vTable: $tType).
tff('ctype_type', type, vctype: (vAName * vFType) > vCType).
tff('aempty_type', type, vaempty: vAList).
tff('acons_type', type, vacons: (vAName * vAList) > vAList).
tff('ttempty_type', type, vttempty: vTType).
tff('ttcons_type', type, vttcons: (vCType * vTType) > vTType).
tff('rtempty_type', type, vrtempty: vRawType).
tff('rtcons_type', type, vrtcons: (vFType * vRawType) > vRawType).
tff('rempty_type', type, vrempty: vRow).
tff('rcons_type', type, vrcons: (vFVal * vRow) > vRow).
tff('tempty_type', type, vtempty: vRawTable).
tff('tcons_type', type, vtcons: (vRow * vRawTable) > vRawTable).
tff('table_type', type, vtable: (vAList * vRawTable) > vTable).
tff('getRaw_type', type, vgetRaw: vTable > vRawTable).
tff('getAL_type', type, vgetAL: vTable > vAList).
tff('fieldType_type', type, vfieldType: vFVal > vFType).
tff('le_type', type, vle: (vFVal * vFVal) > $o).
tff('ge_type', type, vge: (vFVal * vFVal) > $o).
tff('matchingAList_type', type, vmatchingAList: (vTType * vAList) > $o).
tff('welltypedtable_type', type, vwelltypedtable: (vTType * vTable) > $o).
tff('rawType_type', type, vrawType: vTType > vRawType).
tff('welltypedRawtable_type', type, vwelltypedRawtable: (vRawType * vRawTable) > $o).
tff('welltypedRow_type', type, vwelltypedRow: (vRawType * vRow) > $o).
tff('getRaw1', axiom, ![VTable0: vTable, Val: vAList, Vrt: vRawTable, VRESULT: vRawTable] : ((VTable0 = vtable(Val, Vrt) & VRESULT = Vrt) => vgetRaw(VTable0) = VRESULT)).
tff('getAL1', axiom, ![VTable0: vTable, Val: vAList, Vrt: vRawTable, VRESULT: vAList] : ((VTable0 = vtable(Val, Vrt) & VRESULT = Val) => vgetAL(VTable0) = VRESULT)).
tff('matchingAList3', axiom, ![VTType0: vTType, VAList0: vAList] : ((VTType0 = vttempty & VAList0 = vaempty) => vmatchingAList(VTType0, VAList0))).
tff('matchingAList4', axiom, ![VAList0: vAList, Va1: vAName, VTType0: vTType, Va2: vAName, Val: vAList, Vf: vFType, Vtt: vTType] : ((VTType0 = vttcons(vctype(Va1, Vf), Vtt) & VAList0 = vacons(Va2, Val)) => (vmatchingAList(VTType0, VAList0) <=> (Va1 = Va2 & vmatchingAList(Vtt, Val))))).
tff('matchingAList5', axiom, ![VTType0: vTType, Vtt, VAList0: vAList, Val] : ((VTType0 = Vtt & VAList0 = Val) => !(vmatchingAList(VTType0, VAList0)))).
tff('welltypedtable1', axiom, ![Vt: vRawTable, VTType0: vTType, Val: vAList, Vtt: vTType, VTable0: vTable] : ((VTType0 = Vtt & VTable0 = vtable(Val, Vt)) => (vwelltypedtable(VTType0, VTable0) <=> (vmatchingAList(Vtt, Val) & vwelltypedRawtable(vrawType(Vtt), Vt))))).
tff('rawType2', axiom, ![VTType0: vTType, VRESULT: vRawType] : ((VTType0 = vttempty & VRESULT = vrtempty) => vrawType(VTType0) = VRESULT)).
tff('rawType3', axiom, ![Va: vAName, Vft: vFType, VTType0: vTType, VRESULT: vRawType, Vtt: vTType] : ((VTType0 = vttcons(vctype(Va, Vft), Vtt) & VRESULT = vrtcons(Vft, vrawType(Vtt))) => vrawType(VTType0) = VRESULT)).
tff('welltypedRawtable2', axiom, ![VRawType0: vRawType, Vrt, VRawTable0: vRawTable] : ((VRawType0 = Vrt & VRawTable0 = vtempty) => vwelltypedRawtable(VRawType0, VRawTable0))).
tff('welltypedRawtable3', axiom, ![Vt: vRawTable, Vrt: vRawType, VRawTable0: vRawTable, VRawType0: vRawType, Vr: vRow] : ((VRawType0 = Vrt & VRawTable0 = vtcons(Vr, Vt)) => (vwelltypedRawtable(VRawType0, VRawTable0) <=> (vwelltypedRow(Vrt, Vr) & vwelltypedRawtable(Vrt, Vt))))).
tff('welltypedRow3', axiom, ![VRawType0: vRawType, VRow0: vRow] : ((VRawType0 = vrtempty & VRow0 = vrempty) => vwelltypedRow(VRawType0, VRow0))).
tff('welltypedRow4', axiom, ![Vv: vFVal, VRow0: vRow, Vrt: vRawType, Vft: vFType, VRawType0: vRawType, Vr: vRow] : ((VRawType0 = vrtcons(Vft, Vrt) & VRow0 = vrcons(Vv, Vr)) => (vwelltypedRow(VRawType0, VRow0) <=> (vfieldType(Vv) = Vft & vwelltypedRow(Vrt, Vr))))).
tff('welltypedRow5', axiom, ![VRawType0: vRawType, Vrt, VRow0: vRow, Vr] : ((VRawType0 = Vrt & VRow0 = Vr) => !(vwelltypedRow(VRawType0, VRow0)))).
tff('test1', conjecture, ![Vx: vFVal, Vxt: vFType, VVAR0: vTType, Vtt, VTable0: vTable] : ((VVAR0 = Vtt & VTable0 = vtable(vaempty, vtcons(vrempty, vtempty)) & vfieldType(Vx) = Vxt & VVAR0 = vttempty) => vwelltypedtable(VVAR0, VTable0))).
