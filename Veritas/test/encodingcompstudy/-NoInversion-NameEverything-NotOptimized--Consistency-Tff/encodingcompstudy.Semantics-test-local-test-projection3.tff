tff('Conf_type', type, vConf: $tType).
tff('OptConf_type', type, vOptConf: $tType).
tff('Opt3_type', type, vOpt3: $tType).
tff('FType_type', type, vFType: $tType).
tff('AName_type', type, vAName: $tType).
tff('AList_type', type, vAList: $tType).
tff('CType_type', type, vCType: $tType).
tff('TType_type', type, vTType: $tType).
tff('RawType_type', type, vRawType: $tType).
tff('FVal_type', type, vFVal: $tType).
tff('Row_type', type, vRow: $tType).
tff('RawTable_type', type, vRawTable: $tType).
tff('Table_type', type, vTable: $tType).
tff('OptRawTable_type', type, vOptRawTable: $tType).
tff('Pred_type', type, vPred: $tType).
tff('Query_type', type, vQuery: $tType).
tff('TRef_type', type, vTRef: $tType).
tff('TStore_type', type, vTStore: $tType).
tff('TName_type', type, vTName: $tType).
tff('OptTable_type', type, vOptTable: $tType).
tff('conf_type', type, vconf: (vQuery * vTStore) > vConf).
tff('noConf_type', type, vnoConf: vOptConf).
tff('someConf_type', type, vsomeConf: vConf > vOptConf).
tff('error_type', type, verror: vOpt3).
tff('isTrue_type', type, visTrue: vOpt3).
tff('isFalse_type', type, visFalse: vOpt3).
tff('ctype_type', type, vctype: (vAName * vFType) > vCType).
tff('aempty_type', type, vaempty: vAList).
tff('acons_type', type, vacons: (vAName * vAList) > vAList).
tff('ttempty_type', type, vttempty: vTType).
tff('ttcons_type', type, vttcons: (vCType * vTType) > vTType).
tff('rtempty_type', type, vrtempty: vRawType).
tff('rtcons_type', type, vrtcons: (vFType * vRawType) > vRawType).
tff('rempty_type', type, vrempty: vRow).
tff('rcons_type', type, vrcons: (vFVal * vRow) > vRow).
tff('tempty_type', type, vtempty: vRawTable).
tff('tcons_type', type, vtcons: (vRow * vRawTable) > vRawTable).
tff('table_type', type, vtable: (vAList * vRawTable) > vTable).
tff('noRawTable_type', type, vnoRawTable: vOptRawTable).
tff('someRawTable_type', type, vsomeRawTable: vRawTable > vOptRawTable).
tff('VEquals_type', type, vVEquals: (vAName * vFVal) > vPred).
tff('VGreater_type', type, vVGreater: (vAName * vFVal) > vPred).
tff('VSmaller_type', type, vVSmaller: (vAName * vFVal) > vPred).
tff('Ref_type', type, vRef: vTName > vTRef).
tff('Tvalue_type', type, vTvalue: vTable > vQuery).
tff('SelectAllFrom_type', type, vSelectAllFrom: vTRef > vQuery).
tff('SelectSomeFrom_type', type, vSelectSomeFrom: (vAList * vTRef) > vQuery).
tff('SelectAllFromWhere_type', type, vSelectAllFromWhere: (vTRef * vPred) > vQuery).
tff('SelectSomeFromWhere_type', type, vSelectSomeFromWhere: (vAList * vTRef * vPred) > vQuery).
tff('Union_type', type, vUnion: (vQuery * vQuery) > vQuery).
tff('Intersection_type', type, vIntersection: (vQuery * vQuery) > vQuery).
tff('Difference_type', type, vDifference: (vQuery * vQuery) > vQuery).
tff('noTable_type', type, vnoTable: vOptTable).
tff('someTable_type', type, vsomeTable: vTable > vOptTable).
tff('emptyStore_type', type, vemptyStore: vTStore).
tff('bindStore_type', type, vbindStore: (vTName * vTable * vTStore) > vTStore).
tff('x1_type', type, vx1: vFVal).
tff('x2_type', type, vx2: vFVal).
tff('y1_type', type, vy1: vFVal).
tff('y2_type', type, vy2: vFVal).
tff('z1_type', type, vz1: vFVal).
tff('z2_type', type, vz2: vFVal).
tff('TN_type', type, vTN: vTName).
tff('A1_type', type, vA1: vAName).
tff('A2_type', type, vA2: vAName).
tff('A3_type', type, vA3: vAName).
tff('getQuery_type', type, vgetQuery: vConf > vQuery).
tff('isSomeConf_type', type, visSomeConf: vOptConf > $o).
tff('findCol_type', type, vfindCol: (vAName * vTable) > vOptRawTable).
tff('projectEmptyCol_type', type, vprojectEmptyCol: vRawTable > vRawTable).
tff('project_type', type, vproject: (vAList * vTable) > vOptRawTable).
tff('select_type', type, vselect: (vTable * vPred) > vOptTable).
tff('union_type', type, vunion: (vTable * vTable) > vOptTable).
tff('intersect_type', type, vintersect: (vTable * vTable) > vOptTable).
tff('difference_type', type, vdifference: (vTable * vTable) > vOptTable).
tff('reduce_type', type, vreduce: vConf > vOptConf).
tff('getRaw_type', type, vgetRaw: vTable > vRawTable).
tff('getAL_type', type, vgetAL: vTable > vAList).
tff('fieldType_type', type, vfieldType: vFVal > vFType).
tff('le_type', type, vle: (vFVal * vFVal) > $o).
tff('ge_type', type, vge: (vFVal * vFVal) > $o).
tff('matchingAList_type', type, vmatchingAList: (vTType * vAList) > $o).
tff('welltypedtable_type', type, vwelltypedtable: (vTType * vTable) > $o).
tff('rawType_type', type, vrawType: vTType > vRawType).
tff('welltypedRawtable_type', type, vwelltypedRawtable: (vRawType * vRawTable) > $o).
tff('welltypedRow_type', type, vwelltypedRow: (vRawType * vRow) > $o).
tff('rowIn_type', type, vrowIn: (vRow * vRawTable) > $o).
tff('projectFirstRaw_type', type, vprojectFirstRaw: vRawTable > vRawTable).
tff('dropFirstColRaw_type', type, vdropFirstColRaw: vRawTable > vRawTable).
tff('isSomeRawTable_type', type, visSomeRawTable: vOptRawTable > $o).
tff('attachColToFrontRaw_type', type, vattachColToFrontRaw: (vRawTable * vRawTable) > vOptRawTable).
tff('rawUnion_type', type, vrawUnion: (vRawTable * vRawTable) > vRawTable).
tff('rawIntersection_type', type, vrawIntersection: (vRawTable * vRawTable) > vRawTable).
tff('rawDifference_type', type, vrawDifference: (vRawTable * vRawTable) > vRawTable).
tff('isValue_type', type, visValue: vQuery > $o).
tff('isSomeTable_type', type, visSomeTable: vOptTable > $o).
tff('lookupStore_type', type, vlookupStore: (vTName * vTStore) > vOptTable).
tff('getSomeConf_type', type, vgetSomeConf: vOptConf > vConf).
tff('singleRowSelect_type', type, vsingleRowSelect: (vAList * vPred * vRow) > vOpt3).
tff('getSomeRawTable_type', type, vgetSomeRawTable: vOptRawTable > vRawTable).
tff('getSomeTable_type', type, vgetSomeTable: vOptTable > vTable).
tff('EQ-conf', axiom, ![VTStore1: vTStore, VTStore0: vTStore, VQuery1: vQuery, VVAR1: vConf, VVAR0: vConf, VQuery0: vQuery] : ((VVAR0 = vconf(VQuery0, VTStore0) & VVAR1 = vconf(VQuery1, VTStore1)) => ((VQuery0 = VQuery1 & VTStore0 = VTStore1) <=> VVAR0 = VVAR1))).
tff('EQ-noConf', axiom, ![VVAR0: vOptConf] : (VVAR0 = vnoConf => ($true <=> VVAR0 = VVAR0))).
tff('EQ-someConf', axiom, ![VVAR0: vOptConf, VConf0: vConf, VVAR1: vOptConf, VConf1: vConf] : ((VVAR0 = vsomeConf(VConf0) & VVAR1 = vsomeConf(VConf1)) => (VConf0 = VConf1 <=> VVAR0 = VVAR1))).
tff('EQ-error', axiom, ![VVAR0: vOpt3] : (VVAR0 = verror => ($true <=> VVAR0 = VVAR0))).
tff('EQ-isTrue', axiom, ![VVAR0: vOpt3] : (VVAR0 = visTrue => ($true <=> VVAR0 = VVAR0))).
tff('EQ-isFalse', axiom, ![VVAR0: vOpt3] : (VVAR0 = visFalse => ($true <=> VVAR0 = VVAR0))).
tff('EQ-ctype', axiom, ![VAName0: vAName, VVAR1: vCType, VFType0: vFType, VVAR0: vCType, VAName1: vAName, VFType1: vFType] : ((VVAR0 = vctype(VAName0, VFType0) & VVAR1 = vctype(VAName1, VFType1)) => ((VAName0 = VAName1 & VFType0 = VFType1) <=> VVAR0 = VVAR1))).
tff('EQ-aempty', axiom, ![VVAR0: vAList] : (VVAR0 = vaempty => ($true <=> VVAR0 = VVAR0))).
tff('EQ-acons', axiom, ![VAList0: vAList, VAName0: vAName, VVAR1: vAList, VVAR0: vAList, VAName1: vAName, VAList1: vAList] : ((VVAR0 = vacons(VAName0, VAList0) & VVAR1 = vacons(VAName1, VAList1)) => ((VAName0 = VAName1 & VAList0 = VAList1) <=> VVAR0 = VVAR1))).
tff('EQ-ttempty', axiom, ![VVAR0: vTType] : (VVAR0 = vttempty => ($true <=> VVAR0 = VVAR0))).
tff('EQ-ttcons', axiom, ![VTType0: vTType, VTType1: vTType, VCType0: vCType, VVAR1: vTType, VVAR0: vTType, VCType1: vCType] : ((VVAR0 = vttcons(VCType0, VTType0) & VVAR1 = vttcons(VCType1, VTType1)) => ((VCType0 = VCType1 & VTType0 = VTType1) <=> VVAR0 = VVAR1))).
tff('EQ-rtempty', axiom, ![VVAR0: vRawType] : (VVAR0 = vrtempty => ($true <=> VVAR0 = VVAR0))).
tff('EQ-rtcons', axiom, ![VRawType1: vRawType, VRawType0: vRawType, VVAR1: vRawType, VFType0: vFType, VVAR0: vRawType, VFType1: vFType] : ((VVAR0 = vrtcons(VFType0, VRawType0) & VVAR1 = vrtcons(VFType1, VRawType1)) => ((VFType0 = VFType1 & VRawType0 = VRawType1) <=> VVAR0 = VVAR1))).
tff('EQ-rempty', axiom, ![VVAR0: vRow] : (VVAR0 = vrempty => ($true <=> VVAR0 = VVAR0))).
tff('EQ-rcons', axiom, ![VRow0: vRow, VFVal1: vFVal, VVAR1: vRow, VVAR0: vRow, VFVal0: vFVal, VRow1: vRow] : ((VVAR0 = vrcons(VFVal0, VRow0) & VVAR1 = vrcons(VFVal1, VRow1)) => ((VFVal0 = VFVal1 & VRow0 = VRow1) <=> VVAR0 = VVAR1))).
tff('EQ-tempty', axiom, ![VVAR0: vRawTable] : (VVAR0 = vtempty => ($true <=> VVAR0 = VVAR0))).
tff('EQ-tcons', axiom, ![VRow0: vRow, VRawTable0: vRawTable, VRawTable1: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, VRow1: vRow] : ((VVAR0 = vtcons(VRow0, VRawTable0) & VVAR1 = vtcons(VRow1, VRawTable1)) => ((VRow0 = VRow1 & VRawTable0 = VRawTable1) <=> VVAR0 = VVAR1))).
tff('EQ-table', axiom, ![VAList0: vAList, VRawTable0: vRawTable, VRawTable1: vRawTable, VVAR1: vTable, VVAR0: vTable, VAList1: vAList] : ((VVAR0 = vtable(VAList0, VRawTable0) & VVAR1 = vtable(VAList1, VRawTable1)) => ((VAList0 = VAList1 & VRawTable0 = VRawTable1) <=> VVAR0 = VVAR1))).
tff('EQ-noRawTable', axiom, ![VVAR0: vOptRawTable] : (VVAR0 = vnoRawTable => ($true <=> VVAR0 = VVAR0))).
tff('EQ-someRawTable', axiom, ![VVAR0: vOptRawTable, VRawTable0: vRawTable, VVAR1: vOptRawTable, VRawTable1: vRawTable] : ((VVAR0 = vsomeRawTable(VRawTable0) & VVAR1 = vsomeRawTable(VRawTable1)) => (VRawTable0 = VRawTable1 <=> VVAR0 = VVAR1))).
tff('EQ-VEquals', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVEquals(VAName0, VFVal0) & VVAR1 = vVEquals(VAName1, VFVal1)) => ((VAName0 = VAName1 & VFVal0 = VFVal1) <=> VVAR0 = VVAR1))).
tff('EQ-VGreater', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVGreater(VAName0, VFVal0) & VVAR1 = vVGreater(VAName1, VFVal1)) => ((VAName0 = VAName1 & VFVal0 = VFVal1) <=> VVAR0 = VVAR1))).
tff('EQ-VSmaller', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVSmaller(VAName0, VFVal0) & VVAR1 = vVSmaller(VAName1, VFVal1)) => ((VAName0 = VAName1 & VFVal0 = VFVal1) <=> VVAR0 = VVAR1))).
tff('EQ-Ref', axiom, ![VVAR0: vTRef, VTName0: vTName, VVAR1: vTRef, VTName1: vTName] : ((VVAR0 = vRef(VTName0) & VVAR1 = vRef(VTName1)) => (VTName0 = VTName1 <=> VVAR0 = VVAR1))).
tff('EQ-Tvalue', axiom, ![VVAR0: vQuery, VTable0: vTable, VVAR1: vQuery, VTable1: vTable] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vTvalue(VTable1)) => (VTable0 = VTable1 <=> VVAR0 = VVAR1))).
tff('EQ-SelectAllFrom', axiom, ![VVAR0: vQuery, VTRef0: vTRef, VVAR1: vQuery, VTRef1: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vSelectAllFrom(VTRef1)) => (VTRef0 = VTRef1 <=> VVAR0 = VVAR1))).
tff('EQ-SelectSomeFrom', axiom, ![VAList0: vAList, VVAR1: vQuery, VVAR0: vQuery, VAList1: vAList, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vSelectSomeFrom(VAList1, VTRef1)) => ((VAList0 = VAList1 & VTRef0 = VTRef1) <=> VVAR0 = VVAR1))).
tff('EQ-SelectAllFromWhere', axiom, ![VPred0: vPred, VPred1: vPred, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectAllFromWhere(VTRef0, VPred0) & VVAR1 = vSelectAllFromWhere(VTRef1, VPred1)) => ((VTRef0 = VTRef1 & VPred0 = VPred1) <=> VVAR0 = VVAR1))).
tff('EQ-SelectSomeFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VPred1: vPred, VVAR1: vQuery, VVAR0: vQuery, VAList1: vAList, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFromWhere(VAList0, VTRef0, VPred0) & VVAR1 = vSelectSomeFromWhere(VAList1, VTRef1, VPred1)) => ((VAList0 = VAList1 & (VTRef0 = VTRef1 & VPred0 = VPred1)) <=> VVAR0 = VVAR1))).
tff('EQ-Union', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vUnion(VQuery0, VQuery1) & VVAR1 = vUnion(VQuery2, VQuery3)) => ((VQuery0 = VQuery2 & VQuery1 = VQuery3) <=> VVAR0 = VVAR1))).
tff('EQ-Intersection', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vIntersection(VQuery0, VQuery1) & VVAR1 = vIntersection(VQuery2, VQuery3)) => ((VQuery0 = VQuery2 & VQuery1 = VQuery3) <=> VVAR0 = VVAR1))).
tff('EQ-Difference', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vDifference(VQuery0, VQuery1) & VVAR1 = vDifference(VQuery2, VQuery3)) => ((VQuery0 = VQuery2 & VQuery1 = VQuery3) <=> VVAR0 = VVAR1))).
tff('EQ-noTable', axiom, ![VVAR0: vOptTable] : (VVAR0 = vnoTable => ($true <=> VVAR0 = VVAR0))).
tff('EQ-someTable', axiom, ![VVAR0: vOptTable, VTable0: vTable, VVAR1: vOptTable, VTable1: vTable] : ((VVAR0 = vsomeTable(VTable0) & VVAR1 = vsomeTable(VTable1)) => (VTable0 = VTable1 <=> VVAR0 = VVAR1))).
tff('EQ-emptyStore', axiom, ![VVAR0: vTStore] : (VVAR0 = vemptyStore => ($true <=> VVAR0 = VVAR0))).
tff('EQ-bindStore', axiom, ![VTable1: vTable, VTStore1: vTStore, VTName0: vTName, VTStore0: vTStore, VVAR1: vTStore, VVAR0: vTStore, VTName1: vTName, VTable0: vTable] : ((VVAR0 = vbindStore(VTName0, VTable0, VTStore0) & VVAR1 = vbindStore(VTName1, VTable1, VTStore1)) => ((VTName0 = VTName1 & (VTable0 = VTable1 & VTStore0 = VTStore1)) <=> VVAR0 = VVAR1))).
tff('DIFF-noConf-someConf', axiom, ![VVAR0: vOptConf, VVAR1: vOptConf, VConf0: vConf] : ((VVAR0 = vnoConf & VVAR1 = vsomeConf(VConf0)) => VVAR0 != VVAR1)).
tff('DIFF-error-isTrue', axiom, ![VVAR0: vOpt3, VVAR1: vOpt3] : ((VVAR0 = verror & VVAR1 = visTrue) => VVAR0 != VVAR1)).
tff('DIFF-error-isFalse', axiom, ![VVAR0: vOpt3, VVAR1: vOpt3] : ((VVAR0 = verror & VVAR1 = visFalse) => VVAR0 != VVAR1)).
tff('DIFF-isTrue-isFalse', axiom, ![VVAR0: vOpt3, VVAR1: vOpt3] : ((VVAR0 = visTrue & VVAR1 = visFalse) => VVAR0 != VVAR1)).
tff('DIFF-aempty-acons', axiom, ![VVAR0: vAList, VVAR1: vAList, VAName0: vAName, VAList0: vAList] : ((VVAR0 = vaempty & VVAR1 = vacons(VAName0, VAList0)) => VVAR0 != VVAR1)).
tff('DIFF-ttempty-ttcons', axiom, ![VVAR0: vTType, VVAR1: vTType, VCType0: vCType, VTType0: vTType] : ((VVAR0 = vttempty & VVAR1 = vttcons(VCType0, VTType0)) => VVAR0 != VVAR1)).
tff('DIFF-rtempty-rtcons', axiom, ![VVAR0: vRawType, VVAR1: vRawType, VFType0: vFType, VRawType0: vRawType] : ((VVAR0 = vrtempty & VVAR1 = vrtcons(VFType0, VRawType0)) => VVAR0 != VVAR1)).
tff('DIFF-rempty-rcons', axiom, ![VVAR0: vRow, VVAR1: vRow, VFVal0: vFVal, VRow0: vRow] : ((VVAR0 = vrempty & VVAR1 = vrcons(VFVal0, VRow0)) => VVAR0 != VVAR1)).
tff('DIFF-tempty-tcons', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, VRow0: vRow, VRawTable0: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(VRow0, VRawTable0)) => VVAR0 != VVAR1)).
tff('DIFF-noRawTable-someRawTable', axiom, ![VVAR0: vOptRawTable, VVAR1: vOptRawTable, VRawTable0: vRawTable] : ((VVAR0 = vnoRawTable & VVAR1 = vsomeRawTable(VRawTable0)) => VVAR0 != VVAR1)).
tff('DIFF-VEquals-VGreater', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVEquals(VAName0, VFVal0) & VVAR1 = vVGreater(VAName1, VFVal1)) => VVAR0 != VVAR1)).
tff('DIFF-VEquals-VSmaller', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVEquals(VAName0, VFVal0) & VVAR1 = vVSmaller(VAName1, VFVal1)) => VVAR0 != VVAR1)).
tff('DIFF-VGreater-VSmaller', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVGreater(VAName0, VFVal0) & VVAR1 = vVSmaller(VAName1, VFVal1)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-SelectAllFrom', axiom, ![VVAR0: vQuery, VTable0: vTable, VVAR1: vQuery, VTRef0: vTRef] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vSelectAllFrom(VTRef0)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-SelectSomeFrom', axiom, ![VAList0: vAList, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VTRef0: vTRef] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vSelectSomeFrom(VAList0, VTRef0)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-SelectAllFromWhere', axiom, ![VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VTRef0: vTRef] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vSelectAllFromWhere(VTRef0, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-SelectSomeFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VTRef0: vTRef] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vSelectSomeFromWhere(VAList0, VTRef0, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-Union', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VQuery0: vQuery] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vUnion(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-Intersection', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VQuery0: vQuery] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vIntersection(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-Difference', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VQuery0: vQuery] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vDifference(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-SelectSomeFrom', axiom, ![VAList0: vAList, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vSelectSomeFrom(VAList0, VTRef1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-SelectAllFromWhere', axiom, ![VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vSelectAllFromWhere(VTRef1, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-SelectSomeFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vSelectSomeFromWhere(VAList0, VTRef1, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-Union', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vUnion(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-Intersection', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vIntersection(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-Difference', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vDifference(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFrom-SelectAllFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vSelectAllFromWhere(VTRef1, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFrom-SelectSomeFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VAList1: vAList, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vSelectSomeFromWhere(VAList1, VTRef1, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFrom-Union', axiom, ![VAList0: vAList, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vUnion(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFrom-Intersection', axiom, ![VAList0: vAList, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vIntersection(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFrom-Difference', axiom, ![VAList0: vAList, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vDifference(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFromWhere-SelectSomeFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VPred1: vPred, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectAllFromWhere(VTRef0, VPred0) & VVAR1 = vSelectSomeFromWhere(VAList0, VTRef1, VPred1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFromWhere-Union', axiom, ![VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFromWhere(VTRef0, VPred0) & VVAR1 = vUnion(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFromWhere-Intersection', axiom, ![VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFromWhere(VTRef0, VPred0) & VVAR1 = vIntersection(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFromWhere-Difference', axiom, ![VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFromWhere(VTRef0, VPred0) & VVAR1 = vDifference(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFromWhere-Union', axiom, ![VAList0: vAList, VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFromWhere(VAList0, VTRef0, VPred0) & VVAR1 = vUnion(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFromWhere-Intersection', axiom, ![VAList0: vAList, VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFromWhere(VAList0, VTRef0, VPred0) & VVAR1 = vIntersection(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFromWhere-Difference', axiom, ![VAList0: vAList, VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFromWhere(VAList0, VTRef0, VPred0) & VVAR1 = vDifference(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-Union-Intersection', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vUnion(VQuery0, VQuery1) & VVAR1 = vIntersection(VQuery2, VQuery3)) => VVAR0 != VVAR1)).
tff('DIFF-Union-Difference', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vUnion(VQuery0, VQuery1) & VVAR1 = vDifference(VQuery2, VQuery3)) => VVAR0 != VVAR1)).
tff('DIFF-Intersection-Difference', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vIntersection(VQuery0, VQuery1) & VVAR1 = vDifference(VQuery2, VQuery3)) => VVAR0 != VVAR1)).
tff('DIFF-noTable-someTable', axiom, ![VVAR0: vOptTable, VVAR1: vOptTable, VTable0: vTable] : ((VVAR0 = vnoTable & VVAR1 = vsomeTable(VTable0)) => VVAR0 != VVAR1)).
tff('DIFF-emptyStore-bindStore', axiom, ![VTName0: vTName, VTStore0: vTStore, VVAR1: vTStore, VVAR0: vTStore, VTable0: vTable] : ((VVAR0 = vemptyStore & VVAR1 = vbindStore(VTName0, VTable0, VTStore0)) => VVAR0 != VVAR1)).
tff('getQuery0', axiom, ![VVAR0: vConf, Vq: vQuery, Vts: vTStore, VVAR1: vQuery] : ((VVAR0 = vconf(Vq, Vts) & VVAR1 = vgetQuery(VVAR0)) => VVAR1 = Vq)).
tff('isSomeConf0', axiom, ![VVAR0: vOptConf] : (VVAR0 = vnoConf => (~visSomeConf(VVAR0)))).
tff('isSomeConf1', axiom, ![VVAR0: vOptConf, Vt: vConf] : (VVAR0 = vsomeConf(Vt) => visSomeConf(VVAR0))).
tff('getSomeConf0', axiom, ![VVAR0: vOptConf, Vc: vConf, VVAR1: vConf] : ((VVAR0 = vsomeConf(Vc) & VVAR1 = vgetSomeConf(VVAR0)) => VVAR1 = Vc)).
tff('findCol0', axiom, ![Vrt: vRawTable, Va: vAName, VVAR2: vOptRawTable, VVAR3: vOptRawTable, VVAR1: vTable, VVAR0: vAList] : ((VVAR0 = vaempty & VVAR1 = vtable(VVAR0, Vrt) & VVAR2 = vfindCol(Va, VVAR1) & VVAR3 = vnoRawTable) => VVAR2 = VVAR3)).
tff('findCol1', axiom, ![Vrt: vRawTable, Va: vAName, Va2: vAName, VVAR2: vRawTable, VVAR3: vOptRawTable, VVAR4: vOptRawTable, VVAR1: vTable, Val: vAList, VVAR0: vAList] : ((VVAR2 = vprojectFirstRaw(Vrt) & VVAR3 = vfindCol(Va, VVAR1) & VVAR1 = vtable(VVAR0, Vrt) & VVAR4 = vsomeRawTable(VVAR2) & VVAR0 = vacons(Va2, Val) & Va = Va2) => VVAR3 = VVAR4)).
tff('findCol2', axiom, ![Vrt: vRawTable, Va: vAName, VVAR5: vOptRawTable, Va2: vAName, VVAR2: vRawTable, VVAR3: vTable, VVAR4: vOptRawTable, VVAR1: vTable, Val: vAList, VVAR0: vAList] : ((VVAR4 = vfindCol(Va, VVAR1) & VVAR1 = vtable(VVAR0, Vrt) & VVAR2 = vdropFirstColRaw(Vrt) & VVAR3 = vtable(Val, VVAR2) & VVAR5 = vfindCol(Va, VVAR3) & VVAR0 = vacons(Va2, Val) & Va != Va2) => VVAR4 = VVAR5)).
tff('projectEmptyCol0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vprojectEmptyCol(VVAR0)) => VVAR1 = VVAR0)).
tff('projectEmptyCol1', axiom, ![Vt: vRawTable, Vr: vRow, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRow, VVAR0: vRawTable] : ((VVAR3 = vprojectEmptyCol(VVAR0) & VVAR1 = vrempty & VVAR2 = vprojectEmptyCol(Vt) & VVAR0 = vtcons(Vr, Vt) & VVAR4 = vtcons(VVAR1, VVAR2)) => VVAR3 = VVAR4)).
tff('project0', axiom, ![Vrt: vRawTable, VVAR2: vRawTable, VVAR3: vOptRawTable, VVAR4: vOptRawTable, VVAR1: vTable, Val: vAList, VVAR0: vAList] : ((VVAR1 = vtable(Val, Vrt) & VVAR3 = vproject(VVAR0, VVAR1) & VVAR2 = vprojectEmptyCol(Vrt) & VVAR0 = vaempty & VVAR4 = vsomeRawTable(VVAR2)) => VVAR3 = VVAR4)).
tff('project1', axiom, ![Vt: vTable, Va: vAName, VVAR5: vRawTable, Vrest: vOptRawTable, VVAR7: vOptRawTable, VVAR3: vAList, VVAR4: vRawTable, VVAR1: vOptRawTable, VVAR6: vOptRawTable, Vcol: vOptRawTable, VVAR0: vOptRawTable, Valr: vAList] : ((VVAR0 = vfindCol(Va, Vt) & VVAR5 = vgetSomeRawTable(Vrest) & VVAR7 = vattachColToFrontRaw(VVAR4, VVAR5) & VVAR4 = vgetSomeRawTable(Vcol) & VVAR6 = vproject(VVAR3, Vt) & VVAR3 = vacons(Va, Valr) & VVAR1 = vproject(Valr, Vt) & Vcol = VVAR0 & Vrest = VVAR1 & (visSomeRawTable(Vcol) & visSomeRawTable(Vrest)) & ![VVAR2: vTable, Val0: vAList, Vrt0: vRawTable, Vt] : ((~VVAR2 = vtable(Val0, Vrt0)) | Vt != VVAR2)) => VVAR6 = VVAR7)).
tff('project2', axiom, ![Vt: vTable, Va: vAName, VVAR5: vOptRawTable, Vrest: vOptRawTable, VVAR3: vAList, VVAR4: vOptRawTable, VVAR1: vOptRawTable, Vcol: vOptRawTable, VVAR0: vOptRawTable, Valr: vAList] : ((VVAR0 = vfindCol(Va, Vt) & VVAR4 = vproject(VVAR3, Vt) & VVAR5 = vnoRawTable & VVAR3 = vacons(Va, Valr) & VVAR1 = vproject(Valr, Vt) & Vcol = VVAR0 & Vrest = VVAR1 & (~(visSomeRawTable(Vcol) & visSomeRawTable(Vrest))) & ![VVAR2: vTable, Val0: vAList, Vrt0: vRawTable, Vt] : ((~VVAR2 = vtable(Val0, Vrt0)) | Vt != VVAR2)) => VVAR4 = VVAR5)).
tff('singleRowSelect0', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR3 = vVEquals(Va2, Vfv) & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & Vf = Vfv) => VVAR5 = VVAR6)).
tff('singleRowSelect1', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR3 = vVEquals(Va2, Vfv) & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & Vf != Vfv) => VVAR5 = VVAR6)).
tff('singleRowSelect2', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR3 = vVEquals(Va2, Vfv) & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & VVAR6 = verror & Va1 != Va2) => VVAR5 = VVAR6)).
tff('singleRowSelect3', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR3 = vVEquals(Va2, Vfv) & VVAR0 = vaempty & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & Vf = Vfv & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect4', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR3 = vVEquals(Va2, Vfv) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & Vf != Vfv & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect5', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR3 = vVEquals(Va2, Vfv) & VVAR6 = vsingleRowSelect(Var, VVAR3, Vr) & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 != Va2 & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect6', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & vge(Vf, Vfv)) => VVAR5 = VVAR6)).
tff('singleRowSelect7', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & (~vge(Vf, Vfv))) => VVAR5 = VVAR6)).
tff('singleRowSelect8', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & VVAR6 = verror & Va1 != Va2) => VVAR5 = VVAR6)).
tff('singleRowSelect9', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR0 = vaempty & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & vge(Vf, Vfv) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect10', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & (~vge(Vf, Vfv)) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect11', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR6 = vsingleRowSelect(Var, VVAR3, Vr) & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 != Va2 & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect12', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & vle(Vf, Vfv)) => VVAR5 = VVAR6)).
tff('singleRowSelect13', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & (~vle(Vf, Vfv))) => VVAR5 = VVAR6)).
tff('singleRowSelect14', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & VVAR6 = verror & Va1 != Va2) => VVAR5 = VVAR6)).
tff('singleRowSelect15', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & vle(Vf, Vfv) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect16', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & (~vle(Vf, Vfv)) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect17', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR6 = vsingleRowSelect(Var, VVAR3, Vr) & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 != Va2 & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('select0', axiom, ![Vpred: vPred, VVAR2: vOptTable, VVAR3: vOptTable, VVAR1: vTable, Val: vAList, VVAR0: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtable(Val, VVAR0) & VVAR2 = vselect(VVAR1, Vpred) & VVAR3 = vsomeTable(VVAR1)) => VVAR2 = VVAR3)).
tff('select1', axiom, ![Vrt: vRawTable, VVAR5: vTable, Vpred: vPred, VVAR7: vRawTable, VVAR11: vOptTable, Vr: vRow, VVAR2: vOpt3, VVAR3: vOpt3, Vrb, VVAR10: vOptTable, VVAR4: vRawTable, VVAR1: vOptTable, VVAR6: vTable, VVAR8: vRawTable, Vrts: vOptTable, Val: vAList, VVAR0: vTable, VVAR9: vTable] : ((VVAR8 = vtcons(Vr, VVAR7) & VVAR4 = vtcons(Vr, Vrt) & VVAR1 = vselect(VVAR0, Vpred) & VVAR6 = vgetSomeTable(Vrts) & VVAR5 = vtable(Val, VVAR4) & VVAR0 = vtable(Val, Vrt) & VVAR9 = vtable(Val, VVAR8) & VVAR10 = vselect(VVAR5, Vpred) & VVAR7 = vgetRaw(VVAR6) & VVAR2 = vsingleRowSelect(Val, Vpred, Vr) & VVAR3 = visTrue & VVAR11 = vsomeTable(VVAR9) & Vrts = VVAR1 & Vrb = VVAR2 & Vrb = VVAR3) => VVAR10 = VVAR11)).
tff('select2', axiom, ![Vrt: vRawTable, VVAR5: vRawTable, Vpred: vPred, VVAR7: vOptTable, Vr: vRow, VVAR2: vOpt3, VVAR3: vOpt3, Vrb, VVAR4: vOpt3, VVAR1: vOptTable, VVAR6: vTable, Vrts, Val: vAList, VVAR0: vTable] : ((VVAR5 = vtcons(Vr, Vrt) & VVAR1 = vselect(VVAR0, Vpred) & VVAR0 = vtable(Val, Vrt) & VVAR4 = visFalse & VVAR2 = vsingleRowSelect(Val, Vpred, Vr) & VVAR3 = visTrue & VVAR6 = vtable(Val, VVAR5) & VVAR7 = vselect(VVAR6, Vpred) & Vrts = VVAR1 & Vrb = VVAR2 & Vrb != VVAR3 & Vrb = VVAR4) => VVAR7 = Vrts)).
tff('select3', axiom, ![Vrt: vRawTable, VVAR5: vRawTable, Vpred: vPred, VVAR7: vOptTable, Vr: vRow, VVAR2: vOpt3, VVAR3: vOpt3, Vrb, VVAR4: vOpt3, VVAR1: vOptTable, VVAR6: vTable, VVAR8: vOptTable, Vrts, Val: vAList, VVAR0: vTable] : ((VVAR5 = vtcons(Vr, Vrt) & VVAR1 = vselect(VVAR0, Vpred) & VVAR0 = vtable(Val, Vrt) & VVAR8 = vnoTable & VVAR4 = visFalse & VVAR2 = vsingleRowSelect(Val, Vpred, Vr) & VVAR3 = visTrue & VVAR6 = vtable(Val, VVAR5) & VVAR7 = vselect(VVAR6, Vpred) & Vrts = VVAR1 & Vrb = VVAR2 & Vrb != VVAR3 & Vrb != VVAR4) => VVAR7 = VVAR8)).
tff('union0', axiom, ![Vrt1: vRawTable, VVAR5: vOptTable, VVAR2: vRawTable, VVAR3: vTable, VVAR4: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR2 = vrawUnion(Vrt1, Vrt2) & VVAR1 = vtable(Val2, Vrt2) & VVAR4 = vunion(VVAR0, VVAR1) & VVAR3 = vtable(Val1, VVAR2) & VVAR5 = vsomeTable(VVAR3) & VVAR0 = vtable(Val1, Vrt1) & Val1 = Val2) => VVAR4 = VVAR5)).
tff('union1', axiom, ![Vrt1: vRawTable, VVAR2: vOptTable, VVAR3: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR0 = vtable(Val1, Vrt1) & VVAR1 = vtable(Val2, Vrt2) & VVAR2 = vunion(VVAR0, VVAR1) & VVAR3 = vnoTable & Val1 != Val2) => VVAR2 = VVAR3)).
tff('intersect0', axiom, ![Vrt1: vRawTable, VVAR5: vOptTable, VVAR2: vRawTable, VVAR3: vTable, VVAR4: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR1 = vtable(Val2, Vrt2) & VVAR2 = vrawIntersection(Vrt1, Vrt2) & VVAR3 = vtable(Val1, VVAR2) & VVAR5 = vsomeTable(VVAR3) & VVAR0 = vtable(Val1, Vrt1) & VVAR4 = vintersect(VVAR0, VVAR1) & Val1 = Val2) => VVAR4 = VVAR5)).
tff('intersect1', axiom, ![Vrt1: vRawTable, VVAR2: vOptTable, VVAR3: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR0 = vtable(Val1, Vrt1) & VVAR1 = vtable(Val2, Vrt2) & VVAR2 = vintersect(VVAR0, VVAR1) & VVAR3 = vnoTable & Val1 != Val2) => VVAR2 = VVAR3)).
tff('difference0', axiom, ![Vrt1: vRawTable, VVAR5: vOptTable, VVAR2: vRawTable, VVAR3: vTable, VVAR4: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR1 = vtable(Val2, Vrt2) & VVAR4 = vdifference(VVAR0, VVAR1) & VVAR3 = vtable(Val1, VVAR2) & VVAR5 = vsomeTable(VVAR3) & VVAR0 = vtable(Val1, Vrt1) & VVAR2 = vrawDifference(Vrt1, Vrt2) & Val1 = Val2) => VVAR4 = VVAR5)).
tff('difference1', axiom, ![Vrt1: vRawTable, VVAR2: vOptTable, VVAR3: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR0 = vtable(Val1, Vrt1) & VVAR1 = vtable(Val2, Vrt2) & VVAR2 = vdifference(VVAR0, VVAR1) & VVAR3 = vnoTable & Val1 != Val2) => VVAR2 = VVAR3)).
tff('reduce0', axiom, ![Vt: vTable, VVAR2: vOptConf, VVAR3: vOptConf, VVAR1: vConf, VVAR0: vQuery, Vts: vTStore] : ((VVAR0 = vTvalue(Vt) & VVAR1 = vconf(VVAR0, Vts) & VVAR2 = vreduce(VVAR1) & VVAR3 = vnoConf) => VVAR2 = VVAR3)).
tff('reduce1', axiom, ![Vltn: vOptTable, VVAR5: vQuery, VVAR7: vOptConf, VVAR2: vQuery, VVAR3: vConf, VVAR4: vTable, VVAR1: vTRef, VVAR6: vConf, VVAR8: vOptConf, Vtn: vTName, VVAR0: vOptTable, Vts: vTStore] : ((VVAR8 = vsomeConf(VVAR6) & VVAR1 = vRef(Vtn) & VVAR5 = vTvalue(VVAR4) & VVAR0 = vlookupStore(Vtn, Vts) & VVAR3 = vconf(VVAR2, Vts) & VVAR6 = vconf(VVAR5, Vts) & VVAR4 = vgetSomeTable(Vltn) & VVAR2 = vSelectAllFrom(VVAR1) & VVAR7 = vreduce(VVAR3) & Vltn = VVAR0 & visSomeTable(Vltn)) => VVAR7 = VVAR8)).
tff('reduce2', axiom, ![Vltn: vOptTable, VVAR5: vOptConf, VVAR2: vQuery, VVAR3: vConf, VVAR4: vOptConf, VVAR1: vTRef, Vtn: vTName, VVAR0: vOptTable, Vts: vTStore] : ((VVAR1 = vRef(Vtn) & VVAR5 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR3 = vconf(VVAR2, Vts) & VVAR2 = vSelectAllFrom(VVAR1) & VVAR4 = vreduce(VVAR3) & Vltn = VVAR0 & (~visSomeTable(Vltn))) => VVAR4 = VVAR5)).
tff('reduce3', axiom, ![Vltn: vOptTable, Vpt: vOptRawTable, VVAR5: vConf, VVAR7: vTable, VVAR11: vOptConf, VVAR2: vOptRawTable, VVAR3: vTRef, VVAR10: vOptConf, VVAR4: vQuery, VVAR1: vTable, VVAR6: vRawTable, VVAR8: vQuery, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vts: vTStore, VVAR9: vConf] : ((VVAR3 = vRef(Vtn) & VVAR6 = vgetSomeRawTable(Vpt) & VVAR10 = vreduce(VVAR5) & VVAR0 = vlookupStore(Vtn, Vts) & VVAR9 = vconf(VVAR8, Vts) & VVAR8 = vTvalue(VVAR7) & VVAR5 = vconf(VVAR4, Vts) & VVAR4 = vSelectSomeFrom(Val, VVAR3) & VVAR1 = vgetSomeTable(Vltn) & VVAR7 = vtable(Val, VVAR6) & VVAR2 = vproject(Val, VVAR1) & VVAR11 = vsomeConf(VVAR9) & Vltn = VVAR0 & visSomeTable(Vltn) & Vpt = VVAR2 & visSomeRawTable(Vpt)) => VVAR10 = VVAR11)).
tff('reduce4', axiom, ![Vltn: vOptTable, Vpt: vOptRawTable, VVAR5: vConf, VVAR7: vOptConf, VVAR2: vOptRawTable, VVAR3: vTRef, VVAR4: vQuery, VVAR1: vTable, VVAR6: vOptConf, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vts: vTStore] : ((VVAR3 = vRef(Vtn) & VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR4 = vSelectSomeFrom(Val, VVAR3) & VVAR1 = vgetSomeTable(Vltn) & VVAR2 = vproject(Val, VVAR1) & Vltn = VVAR0 & visSomeTable(Vltn) & Vpt = VVAR2 & (~visSomeRawTable(Vpt))) => VVAR6 = VVAR7)).
tff('reduce5', axiom, ![Vltn: vOptTable, VVAR5: vOptConf, VVAR2: vQuery, VVAR3: vConf, VVAR4: vOptConf, VVAR1: vTRef, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vts: vTStore] : ((VVAR1 = vRef(Vtn) & VVAR5 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR3 = vconf(VVAR2, Vts) & VVAR4 = vreduce(VVAR3) & VVAR2 = vSelectSomeFrom(Val, VVAR1) & Vltn = VVAR0 & (~visSomeTable(Vltn))) => VVAR4 = VVAR5)).
tff('reduce6', axiom, ![Vp: vPred, Vltn: vOptTable, VVAR5: vConf, VVAR7: vQuery, VVAR2: vOptTable, VVAR3: vTRef, VVAR10: vOptConf, VVAR4: vQuery, VVAR1: vTable, VVAR6: vTable, VVAR8: vConf, Vtn: vTName, VVAR0: vOptTable, Vst: vOptTable, Vts: vTStore, VVAR9: vOptConf] : ((VVAR4 = vSelectAllFromWhere(VVAR3, Vp) & VVAR3 = vRef(Vtn) & VVAR9 = vreduce(VVAR5) & VVAR10 = vsomeConf(VVAR8) & VVAR0 = vlookupStore(Vtn, Vts) & VVAR8 = vconf(VVAR7, Vts) & VVAR7 = vTvalue(VVAR6) & VVAR6 = vgetSomeTable(Vst) & VVAR5 = vconf(VVAR4, Vts) & VVAR1 = vgetSomeTable(Vltn) & VVAR2 = vselect(VVAR1, Vp) & Vltn = VVAR0 & visSomeTable(Vltn) & Vst = VVAR2 & visSomeTable(Vst)) => VVAR9 = VVAR10)).
tff('reduce7', axiom, ![Vp: vPred, Vltn: vOptTable, VVAR5: vConf, VVAR7: vOptConf, VVAR2: vOptTable, VVAR3: vTRef, VVAR4: vQuery, VVAR1: vTable, VVAR6: vOptConf, Vtn: vTName, VVAR0: vOptTable, Vst: vOptTable, Vts: vTStore] : ((VVAR4 = vSelectAllFromWhere(VVAR3, Vp) & VVAR3 = vRef(Vtn) & VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR1 = vgetSomeTable(Vltn) & VVAR2 = vselect(VVAR1, Vp) & Vltn = VVAR0 & visSomeTable(Vltn) & Vst = VVAR2 & (~visSomeTable(Vst))) => VVAR6 = VVAR7)).
tff('reduce8', axiom, ![Vp: vPred, Vltn: vOptTable, VVAR5: vOptConf, VVAR2: vQuery, VVAR3: vConf, VVAR4: vOptConf, VVAR1: vTRef, Vtn: vTName, VVAR0: vOptTable, Vts: vTStore] : ((VVAR1 = vRef(Vtn) & VVAR5 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR3 = vconf(VVAR2, Vts) & VVAR2 = vSelectAllFromWhere(VVAR1, Vp) & VVAR4 = vreduce(VVAR3) & Vltn = VVAR0 & (~visSomeTable(Vltn))) => VVAR4 = VVAR5)).
tff('reduce9', axiom, ![Vp: vPred, Vltn: vOptTable, Vpt: vOptRawTable, VVAR5: vTRef, VVAR7: vConf, VVAR13: vOptConf, VVAR11: vConf, VVAR2: vOptTable, VVAR3: vTable, VVAR10: vQuery, VVAR4: vOptRawTable, VVAR1: vTable, VVAR6: vQuery, VVAR8: vRawTable, Vtn: vTName, Val: vAList, VVAR0: vOptTable, VVAR12: vOptConf, Vst: vOptTable, Vts: vTStore, VVAR9: vTable] : ((VVAR12 = vreduce(VVAR7) & VVAR7 = vconf(VVAR6, Vts) & VVAR5 = vRef(Vtn) & VVAR8 = vgetSomeRawTable(Vpt) & VVAR0 = vlookupStore(Vtn, Vts) & VVAR4 = vproject(Val, VVAR3) & VVAR9 = vtable(Val, VVAR8) & VVAR6 = vSelectSomeFromWhere(Val, VVAR5, Vp) & VVAR10 = vTvalue(VVAR9) & VVAR3 = vgetSomeTable(Vst) & VVAR1 = vgetSomeTable(Vltn) & VVAR13 = vsomeConf(VVAR11) & VVAR11 = vconf(VVAR10, Vts) & VVAR2 = vselect(VVAR1, Vp) & Vltn = VVAR0 & visSomeTable(Vltn) & Vst = VVAR2 & visSomeTable(Vst) & Vpt = VVAR4 & visSomeRawTable(Vpt)) => VVAR12 = VVAR13)).
tff('reduce10', axiom, ![Vp: vPred, Vltn: vOptTable, Vpt: vOptRawTable, VVAR5: vTRef, VVAR7: vConf, VVAR2: vOptTable, VVAR3: vTable, VVAR4: vOptRawTable, VVAR1: vTable, VVAR6: vQuery, VVAR8: vOptConf, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vst: vOptTable, Vts: vTStore, VVAR9: vOptConf] : ((VVAR8 = vreduce(VVAR7) & VVAR7 = vconf(VVAR6, Vts) & VVAR5 = vRef(Vtn) & VVAR9 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR4 = vproject(Val, VVAR3) & VVAR6 = vSelectSomeFromWhere(Val, VVAR5, Vp) & VVAR3 = vgetSomeTable(Vst) & VVAR1 = vgetSomeTable(Vltn) & VVAR2 = vselect(VVAR1, Vp) & Vltn = VVAR0 & visSomeTable(Vltn) & Vst = VVAR2 & visSomeTable(Vst) & Vpt = VVAR4 & (~visSomeRawTable(Vpt))) => VVAR8 = VVAR9)).
tff('reduce11', axiom, ![Vp: vPred, Vltn: vOptTable, VVAR5: vConf, VVAR7: vOptConf, VVAR2: vOptTable, VVAR3: vTRef, VVAR4: vQuery, VVAR1: vTable, VVAR6: vOptConf, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vst: vOptTable, Vts: vTStore] : ((VVAR3 = vRef(Vtn) & VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR4 = vSelectSomeFromWhere(Val, VVAR3, Vp) & VVAR5 = vconf(VVAR4, Vts) & VVAR1 = vgetSomeTable(Vltn) & VVAR2 = vselect(VVAR1, Vp) & Vltn = VVAR0 & visSomeTable(Vltn) & Vst = VVAR2 & (~visSomeTable(Vst))) => VVAR6 = VVAR7)).
tff('reduce12', axiom, ![Vp: vPred, Vltn: vOptTable, VVAR5: vOptConf, VVAR2: vQuery, VVAR3: vConf, VVAR4: vOptConf, VVAR1: vTRef, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vts: vTStore] : ((VVAR1 = vRef(Vtn) & VVAR5 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR3 = vconf(VVAR2, Vts) & VVAR2 = vSelectSomeFromWhere(Val, VVAR1, Vp) & VVAR4 = vreduce(VVAR3) & Vltn = VVAR0 & (~visSomeTable(Vltn))) => VVAR4 = VVAR5)).
tff('reduce13', axiom, ![VVAR5: vTable, VVAR7: vConf, Vt1: vTable, Vtunion: vOptTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vQuery, VVAR8: vOptConf, VVAR0: vOptTable, Vts: vTStore, VVAR9: vOptConf] : ((VVAR2 = vTvalue(Vt2) & VVAR7 = vconf(VVAR6, Vts) & VVAR9 = vsomeConf(VVAR7) & VVAR8 = vreduce(VVAR4) & VVAR0 = vunion(Vt1, Vt2) & VVAR5 = vgetSomeTable(Vtunion) & VVAR6 = vTvalue(VVAR5) & VVAR4 = vconf(VVAR3, Vts) & VVAR3 = vUnion(VVAR1, VVAR2) & VVAR1 = vTvalue(Vt1) & Vtunion = VVAR0 & visSomeTable(Vtunion)) => VVAR8 = VVAR9)).
tff('reduce14', axiom, ![VVAR5: vOptConf, Vt1: vTable, Vtunion: vOptTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vOptConf, VVAR0: vOptTable, Vts: vTStore] : ((VVAR2 = vTvalue(Vt2) & VVAR6 = vnoConf & VVAR5 = vreduce(VVAR4) & VVAR0 = vunion(Vt1, Vt2) & VVAR4 = vconf(VVAR3, Vts) & VVAR3 = vUnion(VVAR1, VVAR2) & VVAR1 = vTvalue(Vt1) & Vtunion = VVAR0 & (~visSomeTable(Vtunion))) => VVAR5 = VVAR6)).
tff('reduce15', axiom, ![Vt: vTable, VVAR5: vConf, VVAR7: vQuery, VVAR11: vOptConf, VVAR3: vQuery, VVAR10: vOptConf, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, Vts: vTStore, VVAR9: vConf, Vq2: vQuery, Vq2reduce: vOptConf] : ((VVAR7 = vgetQuery(VVAR6) & VVAR10 = vreduce(VVAR5) & VVAR8 = vUnion(VVAR3, VVAR7) & VVAR3 = vTvalue(Vt) & VVAR9 = vconf(VVAR8, Vts) & VVAR6 = vgetSomeConf(Vq2reduce) & VVAR5 = vconf(VVAR4, Vts) & VVAR4 = vUnion(VVAR3, Vq2) & VVAR0 = vconf(Vq2, Vts) & VVAR11 = vsomeConf(VVAR9) & VVAR1 = vreduce(VVAR0) & Vq2reduce = VVAR1 & visSomeConf(Vq2reduce) & ![VVAR2: vQuery, Vt20: vTable, Vq2] : ((~VVAR2 = vTvalue(Vt20)) | Vq2 != VVAR2)) => VVAR10 = VVAR11)).
tff('reduce16', axiom, ![Vt: vTable, VVAR5: vConf, VVAR7: vOptConf, VVAR3: vQuery, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vOptConf, VVAR0: vConf, Vts: vTStore, Vq2: vQuery, Vq2reduce: vOptConf] : ((VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR3 = vTvalue(Vt) & VVAR5 = vconf(VVAR4, Vts) & VVAR4 = vUnion(VVAR3, Vq2) & VVAR0 = vconf(Vq2, Vts) & VVAR1 = vreduce(VVAR0) & Vq2reduce = VVAR1 & (~visSomeConf(Vq2reduce)) & ![VVAR2: vQuery, Vt20: vTable, Vq2] : ((~VVAR2 = vTvalue(Vt20)) | Vq2 != VVAR2)) => VVAR6 = VVAR7)).
tff('reduce17', axiom, ![Vq1: vQuery, VVAR5: vQuery, Vq1reduce: vOptConf, VVAR7: vConf, VVAR11: vOptConf, VVAR10: vConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, VVAR12: vOptConf, Vts: vTStore, VVAR9: vQuery, Vq2: vQuery] : ((VVAR0 = vconf(Vq1, Vts) & VVAR11 = vreduce(VVAR6) & VVAR5 = vUnion(Vq1, Vq2) & VVAR8 = vgetQuery(VVAR7) & VVAR6 = vconf(VVAR5, Vts) & VVAR10 = vconf(VVAR9, Vts) & VVAR12 = vsomeConf(VVAR10) & VVAR9 = vUnion(VVAR8, Vq2) & VVAR1 = vreduce(VVAR0) & VVAR7 = vgetSomeConf(Vq1reduce) & Vq1reduce = VVAR1 & visSomeConf(Vq1reduce) & (![VVAR2: vQuery, Vt10: vTable, Vq1] : ((~VVAR2 = vTvalue(Vt10)) | Vq1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vq2] : ((~VVAR3 = vTvalue(Vt20)) | Vq2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vq1] : ((~VVAR4 = vTvalue(Vt0)) | Vq1 != VVAR4)) => VVAR11 = VVAR12)).
tff('reduce18', axiom, ![Vq1: vQuery, VVAR5: vQuery, Vq1reduce: vOptConf, VVAR7: vOptConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vOptConf, VVAR0: vConf, Vts: vTStore, Vq2: vQuery] : ((VVAR0 = vconf(Vq1, Vts) & VVAR7 = vreduce(VVAR6) & VVAR8 = vnoConf & VVAR5 = vUnion(Vq1, Vq2) & VVAR6 = vconf(VVAR5, Vts) & VVAR1 = vreduce(VVAR0) & Vq1reduce = VVAR1 & (~visSomeConf(Vq1reduce)) & (![VVAR2: vQuery, Vt10: vTable, Vq1] : ((~VVAR2 = vTvalue(Vt10)) | Vq1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vq2] : ((~VVAR3 = vTvalue(Vt20)) | Vq2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vq1] : ((~VVAR4 = vTvalue(Vt0)) | Vq1 != VVAR4)) => VVAR7 = VVAR8)).
tff('reduce19', axiom, ![Vtintersection: vOptTable, VVAR5: vTable, VVAR7: vConf, Vt1: vTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vQuery, VVAR8: vOptConf, VVAR0: vOptTable, Vts: vTStore, VVAR9: vOptConf] : ((VVAR2 = vTvalue(Vt2) & VVAR7 = vconf(VVAR6, Vts) & VVAR9 = vsomeConf(VVAR7) & VVAR3 = vIntersection(VVAR1, VVAR2) & VVAR5 = vgetSomeTable(Vtintersection) & VVAR8 = vreduce(VVAR4) & VVAR0 = vintersect(Vt1, Vt2) & VVAR6 = vTvalue(VVAR5) & VVAR4 = vconf(VVAR3, Vts) & VVAR1 = vTvalue(Vt1) & Vtintersection = VVAR0 & visSomeTable(Vtintersection)) => VVAR8 = VVAR9)).
tff('reduce20', axiom, ![Vtintersection: vOptTable, VVAR5: vOptConf, Vt1: vTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vOptConf, VVAR0: vOptTable, Vts: vTStore] : ((VVAR2 = vTvalue(Vt2) & VVAR6 = vnoConf & VVAR3 = vIntersection(VVAR1, VVAR2) & VVAR5 = vreduce(VVAR4) & VVAR0 = vintersect(Vt1, Vt2) & VVAR4 = vconf(VVAR3, Vts) & VVAR1 = vTvalue(Vt1) & Vtintersection = VVAR0 & (~visSomeTable(Vtintersection))) => VVAR5 = VVAR6)).
tff('reduce21', axiom, ![Vsql2reduce: vOptConf, Vt: vTable, VVAR5: vConf, VVAR7: vQuery, VVAR11: vOptConf, VVAR3: vQuery, VVAR10: vOptConf, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, Vts: vTStore, VVAR9: vConf, Vsql2: vQuery] : ((VVAR7 = vgetQuery(VVAR6) & VVAR10 = vreduce(VVAR5) & VVAR3 = vTvalue(Vt) & VVAR9 = vconf(VVAR8, Vts) & VVAR4 = vIntersection(VVAR3, Vsql2) & VVAR6 = vgetSomeConf(Vsql2reduce) & VVAR0 = vconf(Vsql2, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR8 = vIntersection(VVAR3, VVAR7) & VVAR11 = vsomeConf(VVAR9) & VVAR1 = vreduce(VVAR0) & Vsql2reduce = VVAR1 & visSomeConf(Vsql2reduce) & ![VVAR2: vQuery, Vt20: vTable, Vsql2] : ((~VVAR2 = vTvalue(Vt20)) | Vsql2 != VVAR2)) => VVAR10 = VVAR11)).
tff('reduce22', axiom, ![Vsql2reduce: vOptConf, Vt: vTable, VVAR5: vConf, VVAR7: vOptConf, VVAR3: vQuery, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vOptConf, VVAR0: vConf, Vts: vTStore, Vsql2: vQuery] : ((VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR3 = vTvalue(Vt) & VVAR4 = vIntersection(VVAR3, Vsql2) & VVAR0 = vconf(Vsql2, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR1 = vreduce(VVAR0) & Vsql2reduce = VVAR1 & (~visSomeConf(Vsql2reduce)) & ![VVAR2: vQuery, Vt20: vTable, Vsql2] : ((~VVAR2 = vTvalue(Vt20)) | Vsql2 != VVAR2)) => VVAR6 = VVAR7)).
tff('reduce23', axiom, ![VVAR5: vQuery, Vsql1reduce: vOptConf, Vsql1: vQuery, VVAR7: vConf, VVAR11: vOptConf, VVAR10: vConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, VVAR12: vOptConf, Vts: vTStore, VVAR9: vQuery, Vsql2: vQuery] : ((VVAR11 = vreduce(VVAR6) & VVAR0 = vconf(Vsql1, Vts) & VVAR5 = vIntersection(Vsql1, Vsql2) & VVAR7 = vgetSomeConf(Vsql1reduce) & VVAR9 = vIntersection(VVAR8, Vsql2) & VVAR8 = vgetQuery(VVAR7) & VVAR6 = vconf(VVAR5, Vts) & VVAR10 = vconf(VVAR9, Vts) & VVAR12 = vsomeConf(VVAR10) & VVAR1 = vreduce(VVAR0) & Vsql1reduce = VVAR1 & visSomeConf(Vsql1reduce) & (![VVAR2: vQuery, Vt10: vTable, Vsql1] : ((~VVAR2 = vTvalue(Vt10)) | Vsql1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vsql2] : ((~VVAR3 = vTvalue(Vt20)) | Vsql2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vsql1] : ((~VVAR4 = vTvalue(Vt0)) | Vsql1 != VVAR4)) => VVAR11 = VVAR12)).
tff('reduce24', axiom, ![VVAR5: vQuery, Vsql1reduce: vOptConf, Vsql1: vQuery, VVAR7: vOptConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vOptConf, VVAR0: vConf, Vts: vTStore, Vsql2: vQuery] : ((VVAR7 = vreduce(VVAR6) & VVAR0 = vconf(Vsql1, Vts) & VVAR8 = vnoConf & VVAR5 = vIntersection(Vsql1, Vsql2) & VVAR6 = vconf(VVAR5, Vts) & VVAR1 = vreduce(VVAR0) & Vsql1reduce = VVAR1 & (~visSomeConf(Vsql1reduce)) & (![VVAR2: vQuery, Vt10: vTable, Vsql1] : ((~VVAR2 = vTvalue(Vt10)) | Vsql1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vsql2] : ((~VVAR3 = vTvalue(Vt20)) | Vsql2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vsql1] : ((~VVAR4 = vTvalue(Vt0)) | Vsql1 != VVAR4)) => VVAR7 = VVAR8)).
tff('reduce25', axiom, ![Vtdifference: vOptTable, VVAR5: vTable, VVAR7: vConf, Vt1: vTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vQuery, VVAR8: vOptConf, VVAR0: vOptTable, Vts: vTStore, VVAR9: vOptConf] : ((VVAR2 = vTvalue(Vt2) & VVAR7 = vconf(VVAR6, Vts) & VVAR9 = vsomeConf(VVAR7) & VVAR8 = vreduce(VVAR4) & VVAR3 = vDifference(VVAR1, VVAR2) & VVAR0 = vdifference(Vt1, Vt2) & VVAR5 = vgetSomeTable(Vtdifference) & VVAR6 = vTvalue(VVAR5) & VVAR4 = vconf(VVAR3, Vts) & VVAR1 = vTvalue(Vt1) & Vtdifference = VVAR0 & visSomeTable(Vtdifference)) => VVAR8 = VVAR9)).
tff('reduce26', axiom, ![Vtdifference: vOptTable, VVAR5: vOptConf, Vt1: vTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vOptConf, VVAR0: vOptTable, Vts: vTStore] : ((VVAR2 = vTvalue(Vt2) & VVAR6 = vnoConf & VVAR5 = vreduce(VVAR4) & VVAR3 = vDifference(VVAR1, VVAR2) & VVAR0 = vdifference(Vt1, Vt2) & VVAR4 = vconf(VVAR3, Vts) & VVAR1 = vTvalue(Vt1) & Vtdifference = VVAR0 & (~visSomeTable(Vtdifference))) => VVAR5 = VVAR6)).
tff('reduce27', axiom, ![Vsql2reduce: vOptConf, Vt: vTable, VVAR5: vConf, VVAR7: vQuery, VVAR11: vOptConf, VVAR3: vQuery, VVAR10: vOptConf, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, Vts: vTStore, VVAR9: vConf, Vsql2: vQuery] : ((VVAR7 = vgetQuery(VVAR6) & VVAR10 = vreduce(VVAR5) & VVAR3 = vTvalue(Vt) & VVAR9 = vconf(VVAR8, Vts) & VVAR4 = vDifference(VVAR3, Vsql2) & VVAR6 = vgetSomeConf(Vsql2reduce) & VVAR0 = vconf(Vsql2, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR8 = vDifference(VVAR3, VVAR7) & VVAR11 = vsomeConf(VVAR9) & VVAR1 = vreduce(VVAR0) & Vsql2reduce = VVAR1 & visSomeConf(Vsql2reduce) & ![VVAR2: vQuery, Vt20: vTable, Vsql2] : ((~VVAR2 = vTvalue(Vt20)) | Vsql2 != VVAR2)) => VVAR10 = VVAR11)).
tff('reduce28', axiom, ![Vsql2reduce: vOptConf, Vt: vTable, VVAR5: vConf, VVAR7: vOptConf, VVAR3: vQuery, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vOptConf, VVAR0: vConf, Vts: vTStore, Vsql2: vQuery] : ((VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR3 = vTvalue(Vt) & VVAR4 = vDifference(VVAR3, Vsql2) & VVAR0 = vconf(Vsql2, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR1 = vreduce(VVAR0) & Vsql2reduce = VVAR1 & (~visSomeConf(Vsql2reduce)) & ![VVAR2: vQuery, Vt20: vTable, Vsql2] : ((~VVAR2 = vTvalue(Vt20)) | Vsql2 != VVAR2)) => VVAR6 = VVAR7)).
tff('reduce29', axiom, ![VVAR5: vQuery, Vsql1reduce: vOptConf, Vsql1: vQuery, VVAR7: vConf, VVAR11: vOptConf, VVAR10: vConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, VVAR12: vOptConf, Vts: vTStore, VVAR9: vQuery, Vsql2: vQuery] : ((VVAR11 = vreduce(VVAR6) & VVAR5 = vDifference(Vsql1, Vsql2) & VVAR0 = vconf(Vsql1, Vts) & VVAR7 = vgetSomeConf(Vsql1reduce) & VVAR9 = vDifference(VVAR8, Vsql2) & VVAR8 = vgetQuery(VVAR7) & VVAR6 = vconf(VVAR5, Vts) & VVAR10 = vconf(VVAR9, Vts) & VVAR12 = vsomeConf(VVAR10) & VVAR1 = vreduce(VVAR0) & Vsql1reduce = VVAR1 & visSomeConf(Vsql1reduce) & (![VVAR2: vQuery, Vt10: vTable, Vsql1] : ((~VVAR2 = vTvalue(Vt10)) | Vsql1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vsql2] : ((~VVAR3 = vTvalue(Vt20)) | Vsql2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vsql1] : ((~VVAR4 = vTvalue(Vt0)) | Vsql1 != VVAR4)) => VVAR11 = VVAR12)).
tff('reduce30', axiom, ![VVAR5: vQuery, Vsql1reduce: vOptConf, Vsql1: vQuery, VVAR7: vOptConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vOptConf, VVAR0: vConf, Vts: vTStore, Vsql2: vQuery] : ((VVAR7 = vreduce(VVAR6) & VVAR5 = vDifference(Vsql1, Vsql2) & VVAR0 = vconf(Vsql1, Vts) & VVAR8 = vnoConf & VVAR6 = vconf(VVAR5, Vts) & VVAR1 = vreduce(VVAR0) & Vsql1reduce = VVAR1 & (~visSomeConf(Vsql1reduce)) & (![VVAR2: vQuery, Vt10: vTable, Vsql1] : ((~VVAR2 = vTvalue(Vt10)) | Vsql1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vsql2] : ((~VVAR3 = vTvalue(Vt20)) | Vsql2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vsql1] : ((~VVAR4 = vTvalue(Vt0)) | Vsql1 != VVAR4)) => VVAR7 = VVAR8)).
tff('getRaw0', axiom, ![VVAR0: vTable, Val: vAList, Vrt: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vtable(Val, Vrt) & VVAR1 = vgetRaw(VVAR0)) => VVAR1 = Vrt)).
tff('getAL0', axiom, ![VVAR0: vTable, Val: vAList, Vrt: vRawTable, VVAR1: vAList] : ((VVAR0 = vtable(Val, Vrt) & VVAR1 = vgetAL(VVAR0)) => VVAR1 = Val)).
tff('matchingAList0', axiom, ![VVAR0: vTType, VVAR1: vAList] : ((VVAR0 = vttempty & VVAR1 = vaempty) => vmatchingAList(VVAR0, VVAR1))).
tff('matchingAList1', axiom, ![Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR1: vTType, Val: vAList, VVAR0: vCType, Vf: vFType, Vtt: vTType] : ((VVAR0 = vctype(Va1, Vf) & VVAR1 = vttcons(VVAR0, Vtt) & VVAR2 = vacons(Va2, Val)) => (vmatchingAList(VVAR1, VVAR2) <=> (Va1 = Va2 & vmatchingAList(Vtt, Val))))).
tff('matchingAList2', axiom, ![VVAR0: vTType, VVAR1: vAList, Vtt: vTType, Val: vAList] : ((VVAR0 = vttempty & VVAR1 = vaempty & (Vtt != VVAR0 | Val != VVAR1) & (![Vf0: vFType, Vtt0: vTType, Va10: vAName, VVAR2: vCType, VVAR3: vTType, Vtt] : ((~VVAR2 = vctype(Va10, Vf0)) | (~VVAR3 = vttcons(VVAR2, Vtt0)) | Vtt != VVAR3) | ![VVAR4: vAList, Va20: vAName, Val0: vAList, Val] : ((~VVAR4 = vacons(Va20, Val0)) | Val != VVAR4))) => (~vmatchingAList(Vtt, Val)))).
tff('welltypedtable0', axiom, ![Vt: vRawTable, VVAR1: vRawType, Val: vAList, VVAR0: vTable, Vtt: vTType] : ((VVAR0 = vtable(Val, Vt) & VVAR1 = vrawType(Vtt)) => (vwelltypedtable(Vtt, VVAR0) <=> (vmatchingAList(Vtt, Val) & vwelltypedRawtable(VVAR1, Vt))))).
tff('rawType0', axiom, ![VVAR0: vTType, VVAR1: vRawType, VVAR2: vRawType] : ((VVAR0 = vttempty & VVAR1 = vrawType(VVAR0) & VVAR2 = vrtempty) => VVAR1 = VVAR2)).
tff('rawType1', axiom, ![Va: vAName, Vft: vFType, VVAR2: vRawType, VVAR3: vRawType, VVAR4: vRawType, VVAR1: vTType, VVAR0: vCType, Vtt: vTType] : ((VVAR1 = vttcons(VVAR0, Vtt) & VVAR3 = vrawType(VVAR1) & VVAR2 = vrawType(Vtt) & VVAR0 = vctype(Va, Vft) & VVAR4 = vrtcons(Vft, VVAR2)) => VVAR3 = VVAR4)).
tff('welltypedRawtable0', axiom, ![VVAR0: vRawTable, Vrt: vRawType] : (VVAR0 = vtempty => vwelltypedRawtable(Vrt, VVAR0))).
tff('welltypedRawtable1', axiom, ![VVAR0: vRawTable, Vr: vRow, Vt: vRawTable, Vrt: vRawType] : (VVAR0 = vtcons(Vr, Vt) => (vwelltypedRawtable(Vrt, VVAR0) <=> (vwelltypedRow(Vrt, Vr) & vwelltypedRawtable(Vrt, Vt))))).
tff('welltypedRow0', axiom, ![VVAR0: vRawType, VVAR1: vRow] : ((VVAR0 = vrtempty & VVAR1 = vrempty) => vwelltypedRow(VVAR0, VVAR1))).
tff('welltypedRow1', axiom, ![Vv: vFVal, Vrt: vRawType, Vft: vFType, Vr: vRow, VVAR2: vFType, VVAR1: vRow, VVAR0: vRawType] : ((VVAR0 = vrtcons(Vft, Vrt) & VVAR1 = vrcons(Vv, Vr) & VVAR2 = vfieldType(Vv)) => (vwelltypedRow(VVAR0, VVAR1) <=> (VVAR2 = Vft & vwelltypedRow(Vrt, Vr))))).
tff('welltypedRow2', axiom, ![VVAR0: vRawType, VVAR1: vRow, Vrt: vRawType, Vr: vRow] : ((VVAR0 = vrtempty & VVAR1 = vrempty & (Vrt != VVAR0 | Vr != VVAR1) & (![VVAR2: vRawType, Vft0: vFType, Vrt0: vRawType, Vrt] : ((~VVAR2 = vrtcons(Vft0, Vrt0)) | Vrt != VVAR2) | ![VVAR3: vRow, Vv0: vFVal, Vr0: vRow, Vr] : ((~VVAR3 = vrcons(Vv0, Vr0)) | Vr != VVAR3))) => (~vwelltypedRow(Vrt, Vr)))).
tff('rowIn0', axiom, ![VVAR0: vRawTable, Vr1: vRow] : (VVAR0 = vtempty => (~vrowIn(Vr1, VVAR0)))).
tff('rowIn1', axiom, ![VVAR0: vRawTable, Vr2: vRow, Vrt: vRawTable, Vr1: vRow] : (VVAR0 = vtcons(Vr2, Vrt) => (vrowIn(Vr1, VVAR0) <=> (Vr1 = Vr2 | vrowIn(Vr1, Vrt))))).
tff('projectFirstRaw0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vprojectFirstRaw(VVAR0)) => VVAR1 = VVAR0)).
tff('projectFirstRaw1', axiom, ![Vrt: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRow] : ((VVAR0 = vrempty & VVAR2 = vprojectFirstRaw(Vrt) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR3 = vprojectFirstRaw(VVAR1) & VVAR4 = vtcons(VVAR0, VVAR2)) => VVAR3 = VVAR4)).
tff('projectFirstRaw2', axiom, ![Vrt: vRawTable, VVAR5: vRawTable, Vr: vRow, VVAR2: vRow, VVAR3: vRow, VVAR4: vRawTable, VVAR1: vRawTable, VVAR6: vRawTable, VVAR0: vRow, Vf: vFVal] : ((VVAR0 = vrcons(Vf, Vr) & VVAR2 = vrempty & VVAR4 = vprojectFirstRaw(Vrt) & VVAR3 = vrcons(Vf, VVAR2) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR5 = vprojectFirstRaw(VVAR1) & VVAR6 = vtcons(VVAR3, VVAR4)) => VVAR5 = VVAR6)).
tff('dropFirstColRaw0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vdropFirstColRaw(VVAR0)) => VVAR1 = VVAR0)).
tff('dropFirstColRaw1', axiom, ![Vrt: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRow] : ((VVAR0 = vrempty & VVAR1 = vtcons(VVAR0, Vrt) & VVAR2 = vdropFirstColRaw(Vrt) & VVAR4 = vtcons(VVAR0, VVAR2) & VVAR3 = vdropFirstColRaw(VVAR1)) => VVAR3 = VVAR4)).
tff('dropFirstColRaw2', axiom, ![Vrt: vRawTable, Vr: vRow, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRow, Vf: vFVal] : ((VVAR0 = vrcons(Vf, Vr) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR4 = vtcons(Vr, VVAR2) & VVAR2 = vdropFirstColRaw(Vrt) & VVAR3 = vdropFirstColRaw(VVAR1)) => VVAR3 = VVAR4)).
tff('isSomeRawTable0', axiom, ![VVAR0: vOptRawTable] : (VVAR0 = vnoRawTable => (~visSomeRawTable(VVAR0)))).
tff('isSomeRawTable1', axiom, ![VVAR0: vOptRawTable, Vt: vRawTable] : (VVAR0 = vsomeRawTable(Vt) => visSomeRawTable(VVAR0))).
tff('getSomeRawTable0', axiom, ![VVAR0: vOptRawTable, Vt: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vsomeRawTable(Vt) & VVAR1 = vgetSomeRawTable(VVAR0)) => VVAR1 = Vt)).
tff('attachColToFrontRaw0', axiom, ![VVAR0: vRawTable, VVAR1: vOptRawTable, VVAR2: vOptRawTable] : ((VVAR0 = vtempty & VVAR1 = vattachColToFrontRaw(VVAR0, VVAR0) & VVAR2 = vsomeRawTable(VVAR0)) => VVAR1 = VVAR2)).
tff('attachColToFrontRaw1', axiom, ![Vrt1: vRawTable, VVAR5: vRow, Vrest: vOptRawTable, VVAR7: vRawTable, Vr: vRow, VVAR2: vRow, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRow, VVAR6: vRawTable, VVAR8: vOptRawTable, VVAR0: vOptRawTable, Vf: vFVal, VVAR9: vOptRawTable, Vrt2: vRawTable] : ((VVAR5 = vrcons(Vf, Vr) & VVAR4 = vtcons(Vr, Vrt2) & VVAR1 = vrempty & VVAR6 = vgetSomeRawTable(Vrest) & VVAR2 = vrcons(Vf, VVAR1) & VVAR9 = vsomeRawTable(VVAR7) & VVAR8 = vattachColToFrontRaw(VVAR3, VVAR4) & VVAR0 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR3 = vtcons(VVAR2, Vrt1) & VVAR7 = vtcons(VVAR5, VVAR6) & Vrest = VVAR0 & visSomeRawTable(Vrest)) => VVAR8 = VVAR9)).
tff('attachColToFrontRaw2', axiom, ![Vrt1: vRawTable, VVAR5: vOptRawTable, Vrest: vOptRawTable, Vr: vRow, VVAR2: vRow, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRow, VVAR6: vOptRawTable, VVAR0: vOptRawTable, Vf: vFVal, Vrt2: vRawTable] : ((VVAR4 = vtcons(Vr, Vrt2) & VVAR1 = vrempty & VVAR2 = vrcons(Vf, VVAR1) & VVAR5 = vattachColToFrontRaw(VVAR3, VVAR4) & VVAR6 = vnoRawTable & VVAR0 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR3 = vtcons(VVAR2, Vrt1) & Vrest = VVAR0 & (~visSomeRawTable(Vrest))) => VVAR5 = VVAR6)).
tff('attachColToFrontRaw3', axiom, ![Vrt1: vRawTable, VVAR5: vOptRawTable, VVAR6: vOptRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR5 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR6 = vnoRawTable & (Vrt1 != VVAR0 | Vrt2 != VVAR0) & (![Vf0: vFVal, Vrt1, Vrt10: vRawTable, VVAR2: vRow, VVAR3: vRawTable, VVAR1: vRow] : ((~VVAR1 = vrempty) | (~VVAR2 = vrcons(Vf0, VVAR1)) | (~VVAR3 = vtcons(VVAR2, Vrt10)) | Vrt1 != VVAR3) | ![VVAR4: vRawTable, Vr0: vRow, Vrt20: vRawTable, Vrt2] : ((~VVAR4 = vtcons(Vr0, Vrt20)) | Vrt2 != VVAR4))) => VVAR5 = VVAR6)).
tff('rawUnion0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawUnion(VVAR0, Vrt2)) => VVAR1 = Vrt2)).
tff('rawUnion1', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawUnion(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = Vrt1)).
tff('rawUnion2', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vrawUnion(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR4 = vtcons(Vr1, Vurt1rt2) & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawUnion(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1) => VVAR3 = VVAR4)).
tff('rawUnion3', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2, Vrt2: vRawTable] : ((VVAR0 = vrawUnion(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawUnion(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1) => VVAR3 = Vurt1rt2)).
tff('rawIntersection0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawIntersection(VVAR0, Vrt2)) => VVAR1 = VVAR0)).
tff('rawIntersection1', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawIntersection(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = VVAR0)).
tff('rawIntersection2', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawIntersection(VVAR1, Vrt2) & vrowIn(Vr1, Vrt2) & Vrt2 != VVAR0) => VVAR2 = VVAR1)).
tff('rawIntersection3', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawIntersection(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR0)).
tff('rawIntersection4', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vrawIntersection(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR3 = vrawIntersection(VVAR2, Vrt2) & VVAR4 = vtcons(Vr1, Vurt1rt2) & VVAR2 = vtcons(Vr1, Vrt1) & Vurt1rt2 = VVAR0 & vrowIn(Vr1, Vrt2) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = VVAR4)).
tff('rawIntersection5', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2, Vrt2: vRawTable] : ((VVAR0 = vrawIntersection(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawIntersection(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = Vurt1rt2)).
tff('rawDifference0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawDifference(VVAR0, Vrt2)) => VVAR1 = VVAR0)).
tff('rawDifference1', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawDifference(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = Vrt1)).
tff('rawDifference2', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawDifference(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR1)).
tff('rawDifference3', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawDifference(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR0)).
tff('rawDifference4', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable, Vdrt1rt2: vRawTable] : ((VVAR1 = vtempty & VVAR3 = vrawDifference(VVAR2, Vrt2) & VVAR2 = vtcons(Vr1, Vrt1) & VVAR0 = vrawDifference(Vrt1, Vrt2) & VVAR4 = vtcons(Vr1, Vdrt1rt2) & Vdrt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = VVAR4)).
tff('rawDifference5', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable, Vdrt1rt2] : ((VVAR0 = vrawDifference(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawDifference(VVAR2, Vrt2) & Vdrt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = Vdrt1rt2)).
tff('isValue0', axiom, ![VVAR0: vQuery, Vt: vTable] : (VVAR0 = vTvalue(Vt) => visValue(VVAR0))).
tff('isValue1', axiom, ![VVAR0: vQuery, Vn: vTRef] : (VVAR0 = vSelectAllFrom(Vn) => (~visValue(VVAR0)))).
tff('isValue2', axiom, ![VVAR0: vQuery, Val: vAList, Vtr: vTRef] : (VVAR0 = vSelectSomeFrom(Val, Vtr) => (~visValue(VVAR0)))).
tff('isValue3', axiom, ![VVAR0: vQuery, Vtr: vTRef, Vp: vPred] : (VVAR0 = vSelectAllFromWhere(Vtr, Vp) => (~visValue(VVAR0)))).
tff('isValue4', axiom, ![VVAR0: vQuery, Val: vAList, Vtr: vTRef, Vp: vPred] : (VVAR0 = vSelectSomeFromWhere(Val, Vtr, Vp) => (~visValue(VVAR0)))).
tff('isValue5', axiom, ![VVAR0: vQuery, Vq1: vQuery, Vq2: vQuery] : (VVAR0 = vUnion(Vq1, Vq2) => (~visValue(VVAR0)))).
tff('isValue6', axiom, ![VVAR0: vQuery, Vsql1: vQuery, Vsql2: vQuery] : (VVAR0 = vIntersection(Vsql1, Vsql2) => (~visValue(VVAR0)))).
tff('isValue7', axiom, ![VVAR0: vQuery, Vsql1: vQuery, Vsql2: vQuery] : (VVAR0 = vDifference(Vsql1, Vsql2) => (~visValue(VVAR0)))).
tff('isSomeTable0', axiom, ![VVAR0: vOptTable] : (VVAR0 = vnoTable => (~visSomeTable(VVAR0)))).
tff('isSomeTable1', axiom, ![VVAR0: vOptTable, Vt: vTable] : (VVAR0 = vsomeTable(Vt) => visSomeTable(VVAR0))).
tff('getSomeTable0', axiom, ![VVAR0: vOptTable, Vt: vTable, VVAR1: vTable] : ((VVAR0 = vsomeTable(Vt) & VVAR1 = vgetSomeTable(VVAR0)) => VVAR1 = Vt)).
tff('lookupStore0', axiom, ![VVAR0: vTStore, VVAR1: vOptTable, Vn: vTName, VVAR2: vOptTable] : ((VVAR0 = vemptyStore & VVAR1 = vlookupStore(Vn, VVAR0) & VVAR2 = vnoTable) => VVAR1 = VVAR2)).
tff('lookupStore1', axiom, ![Vt: vTable, VTS: vTStore, VVAR2: vOptTable, VVAR1: vOptTable, Vm: vTName, VVAR0: vTStore, Vn: vTName] : ((VVAR0 = vbindStore(Vm, Vt, VTS) & VVAR1 = vlookupStore(Vn, VVAR0) & VVAR2 = vsomeTable(Vt) & Vn = Vm) => VVAR1 = VVAR2)).
tff('lookupStore2', axiom, ![Vt: vTable, VTS: vTStore, VVAR2: vOptTable, VVAR1: vOptTable, Vm: vTName, VVAR0: vTStore, Vn: vTName] : ((VVAR0 = vbindStore(Vm, Vt, VTS) & VVAR1 = vlookupStore(Vn, VVAR0) & VVAR2 = vlookupStore(Vn, VTS) & Vn != Vm) => VVAR1 = VVAR2)).
tff('EQ-x1', axiom, ![VVAR0: vFVal] : (VVAR0 = vx1 => ($true <=> VVAR0 = VVAR0))).
tff('EQ-x2', axiom, ![VVAR0: vFVal] : (VVAR0 = vx2 => ($true <=> VVAR0 = VVAR0))).
tff('EQ-y1', axiom, ![VVAR0: vFVal] : (VVAR0 = vy1 => ($true <=> VVAR0 = VVAR0))).
tff('EQ-y2', axiom, ![VVAR0: vFVal] : (VVAR0 = vy2 => ($true <=> VVAR0 = VVAR0))).
tff('EQ-z1', axiom, ![VVAR0: vFVal] : (VVAR0 = vz1 => ($true <=> VVAR0 = VVAR0))).
tff('EQ-z2', axiom, ![VVAR0: vFVal] : (VVAR0 = vz2 => ($true <=> VVAR0 = VVAR0))).
tff('DIFF-x1-x2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx1 & VVAR1 = vx2) => VVAR0 != VVAR1)).
tff('DIFF-x1-y1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx1 & VVAR1 = vy1) => VVAR0 != VVAR1)).
tff('DIFF-x1-y2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx1 & VVAR1 = vy2) => VVAR0 != VVAR1)).
tff('DIFF-x1-z1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx1 & VVAR1 = vz1) => VVAR0 != VVAR1)).
tff('DIFF-x1-z2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx1 & VVAR1 = vz2) => VVAR0 != VVAR1)).
tff('DIFF-x2-y1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx2 & VVAR1 = vy1) => VVAR0 != VVAR1)).
tff('DIFF-x2-y2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx2 & VVAR1 = vy2) => VVAR0 != VVAR1)).
tff('DIFF-x2-z1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx2 & VVAR1 = vz1) => VVAR0 != VVAR1)).
tff('DIFF-x2-z2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx2 & VVAR1 = vz2) => VVAR0 != VVAR1)).
tff('DIFF-y1-y2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vy1 & VVAR1 = vy2) => VVAR0 != VVAR1)).
tff('DIFF-y1-z1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vy1 & VVAR1 = vz1) => VVAR0 != VVAR1)).
tff('DIFF-y1-z2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vy1 & VVAR1 = vz2) => VVAR0 != VVAR1)).
tff('DIFF-y2-z1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vy2 & VVAR1 = vz1) => VVAR0 != VVAR1)).
tff('DIFF-y2-z2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vy2 & VVAR1 = vz2) => VVAR0 != VVAR1)).
tff('DIFF-z1-z2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vz1 & VVAR1 = vz2) => VVAR0 != VVAR1)).
tff('EQ-TN', axiom, ![VVAR0: vTName] : (VVAR0 = vTN => ($true <=> VVAR0 = VVAR0))).
tff('EQ-A1', axiom, ![VVAR0: vAName] : (VVAR0 = vA1 => ($true <=> VVAR0 = VVAR0))).
tff('EQ-A2', axiom, ![VVAR0: vAName] : (VVAR0 = vA2 => ($true <=> VVAR0 = VVAR0))).
tff('EQ-A3', axiom, ![VVAR0: vAName] : (VVAR0 = vA3 => ($true <=> VVAR0 = VVAR0))).
tff('DIFF-A1-A2', axiom, ![VVAR0: vAName, VVAR1: vAName] : ((VVAR0 = vA1 & VVAR1 = vA2) => VVAR0 != VVAR1)).
tff('DIFF-A1-A3', axiom, ![VVAR0: vAName, VVAR1: vAName] : ((VVAR0 = vA1 & VVAR1 = vA3) => VVAR0 != VVAR1)).
tff('DIFF-A2-A3', axiom, ![VVAR0: vAName, VVAR1: vAName] : ((VVAR0 = vA2 & VVAR1 = vA3) => VVAR0 != VVAR1)).
tff('test-projection3', axiom, ![VVAR26: vRow, VVAR25: vRow, VVAR17: vRow, VVAR21: vRawTable, VVAR32: vOptRawTable, VVAR14: vFVal, Vt: vTable, VVAR22: vRawTable, VVAR33: vOptRawTable, Vrt: vRawTable, VVAR5: vAList, VVAR20: vRow, VVAR24: vRow, VVAR23: vTable, VVAR7: vFVal, VVAR13: vFVal, Vtresult: vRawTable, VVAR11: vFVal, VVAR2: vAName, VVAR15: vRow, VVAR3: vAList, VVAR27: vRow, VVAR10: vRow, VVAR4: vAName, VVAR1: vAList, VVAR6: vAList, VVAR8: vRow, VVAR30: vAList, Val: vAList, VVAR0: vAName, VVAR12: vRow, VVAR28: vRawTable, VVAR31: vAList, VVAR18: vRow, VVAR19: vRawTable, VVAR9: vFVal, VVAR29: vRawTable, VVAR16: vFVal] : ((VVAR28 = vtcons(VVAR26, VVAR19) & VVAR2 = vA2 & VVAR6 = vacons(VVAR4, VVAR5) & VVAR33 = vsomeRawTable(Vtresult) & VVAR9 = vy2 & VVAR14 = vy1 & VVAR18 = vrcons(VVAR16, VVAR17) & VVAR8 = vrempty & VVAR26 = vrcons(VVAR14, VVAR25) & VVAR19 = vtempty & VVAR23 = vtable(Val, Vrt) & VVAR13 = vz1 & VVAR12 = vrcons(VVAR9, VVAR10) & VVAR24 = vrcons(VVAR11, VVAR8) & VVAR0 = vA3 & VVAR3 = vacons(VVAR0, VVAR1) & VVAR27 = vrcons(VVAR9, VVAR24) & VVAR16 = vx2 & VVAR15 = vrcons(VVAR13, VVAR8) & VVAR25 = vrcons(VVAR16, VVAR8) & VVAR17 = vrcons(VVAR14, VVAR15) & VVAR1 = vaempty & VVAR7 = vz2 & VVAR5 = vacons(VVAR2, VVAR3) & VVAR31 = vacons(VVAR2, VVAR30) & VVAR11 = vx1 & VVAR32 = vproject(VVAR31, Vt) & VVAR30 = vacons(VVAR4, VVAR1) & VVAR29 = vtcons(VVAR27, VVAR28) & VVAR20 = vrcons(VVAR11, VVAR12) & VVAR22 = vtcons(VVAR20, VVAR21) & VVAR21 = vtcons(VVAR18, VVAR19) & VVAR10 = vrcons(VVAR7, VVAR8) & VVAR4 = vA1 & Val = VVAR6 & Vrt = VVAR22 & Vt = VVAR23 & Vtresult = VVAR29) => VVAR32 = VVAR33)).
tff('false-goal', conjecture, ($true => $false)).
