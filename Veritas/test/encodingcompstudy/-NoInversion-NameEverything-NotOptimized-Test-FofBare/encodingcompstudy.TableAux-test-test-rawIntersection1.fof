fof('EQ-ctype', axiom, ![VAName0, VVAR1, VFType0, VVAR0, VAName1, VFType1] : ((VVAR0 = vctype(VAName0, VFType0) & VVAR1 = vctype(VAName1, VFType1)) => ((VAName0 = VAName1 & VFType0 = VFType1) <=> VVAR0 = VVAR1))).
fof('EQ-aempty', axiom, ![VVAR0] : (VVAR0 = vaempty => ($true <=> VVAR0 = VVAR0))).
fof('EQ-acons', axiom, ![VAList0, VAName0, VVAR1, VVAR0, VAName1, VAList1] : ((VVAR0 = vacons(VAName0, VAList0) & VVAR1 = vacons(VAName1, VAList1)) => ((VAName0 = VAName1 & VAList0 = VAList1) <=> VVAR0 = VVAR1))).
fof('DIFF-acons-aempty', axiom, ![VVAR0, VAName0, VAList0, VVAR1] : ((VVAR0 = vacons(VAName0, VAList0) & VVAR1 = vaempty) => VVAR0 != VVAR1)).
fof('EQ-ttempty', axiom, ![VVAR0] : (VVAR0 = vttempty => ($true <=> VVAR0 = VVAR0))).
fof('EQ-ttcons', axiom, ![VTType0, VTType1, VCType0, VVAR1, VVAR0, VCType1] : ((VVAR0 = vttcons(VCType0, VTType0) & VVAR1 = vttcons(VCType1, VTType1)) => ((VCType0 = VCType1 & VTType0 = VTType1) <=> VVAR0 = VVAR1))).
fof('DIFF-ttcons-ttempty', axiom, ![VVAR0, VCType0, VTType0, VVAR1] : ((VVAR0 = vttcons(VCType0, VTType0) & VVAR1 = vttempty) => VVAR0 != VVAR1)).
fof('EQ-rtempty', axiom, ![VVAR0] : (VVAR0 = vrtempty => ($true <=> VVAR0 = VVAR0))).
fof('EQ-rtcons', axiom, ![VRawType1, VRawType0, VVAR1, VFType0, VVAR0, VFType1] : ((VVAR0 = vrtcons(VFType0, VRawType0) & VVAR1 = vrtcons(VFType1, VRawType1)) => ((VFType0 = VFType1 & VRawType0 = VRawType1) <=> VVAR0 = VVAR1))).
fof('DIFF-rtcons-rtempty', axiom, ![VVAR0, VFType0, VRawType0, VVAR1] : ((VVAR0 = vrtcons(VFType0, VRawType0) & VVAR1 = vrtempty) => VVAR0 != VVAR1)).
fof('EQ-rempty', axiom, ![VVAR0] : (VVAR0 = vrempty => ($true <=> VVAR0 = VVAR0))).
fof('EQ-rcons', axiom, ![VRow0, VFVal1, VVAR1, VVAR0, VFVal0, VRow1] : ((VVAR0 = vrcons(VFVal0, VRow0) & VVAR1 = vrcons(VFVal1, VRow1)) => ((VFVal0 = VFVal1 & VRow0 = VRow1) <=> VVAR0 = VVAR1))).
fof('DIFF-rcons-rempty', axiom, ![VVAR0, VFVal0, VRow0, VVAR1] : ((VVAR0 = vrcons(VFVal0, VRow0) & VVAR1 = vrempty) => VVAR0 != VVAR1)).
fof('EQ-tempty', axiom, ![VVAR0] : (VVAR0 = vtempty => ($true <=> VVAR0 = VVAR0))).
fof('EQ-tcons', axiom, ![VRow0, VRawTable0, VRawTable1, VVAR1, VVAR0, VRow1] : ((VVAR0 = vtcons(VRow0, VRawTable0) & VVAR1 = vtcons(VRow1, VRawTable1)) => ((VRow0 = VRow1 & VRawTable0 = VRawTable1) <=> VVAR0 = VVAR1))).
fof('DIFF-tcons-tempty', axiom, ![VVAR0, VRow0, VRawTable0, VVAR1] : ((VVAR0 = vtcons(VRow0, VRawTable0) & VVAR1 = vtempty) => VVAR0 != VVAR1)).
fof('EQ-table', axiom, ![VAList0, VRawTable0, VRawTable1, VVAR1, VVAR0, VAList1] : ((VVAR0 = vtable(VAList0, VRawTable0) & VVAR1 = vtable(VAList1, VRawTable1)) => ((VAList0 = VAList1 & VRawTable0 = VRawTable1) <=> VVAR0 = VVAR1))).
fof('getRaw0', axiom, ![VVAR0, Val, Vrt, VVAR1] : ((VVAR0 = vtable(Val, Vrt) & VVAR1 = vgetRaw(VVAR0)) => VVAR1 = Vrt)).
fof('getAL0', axiom, ![VVAR0, Val, Vrt, VVAR1] : ((VVAR0 = vtable(Val, Vrt) & VVAR1 = vgetAL(VVAR0)) => VVAR1 = Val)).
fof('matchingAList0', axiom, ![VVAR0, VVAR1] : ((VVAR0 = vttempty & VVAR1 = vaempty) => vmatchingAList(VVAR0, VVAR1))).
fof('matchingAList1', axiom, ![Va1, Va2, VVAR2, VVAR1, Val, VVAR0, Vf, Vtt] : ((VVAR0 = vctype(Va1, Vf) & VVAR1 = vttcons(VVAR0, Vtt) & VVAR2 = vacons(Va2, Val)) => (vmatchingAList(VVAR1, VVAR2) <=> (Va1 = Va2 & vmatchingAList(Vtt, Val))))).
fof('matchingAList2', axiom, ![VVAR0, VVAR1, Vtt, Val] : ((VVAR0 = vttempty & VVAR1 = vaempty & (Vtt != VVAR0 | Val != VVAR1) & (![Vf0, Vtt0, Va10, VVAR2, VVAR3] : ((~VVAR2 = vctype(Va10, Vf0)) | (~VVAR3 = vttcons(VVAR2, Vtt0)) | Vtt != VVAR3) | ![VVAR4, Va20, Val0] : ((~VVAR4 = vacons(Va20, Val0)) | Val != VVAR4))) => (~vmatchingAList(Vtt, Val)))).
fof('welltypedtable0', axiom, ![Vt, VVAR1, Val, VVAR0, Vtt] : ((VVAR0 = vtable(Val, Vt) & VVAR1 = vrawType(Vtt)) => (vwelltypedtable(Vtt, VVAR0) <=> (vmatchingAList(Vtt, Val) & vwelltypedRawtable(VVAR1, Vt))))).
fof('rawType0', axiom, ![VVAR0, VVAR1, VVAR2] : ((VVAR0 = vttempty & VVAR1 = vrawType(VVAR0) & VVAR2 = vrtempty) => VVAR1 = VVAR2)).
fof('rawType1', axiom, ![Va, Vft, VVAR2, VVAR3, VVAR4, VVAR1, VVAR0, Vtt] : ((VVAR1 = vttcons(VVAR0, Vtt) & VVAR3 = vrawType(VVAR1) & VVAR2 = vrawType(Vtt) & VVAR0 = vctype(Va, Vft) & VVAR4 = vrtcons(Vft, VVAR2)) => VVAR3 = VVAR4)).
fof('welltypedRawtable0', axiom, ![VVAR0, Vrt] : (VVAR0 = vtempty => vwelltypedRawtable(Vrt, VVAR0))).
fof('welltypedRawtable1', axiom, ![VVAR0, Vr, Vt, Vrt] : (VVAR0 = vtcons(Vr, Vt) => (vwelltypedRawtable(Vrt, VVAR0) <=> (vwelltypedRow(Vrt, Vr) & vwelltypedRawtable(Vrt, Vt))))).
fof('welltypedRow0', axiom, ![VVAR0, VVAR1] : ((VVAR0 = vrtempty & VVAR1 = vrempty) => vwelltypedRow(VVAR0, VVAR1))).
fof('welltypedRow1', axiom, ![Vv, Vrt, Vft, Vr, VVAR2, VVAR1, VVAR0] : ((VVAR0 = vrtcons(Vft, Vrt) & VVAR1 = vrcons(Vv, Vr) & VVAR2 = vfieldType(Vv)) => (vwelltypedRow(VVAR0, VVAR1) <=> (VVAR2 = Vft & vwelltypedRow(Vrt, Vr))))).
fof('welltypedRow2', axiom, ![VVAR0, VVAR1, Vrt, Vr] : ((VVAR0 = vrtempty & VVAR1 = vrempty & (Vrt != VVAR0 | Vr != VVAR1) & (![VVAR2, Vft0, Vrt0] : ((~VVAR2 = vrtcons(Vft0, Vrt0)) | Vrt != VVAR2) | ![VVAR3, Vv0, Vr0] : ((~VVAR3 = vrcons(Vv0, Vr0)) | Vr != VVAR3))) => (~vwelltypedRow(Vrt, Vr)))).
fof('rowIn0', axiom, ![VVAR0, Vr1] : (VVAR0 = vtempty => (~vrowIn(Vr1, VVAR0)))).
fof('rowIn1', axiom, ![VVAR0, Vr2, Vrt, Vr1] : (VVAR0 = vtcons(Vr2, Vrt) => (vrowIn(Vr1, VVAR0) <=> (Vr1 = Vr2 | vrowIn(Vr1, Vrt))))).
fof('projectFirstRaw0', axiom, ![VVAR0, VVAR1] : ((VVAR0 = vtempty & VVAR1 = vprojectFirstRaw(VVAR0)) => VVAR1 = VVAR0)).
fof('projectFirstRaw1', axiom, ![Vrt, VVAR2, VVAR3, VVAR4, VVAR1, VVAR0] : ((VVAR0 = vrempty & VVAR2 = vprojectFirstRaw(Vrt) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR3 = vprojectFirstRaw(VVAR1) & VVAR4 = vtcons(VVAR0, VVAR2)) => VVAR3 = VVAR4)).
fof('projectFirstRaw2', axiom, ![Vrt, VVAR5, Vr, VVAR2, VVAR3, VVAR4, VVAR1, VVAR6, VVAR0, Vf] : ((VVAR0 = vrcons(Vf, Vr) & VVAR2 = vrempty & VVAR4 = vprojectFirstRaw(Vrt) & VVAR3 = vrcons(Vf, VVAR2) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR5 = vprojectFirstRaw(VVAR1) & VVAR6 = vtcons(VVAR3, VVAR4)) => VVAR5 = VVAR6)).
fof('dropFirstColRaw0', axiom, ![VVAR0, VVAR1] : ((VVAR0 = vtempty & VVAR1 = vdropFirstColRaw(VVAR0)) => VVAR1 = VVAR0)).
fof('dropFirstColRaw1', axiom, ![Vrt, VVAR2, VVAR3, VVAR4, VVAR1, VVAR0] : ((VVAR0 = vrempty & VVAR1 = vtcons(VVAR0, Vrt) & VVAR2 = vdropFirstColRaw(Vrt) & VVAR4 = vtcons(VVAR0, VVAR2) & VVAR3 = vdropFirstColRaw(VVAR1)) => VVAR3 = VVAR4)).
fof('dropFirstColRaw2', axiom, ![Vrt, Vr, VVAR2, VVAR3, VVAR4, VVAR1, VVAR0, Vf] : ((VVAR0 = vrcons(Vf, Vr) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR4 = vtcons(Vr, VVAR2) & VVAR2 = vdropFirstColRaw(Vrt) & VVAR3 = vdropFirstColRaw(VVAR1)) => VVAR3 = VVAR4)).
fof('EQ-noRawTable', axiom, ![VVAR0] : (VVAR0 = vnoRawTable => ($true <=> VVAR0 = VVAR0))).
fof('EQ-someRawTable', axiom, ![VVAR0, VRawTable0, VVAR1, VRawTable1] : ((VVAR0 = vsomeRawTable(VRawTable0) & VVAR1 = vsomeRawTable(VRawTable1)) => (VRawTable0 = VRawTable1 <=> VVAR0 = VVAR1))).
fof('DIFF-someRawTable-noRawTable', axiom, ![VVAR0, VRawTable0, VVAR1] : ((VVAR0 = vsomeRawTable(VRawTable0) & VVAR1 = vnoRawTable) => VVAR0 != VVAR1)).
fof('isSomeRawTable0', axiom, ![VVAR0] : (VVAR0 = vnoRawTable => (~visSomeRawTable(VVAR0)))).
fof('isSomeRawTable1', axiom, ![VVAR0, Vt] : (VVAR0 = vsomeRawTable(Vt) => visSomeRawTable(VVAR0))).
fof('getSomeRawTable0', axiom, ![VVAR0, Vt, VVAR1] : ((VVAR0 = vsomeRawTable(Vt) & VVAR1 = vgetSomeRawTable(VVAR0)) => VVAR1 = Vt)).
fof('attachColToFrontRaw0', axiom, ![VVAR0, VVAR1, VVAR2] : ((VVAR0 = vtempty & VVAR1 = vattachColToFrontRaw(VVAR0, VVAR0) & VVAR2 = vsomeRawTable(VVAR0)) => VVAR1 = VVAR2)).
fof('attachColToFrontRaw1', axiom, ![Vrt1, VVAR5, Vrest, VVAR7, Vr, VVAR2, VVAR3, VVAR4, VVAR1, VVAR6, VVAR8, VVAR0, Vf, VVAR9, Vrt2] : ((VVAR5 = vrcons(Vf, Vr) & VVAR4 = vtcons(Vr, Vrt2) & VVAR1 = vrempty & VVAR6 = vgetSomeRawTable(Vrest) & VVAR2 = vrcons(Vf, VVAR1) & VVAR9 = vsomeRawTable(VVAR7) & VVAR8 = vattachColToFrontRaw(VVAR3, VVAR4) & VVAR0 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR3 = vtcons(VVAR2, Vrt1) & VVAR7 = vtcons(VVAR5, VVAR6) & Vrest = VVAR0 & visSomeRawTable(Vrest)) => VVAR8 = VVAR9)).
fof('attachColToFrontRaw2', axiom, ![Vrt1, VVAR5, Vrest, Vr, VVAR2, VVAR3, VVAR4, VVAR1, VVAR6, VVAR0, Vf, Vrt2] : ((VVAR4 = vtcons(Vr, Vrt2) & VVAR1 = vrempty & VVAR2 = vrcons(Vf, VVAR1) & VVAR5 = vattachColToFrontRaw(VVAR3, VVAR4) & VVAR6 = vnoRawTable & VVAR0 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR3 = vtcons(VVAR2, Vrt1) & Vrest = VVAR0 & (~visSomeRawTable(Vrest))) => VVAR5 = VVAR6)).
fof('attachColToFrontRaw3', axiom, ![Vrt1, VVAR5, VVAR6, VVAR0, Vrt2] : ((VVAR0 = vtempty & VVAR5 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR6 = vnoRawTable & (Vrt1 != VVAR0 | Vrt2 != VVAR0) & (![Vf0, Vrt10, VVAR2, VVAR3, VVAR1] : ((~VVAR1 = vrempty) | (~VVAR2 = vrcons(Vf0, VVAR1)) | (~VVAR3 = vtcons(VVAR2, Vrt10)) | Vrt1 != VVAR3) | ![VVAR4, Vr0, Vrt20] : ((~VVAR4 = vtcons(Vr0, Vrt20)) | Vrt2 != VVAR4))) => VVAR5 = VVAR6)).
fof('rawUnion0', axiom, ![VVAR0, VVAR1, Vrt2] : ((VVAR0 = vtempty & VVAR1 = vrawUnion(VVAR0, Vrt2)) => VVAR1 = Vrt2)).
fof('rawUnion1', axiom, ![VVAR0, VVAR1, Vrt1] : ((VVAR0 = vtempty & VVAR1 = vrawUnion(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = Vrt1)).
fof('rawUnion2', axiom, ![Vr1, Vrt1, VVAR2, VVAR3, VVAR4, VVAR1, VVAR0, Vurt1rt2, Vrt2] : ((VVAR0 = vrawUnion(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR4 = vtcons(Vr1, Vurt1rt2) & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawUnion(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1) => VVAR3 = VVAR4)).
fof('rawUnion3', axiom, ![Vr1, Vrt1, VVAR2, VVAR3, VVAR1, VVAR0, Vurt1rt2, Vrt2] : ((VVAR0 = vrawUnion(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawUnion(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1) => VVAR3 = Vurt1rt2)).
fof('rawIntersection0', axiom, ![VVAR0, VVAR1, Vrt2] : ((VVAR0 = vtempty & VVAR1 = vrawIntersection(VVAR0, Vrt2)) => VVAR1 = VVAR0)).
fof('rawIntersection1', axiom, ![VVAR0, VVAR1, Vrt1] : ((VVAR0 = vtempty & VVAR1 = vrawIntersection(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = VVAR0)).
fof('rawIntersection2', axiom, ![Vr1, VVAR2, VVAR1, VVAR0, Vrt2] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawIntersection(VVAR1, Vrt2) & vrowIn(Vr1, Vrt2) & Vrt2 != VVAR0) => VVAR2 = VVAR1)).
fof('rawIntersection3', axiom, ![Vr1, VVAR2, VVAR1, VVAR0, Vrt2] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawIntersection(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR0)).
fof('rawIntersection4', axiom, ![Vr1, Vrt1, VVAR2, VVAR3, VVAR4, VVAR1, VVAR0, Vurt1rt2, Vrt2] : ((VVAR0 = vrawIntersection(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR3 = vrawIntersection(VVAR2, Vrt2) & VVAR4 = vtcons(Vr1, Vurt1rt2) & VVAR2 = vtcons(Vr1, Vrt1) & Vurt1rt2 = VVAR0 & vrowIn(Vr1, Vrt2) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = VVAR4)).
fof('rawIntersection5', axiom, ![Vr1, Vrt1, VVAR2, VVAR3, VVAR1, VVAR0, Vurt1rt2, Vrt2] : ((VVAR0 = vrawIntersection(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawIntersection(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = Vurt1rt2)).
fof('rawDifference0', axiom, ![VVAR0, VVAR1, Vrt2] : ((VVAR0 = vtempty & VVAR1 = vrawDifference(VVAR0, Vrt2)) => VVAR1 = VVAR0)).
fof('rawDifference1', axiom, ![VVAR0, VVAR1, Vrt1] : ((VVAR0 = vtempty & VVAR1 = vrawDifference(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = Vrt1)).
fof('rawDifference2', axiom, ![Vr1, VVAR2, VVAR1, VVAR0, Vrt2] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawDifference(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR1)).
fof('rawDifference3', axiom, ![Vr1, VVAR2, VVAR1, VVAR0, Vrt2] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawDifference(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR0)).
fof('rawDifference4', axiom, ![Vr1, Vrt1, VVAR2, VVAR3, VVAR4, VVAR1, VVAR0, Vrt2, Vdrt1rt2] : ((VVAR1 = vtempty & VVAR3 = vrawDifference(VVAR2, Vrt2) & VVAR2 = vtcons(Vr1, Vrt1) & VVAR0 = vrawDifference(Vrt1, Vrt2) & VVAR4 = vtcons(Vr1, Vdrt1rt2) & Vdrt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = VVAR4)).
fof('rawDifference5', axiom, ![Vr1, Vrt1, VVAR2, VVAR3, VVAR1, VVAR0, Vrt2, Vdrt1rt2] : ((VVAR0 = vrawDifference(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawDifference(VVAR2, Vrt2) & Vdrt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = Vdrt1rt2)).
fof('test-rawIntersection1', conjecture, ![Vz1, Vy2, Vrt, VVAR5, VVAR7, Vz2, Vdrt, Vprt, VVAR11, VVAR2, VVAR3, VVAR10, VVAR4, VVAR1, VVAR6, VVAR8, VVAR0, Vy1, VVAR9] : ((VVAR3 = vrcons(Vy1, VVAR2) & VVAR2 = vrcons(Vz1, VVAR0) & VVAR0 = vrempty & VVAR9 = vtcons(VVAR3, VVAR7) & VVAR4 = vtempty & VVAR10 = vtcons(VVAR8, VVAR9) & VVAR5 = vrcons(Vy2, VVAR2) & VVAR11 = vrawIntersection(Vprt, Vdrt) & VVAR1 = vrcons(Vz2, VVAR0) & VVAR8 = vrcons(Vy2, VVAR1) & VVAR6 = vtcons(VVAR3, VVAR4) & VVAR7 = vtcons(VVAR5, VVAR6) & Vprt = VVAR10 & Vdrt = VVAR10 & Vrt = VVAR10) => VVAR11 = Vrt)).
