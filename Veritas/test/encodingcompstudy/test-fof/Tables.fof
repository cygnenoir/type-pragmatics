fof('getRaw0', axiom, ![VTable0, Val, Vrt, VRESULT] : ((VTable0 = vtable(Val, Vrt) & VRESULT = Vrt) => vgetRaw(VTable0) = VRESULT)).
fof('getAL0', axiom, ![VTable0, Val, Vrt, VRESULT] : ((VTable0 = vtable(Val, Vrt) & VRESULT = Val) => vgetAL(VTable0) = VRESULT)).
fof('matchingAList0', axiom, ![VTType0, VAList0] : ((VTType0 = vttempty & VAList0 = vaempty) => vmatchingAList(VTType0, VAList0))).
fof('matchingAList1', axiom, ![VAList0, Va1, VTType0, Va2, Val, Vf, Vtt] : ((VTType0 = vttcons(vctype(Va1, Vf), Vtt) & VAList0 = vacons(Va2, Val)) => (vmatchingAList(VTType0, VAList0) <=> (Va1 = Va2 & vmatchingAList(Vtt, Val))))).
fof('matchingAList2', axiom, ![VTType0, Vtt, VAList0, Val] : ((VTType0 = Vtt & VAList0 = Val) => !(vmatchingAList(VTType0, VAList0)))).
fof('welltypedtable0', axiom, ![Vt, VTType0, Val, Vtt, VTable0] : ((VTType0 = Vtt & VTable0 = vtable(Val, Vt)) => (vwelltypedtable(VTType0, VTable0) <=> (vmatchingAList(Vtt, Val) & vwelltypedRawtable(vrawType(Vtt), Vt))))).
fof('rawType0', axiom, ![VTType0, VRESULT] : ((VTType0 = vttempty & VRESULT = vrtempty) => vrawType(VTType0) = VRESULT)).
fof('rawType1', axiom, ![Va, Vft, VTType0, VRESULT, Vtt] : ((VTType0 = vttcons(vctype(Va, Vft), Vtt) & VRESULT = vrtcons(Vft, vrawType(Vtt))) => vrawType(VTType0) = VRESULT)).
fof('welltypedRawtable0', axiom, ![VRawType0, Vrt, VRawTable0] : ((VRawType0 = Vrt & VRawTable0 = vtempty) => vwelltypedRawtable(VRawType0, VRawTable0))).
fof('welltypedRawtable1', axiom, ![Vt, Vrt, VRawTable0, VRawType0, Vr] : ((VRawType0 = Vrt & VRawTable0 = vtcons(Vr, Vt)) => (vwelltypedRawtable(VRawType0, VRawTable0) <=> (vwelltypedRow(Vrt, Vr) & vwelltypedRawtable(Vrt, Vt))))).
fof('welltypedRow0', axiom, ![VRawType0, VRow0] : ((VRawType0 = vrtempty & VRow0 = vrempty) => vwelltypedRow(VRawType0, VRow0))).
fof('welltypedRow1', axiom, ![Vv, VRow0, Vrt, Vft, VRawType0, Vr] : ((VRawType0 = vrtcons(Vft, Vrt) & VRow0 = vrcons(Vv, Vr)) => (vwelltypedRow(VRawType0, VRow0) <=> (vfieldType(Vv) = Vft & vwelltypedRow(Vrt, Vr))))).
fof('welltypedRow2', axiom, ![VRawType0, Vrt, VRow0, Vr] : ((VRawType0 = Vrt & VRow0 = Vr) => !(vwelltypedRow(VRawType0, VRow0)))).
fof('test1', conjecture, ![Vx, Vxt, VVAR0, Vtt, VTable0] : ((VVAR0 = Vtt & VTable0 = vtable(vaempty, vtcons(vrempty, vtempty)) & vfieldType(Vx) = Vxt & VVAR0 = vttempty) => vwelltypedtable(VVAR0, VTable0))).
