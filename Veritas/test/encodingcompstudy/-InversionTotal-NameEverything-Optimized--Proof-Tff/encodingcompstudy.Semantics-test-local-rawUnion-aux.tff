tff('Conf_type', type, vConf: $tType).
tff('OptConf_type', type, vOptConf: $tType).
tff('Opt3_type', type, vOpt3: $tType).
tff('FType_type', type, vFType: $tType).
tff('AName_type', type, vAName: $tType).
tff('AList_type', type, vAList: $tType).
tff('CType_type', type, vCType: $tType).
tff('TType_type', type, vTType: $tType).
tff('RawType_type', type, vRawType: $tType).
tff('FVal_type', type, vFVal: $tType).
tff('Row_type', type, vRow: $tType).
tff('RawTable_type', type, vRawTable: $tType).
tff('Table_type', type, vTable: $tType).
tff('OptRawTable_type', type, vOptRawTable: $tType).
tff('Pred_type', type, vPred: $tType).
tff('Query_type', type, vQuery: $tType).
tff('TRef_type', type, vTRef: $tType).
tff('TStore_type', type, vTStore: $tType).
tff('TName_type', type, vTName: $tType).
tff('OptTable_type', type, vOptTable: $tType).
tff('conf_type', type, vconf: (vQuery * vTStore) > vConf).
tff('noConf_type', type, vnoConf: vOptConf).
tff('someConf_type', type, vsomeConf: vConf > vOptConf).
tff('error_type', type, verror: vOpt3).
tff('isTrue_type', type, visTrue: vOpt3).
tff('isFalse_type', type, visFalse: vOpt3).
tff('ctype_type', type, vctype: (vAName * vFType) > vCType).
tff('aempty_type', type, vaempty: vAList).
tff('acons_type', type, vacons: (vAName * vAList) > vAList).
tff('ttempty_type', type, vttempty: vTType).
tff('ttcons_type', type, vttcons: (vCType * vTType) > vTType).
tff('rtempty_type', type, vrtempty: vRawType).
tff('rtcons_type', type, vrtcons: (vFType * vRawType) > vRawType).
tff('rempty_type', type, vrempty: vRow).
tff('rcons_type', type, vrcons: (vFVal * vRow) > vRow).
tff('tempty_type', type, vtempty: vRawTable).
tff('tcons_type', type, vtcons: (vRow * vRawTable) > vRawTable).
tff('table_type', type, vtable: (vAList * vRawTable) > vTable).
tff('noRawTable_type', type, vnoRawTable: vOptRawTable).
tff('someRawTable_type', type, vsomeRawTable: vRawTable > vOptRawTable).
tff('VEquals_type', type, vVEquals: (vAName * vFVal) > vPred).
tff('VGreater_type', type, vVGreater: (vAName * vFVal) > vPred).
tff('VSmaller_type', type, vVSmaller: (vAName * vFVal) > vPred).
tff('Ref_type', type, vRef: vTName > vTRef).
tff('Tvalue_type', type, vTvalue: vTable > vQuery).
tff('SelectAllFrom_type', type, vSelectAllFrom: vTRef > vQuery).
tff('SelectSomeFrom_type', type, vSelectSomeFrom: (vAList * vTRef) > vQuery).
tff('SelectAllFromWhere_type', type, vSelectAllFromWhere: (vTRef * vPred) > vQuery).
tff('SelectSomeFromWhere_type', type, vSelectSomeFromWhere: (vAList * vTRef * vPred) > vQuery).
tff('Union_type', type, vUnion: (vQuery * vQuery) > vQuery).
tff('Intersection_type', type, vIntersection: (vQuery * vQuery) > vQuery).
tff('Difference_type', type, vDifference: (vQuery * vQuery) > vQuery).
tff('noTable_type', type, vnoTable: vOptTable).
tff('someTable_type', type, vsomeTable: vTable > vOptTable).
tff('emptyStore_type', type, vemptyStore: vTStore).
tff('bindStore_type', type, vbindStore: (vTName * vTable * vTStore) > vTStore).
tff('x1_type', type, vx1: vFVal).
tff('x2_type', type, vx2: vFVal).
tff('y1_type', type, vy1: vFVal).
tff('y2_type', type, vy2: vFVal).
tff('z1_type', type, vz1: vFVal).
tff('z2_type', type, vz2: vFVal).
tff('TN_type', type, vTN: vTName).
tff('A1_type', type, vA1: vAName).
tff('A2_type', type, vA2: vAName).
tff('A3_type', type, vA3: vAName).
tff('getQuery_type', type, vgetQuery: vConf > vQuery).
tff('isSomeConf_type', type, visSomeConf: vOptConf > $o).
tff('findCol_type', type, vfindCol: (vAName * vTable) > vOptRawTable).
tff('projectEmptyCol_type', type, vprojectEmptyCol: vRawTable > vRawTable).
tff('project_type', type, vproject: (vAList * vTable) > vOptRawTable).
tff('select_type', type, vselect: (vTable * vPred) > vOptTable).
tff('union_type', type, vunion: (vTable * vTable) > vOptTable).
tff('intersect_type', type, vintersect: (vTable * vTable) > vOptTable).
tff('difference_type', type, vdifference: (vTable * vTable) > vOptTable).
tff('reduce_type', type, vreduce: vConf > vOptConf).
tff('getRaw_type', type, vgetRaw: vTable > vRawTable).
tff('getAL_type', type, vgetAL: vTable > vAList).
tff('fieldType_type', type, vfieldType: vFVal > vFType).
tff('le_type', type, vle: (vFVal * vFVal) > $o).
tff('ge_type', type, vge: (vFVal * vFVal) > $o).
tff('matchingAList_type', type, vmatchingAList: (vTType * vAList) > $o).
tff('welltypedtable_type', type, vwelltypedtable: (vTType * vTable) > $o).
tff('rawType_type', type, vrawType: vTType > vRawType).
tff('welltypedRawtable_type', type, vwelltypedRawtable: (vRawType * vRawTable) > $o).
tff('welltypedRow_type', type, vwelltypedRow: (vRawType * vRow) > $o).
tff('rowIn_type', type, vrowIn: (vRow * vRawTable) > $o).
tff('projectFirstRaw_type', type, vprojectFirstRaw: vRawTable > vRawTable).
tff('dropFirstColRaw_type', type, vdropFirstColRaw: vRawTable > vRawTable).
tff('isSomeRawTable_type', type, visSomeRawTable: vOptRawTable > $o).
tff('attachColToFrontRaw_type', type, vattachColToFrontRaw: (vRawTable * vRawTable) > vOptRawTable).
tff('rawUnion_type', type, vrawUnion: (vRawTable * vRawTable) > vRawTable).
tff('rawIntersection_type', type, vrawIntersection: (vRawTable * vRawTable) > vRawTable).
tff('rawDifference_type', type, vrawDifference: (vRawTable * vRawTable) > vRawTable).
tff('isValue_type', type, visValue: vQuery > $o).
tff('isSomeTable_type', type, visSomeTable: vOptTable > $o).
tff('lookupStore_type', type, vlookupStore: (vTName * vTStore) > vOptTable).
tff('getSomeConf_type', type, vgetSomeConf: vOptConf > vConf).
tff('singleRowSelect_type', type, vsingleRowSelect: (vAList * vPred * vRow) > vOpt3).
tff('getSomeRawTable_type', type, vgetSomeRawTable: vOptRawTable > vRawTable).
tff('getSomeTable_type', type, vgetSomeTable: vOptTable > vTable).
tff('EQ-conf', axiom, ![VTStore1: vTStore, VTStore0: vTStore, VQuery1: vQuery, VVAR1: vConf, VVAR0: vConf, VQuery0: vQuery] : ((VVAR0 = vconf(VQuery0, VTStore0) & VVAR1 = vconf(VQuery1, VTStore1)) => ((VQuery0 = VQuery1 & VTStore0 = VTStore1) <=> VVAR0 = VVAR1))).
tff('EQ-noConf', axiom, ![VVAR0: vOptConf] : (VVAR0 = vnoConf => $true)).
tff('EQ-someConf', axiom, ![VVAR0: vOptConf, VConf0: vConf, VVAR1: vOptConf, VConf1: vConf] : ((VVAR0 = vsomeConf(VConf0) & VVAR1 = vsomeConf(VConf1)) => (VConf0 = VConf1 <=> VVAR0 = VVAR1))).
tff('EQ-error', axiom, ![VVAR0: vOpt3] : (VVAR0 = verror => $true)).
tff('EQ-isTrue', axiom, ![VVAR0: vOpt3] : (VVAR0 = visTrue => $true)).
tff('EQ-isFalse', axiom, ![VVAR0: vOpt3] : (VVAR0 = visFalse => $true)).
tff('EQ-ctype', axiom, ![VAName0: vAName, VVAR1: vCType, VFType0: vFType, VVAR0: vCType, VAName1: vAName, VFType1: vFType] : ((VVAR0 = vctype(VAName0, VFType0) & VVAR1 = vctype(VAName1, VFType1)) => ((VAName0 = VAName1 & VFType0 = VFType1) <=> VVAR0 = VVAR1))).
tff('EQ-aempty', axiom, ![VVAR0: vAList] : (VVAR0 = vaempty => $true)).
tff('EQ-acons', axiom, ![VAList0: vAList, VAName0: vAName, VVAR1: vAList, VVAR0: vAList, VAName1: vAName, VAList1: vAList] : ((VVAR0 = vacons(VAName0, VAList0) & VVAR1 = vacons(VAName1, VAList1)) => ((VAName0 = VAName1 & VAList0 = VAList1) <=> VVAR0 = VVAR1))).
tff('EQ-ttempty', axiom, ![VVAR0: vTType] : (VVAR0 = vttempty => $true)).
tff('EQ-ttcons', axiom, ![VTType0: vTType, VTType1: vTType, VCType0: vCType, VVAR1: vTType, VVAR0: vTType, VCType1: vCType] : ((VVAR0 = vttcons(VCType0, VTType0) & VVAR1 = vttcons(VCType1, VTType1)) => ((VCType0 = VCType1 & VTType0 = VTType1) <=> VVAR0 = VVAR1))).
tff('EQ-rtempty', axiom, ![VVAR0: vRawType] : (VVAR0 = vrtempty => $true)).
tff('EQ-rtcons', axiom, ![VRawType1: vRawType, VRawType0: vRawType, VVAR1: vRawType, VFType0: vFType, VVAR0: vRawType, VFType1: vFType] : ((VVAR0 = vrtcons(VFType0, VRawType0) & VVAR1 = vrtcons(VFType1, VRawType1)) => ((VFType0 = VFType1 & VRawType0 = VRawType1) <=> VVAR0 = VVAR1))).
tff('EQ-rempty', axiom, ![VVAR0: vRow] : (VVAR0 = vrempty => $true)).
tff('EQ-rcons', axiom, ![VRow0: vRow, VFVal1: vFVal, VVAR1: vRow, VVAR0: vRow, VFVal0: vFVal, VRow1: vRow] : ((VVAR0 = vrcons(VFVal0, VRow0) & VVAR1 = vrcons(VFVal1, VRow1)) => ((VFVal0 = VFVal1 & VRow0 = VRow1) <=> VVAR0 = VVAR1))).
tff('EQ-tempty', axiom, ![VVAR0: vRawTable] : (VVAR0 = vtempty => $true)).
tff('EQ-tcons', axiom, ![VRow0: vRow, VRawTable0: vRawTable, VRawTable1: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, VRow1: vRow] : ((VVAR0 = vtcons(VRow0, VRawTable0) & VVAR1 = vtcons(VRow1, VRawTable1)) => ((VRow0 = VRow1 & VRawTable0 = VRawTable1) <=> VVAR0 = VVAR1))).
tff('EQ-table', axiom, ![VAList0: vAList, VRawTable0: vRawTable, VRawTable1: vRawTable, VVAR1: vTable, VVAR0: vTable, VAList1: vAList] : ((VVAR0 = vtable(VAList0, VRawTable0) & VVAR1 = vtable(VAList1, VRawTable1)) => ((VAList0 = VAList1 & VRawTable0 = VRawTable1) <=> VVAR0 = VVAR1))).
tff('EQ-noRawTable', axiom, ![VVAR0: vOptRawTable] : (VVAR0 = vnoRawTable => $true)).
tff('EQ-someRawTable', axiom, ![VVAR0: vOptRawTable, VRawTable0: vRawTable, VVAR1: vOptRawTable, VRawTable1: vRawTable] : ((VVAR0 = vsomeRawTable(VRawTable0) & VVAR1 = vsomeRawTable(VRawTable1)) => (VRawTable0 = VRawTable1 <=> VVAR0 = VVAR1))).
tff('EQ-VEquals', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVEquals(VAName0, VFVal0) & VVAR1 = vVEquals(VAName1, VFVal1)) => ((VAName0 = VAName1 & VFVal0 = VFVal1) <=> VVAR0 = VVAR1))).
tff('EQ-VGreater', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVGreater(VAName0, VFVal0) & VVAR1 = vVGreater(VAName1, VFVal1)) => ((VAName0 = VAName1 & VFVal0 = VFVal1) <=> VVAR0 = VVAR1))).
tff('EQ-VSmaller', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVSmaller(VAName0, VFVal0) & VVAR1 = vVSmaller(VAName1, VFVal1)) => ((VAName0 = VAName1 & VFVal0 = VFVal1) <=> VVAR0 = VVAR1))).
tff('EQ-Ref', axiom, ![VVAR0: vTRef, VTName0: vTName, VVAR1: vTRef, VTName1: vTName] : ((VVAR0 = vRef(VTName0) & VVAR1 = vRef(VTName1)) => (VTName0 = VTName1 <=> VVAR0 = VVAR1))).
tff('EQ-Tvalue', axiom, ![VVAR0: vQuery, VTable0: vTable, VVAR1: vQuery, VTable1: vTable] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vTvalue(VTable1)) => (VTable0 = VTable1 <=> VVAR0 = VVAR1))).
tff('EQ-SelectAllFrom', axiom, ![VVAR0: vQuery, VTRef0: vTRef, VVAR1: vQuery, VTRef1: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vSelectAllFrom(VTRef1)) => (VTRef0 = VTRef1 <=> VVAR0 = VVAR1))).
tff('EQ-SelectSomeFrom', axiom, ![VAList0: vAList, VVAR1: vQuery, VVAR0: vQuery, VAList1: vAList, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vSelectSomeFrom(VAList1, VTRef1)) => ((VAList0 = VAList1 & VTRef0 = VTRef1) <=> VVAR0 = VVAR1))).
tff('EQ-SelectAllFromWhere', axiom, ![VPred0: vPred, VPred1: vPred, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectAllFromWhere(VTRef0, VPred0) & VVAR1 = vSelectAllFromWhere(VTRef1, VPred1)) => ((VTRef0 = VTRef1 & VPred0 = VPred1) <=> VVAR0 = VVAR1))).
tff('EQ-SelectSomeFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VPred1: vPred, VVAR1: vQuery, VVAR0: vQuery, VAList1: vAList, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFromWhere(VAList0, VTRef0, VPred0) & VVAR1 = vSelectSomeFromWhere(VAList1, VTRef1, VPred1)) => ((VAList0 = VAList1 & (VTRef0 = VTRef1 & VPred0 = VPred1)) <=> VVAR0 = VVAR1))).
tff('EQ-Union', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vUnion(VQuery0, VQuery1) & VVAR1 = vUnion(VQuery2, VQuery3)) => ((VQuery0 = VQuery2 & VQuery1 = VQuery3) <=> VVAR0 = VVAR1))).
tff('EQ-Intersection', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vIntersection(VQuery0, VQuery1) & VVAR1 = vIntersection(VQuery2, VQuery3)) => ((VQuery0 = VQuery2 & VQuery1 = VQuery3) <=> VVAR0 = VVAR1))).
tff('EQ-Difference', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vDifference(VQuery0, VQuery1) & VVAR1 = vDifference(VQuery2, VQuery3)) => ((VQuery0 = VQuery2 & VQuery1 = VQuery3) <=> VVAR0 = VVAR1))).
tff('EQ-noTable', axiom, ![VVAR0: vOptTable] : (VVAR0 = vnoTable => $true)).
tff('EQ-someTable', axiom, ![VVAR0: vOptTable, VTable0: vTable, VVAR1: vOptTable, VTable1: vTable] : ((VVAR0 = vsomeTable(VTable0) & VVAR1 = vsomeTable(VTable1)) => (VTable0 = VTable1 <=> VVAR0 = VVAR1))).
tff('EQ-emptyStore', axiom, ![VVAR0: vTStore] : (VVAR0 = vemptyStore => $true)).
tff('EQ-bindStore', axiom, ![VTable1: vTable, VTStore1: vTStore, VTName0: vTName, VTStore0: vTStore, VVAR1: vTStore, VVAR0: vTStore, VTName1: vTName, VTable0: vTable] : ((VVAR0 = vbindStore(VTName0, VTable0, VTStore0) & VVAR1 = vbindStore(VTName1, VTable1, VTStore1)) => ((VTName0 = VTName1 & (VTable0 = VTable1 & VTStore0 = VTStore1)) <=> VVAR0 = VVAR1))).
tff('DIFF-noConf-someConf', axiom, ![VVAR0: vOptConf, VVAR1: vOptConf, VConf0: vConf] : ((VVAR0 = vnoConf & VVAR1 = vsomeConf(VConf0)) => VVAR0 != VVAR1)).
tff('DIFF-error-isTrue', axiom, ![VVAR0: vOpt3, VVAR1: vOpt3] : ((VVAR0 = verror & VVAR1 = visTrue) => VVAR0 != VVAR1)).
tff('DIFF-error-isFalse', axiom, ![VVAR0: vOpt3, VVAR1: vOpt3] : ((VVAR0 = verror & VVAR1 = visFalse) => VVAR0 != VVAR1)).
tff('DIFF-isTrue-isFalse', axiom, ![VVAR0: vOpt3, VVAR1: vOpt3] : ((VVAR0 = visTrue & VVAR1 = visFalse) => VVAR0 != VVAR1)).
tff('DIFF-aempty-acons', axiom, ![VVAR0: vAList, VVAR1: vAList, VAName0: vAName, VAList0: vAList] : ((VVAR0 = vaempty & VVAR1 = vacons(VAName0, VAList0)) => VVAR0 != VVAR1)).
tff('DIFF-ttempty-ttcons', axiom, ![VVAR0: vTType, VVAR1: vTType, VCType0: vCType, VTType0: vTType] : ((VVAR0 = vttempty & VVAR1 = vttcons(VCType0, VTType0)) => VVAR0 != VVAR1)).
tff('DIFF-rtempty-rtcons', axiom, ![VVAR0: vRawType, VVAR1: vRawType, VFType0: vFType, VRawType0: vRawType] : ((VVAR0 = vrtempty & VVAR1 = vrtcons(VFType0, VRawType0)) => VVAR0 != VVAR1)).
tff('DIFF-rempty-rcons', axiom, ![VVAR0: vRow, VVAR1: vRow, VFVal0: vFVal, VRow0: vRow] : ((VVAR0 = vrempty & VVAR1 = vrcons(VFVal0, VRow0)) => VVAR0 != VVAR1)).
tff('DIFF-tempty-tcons', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, VRow0: vRow, VRawTable0: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(VRow0, VRawTable0)) => VVAR0 != VVAR1)).
tff('DIFF-noRawTable-someRawTable', axiom, ![VVAR0: vOptRawTable, VVAR1: vOptRawTable, VRawTable0: vRawTable] : ((VVAR0 = vnoRawTable & VVAR1 = vsomeRawTable(VRawTable0)) => VVAR0 != VVAR1)).
tff('DIFF-VEquals-VGreater', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVEquals(VAName0, VFVal0) & VVAR1 = vVGreater(VAName1, VFVal1)) => VVAR0 != VVAR1)).
tff('DIFF-VEquals-VSmaller', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVEquals(VAName0, VFVal0) & VVAR1 = vVSmaller(VAName1, VFVal1)) => VVAR0 != VVAR1)).
tff('DIFF-VGreater-VSmaller', axiom, ![VAName0: vAName, VFVal1: vFVal, VVAR1: vPred, VVAR0: vPred, VAName1: vAName, VFVal0: vFVal] : ((VVAR0 = vVGreater(VAName0, VFVal0) & VVAR1 = vVSmaller(VAName1, VFVal1)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-SelectAllFrom', axiom, ![VVAR0: vQuery, VTable0: vTable, VVAR1: vQuery, VTRef0: vTRef] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vSelectAllFrom(VTRef0)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-SelectSomeFrom', axiom, ![VAList0: vAList, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VTRef0: vTRef] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vSelectSomeFrom(VAList0, VTRef0)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-SelectAllFromWhere', axiom, ![VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VTRef0: vTRef] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vSelectAllFromWhere(VTRef0, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-SelectSomeFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VTRef0: vTRef] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vSelectSomeFromWhere(VAList0, VTRef0, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-Union', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VQuery0: vQuery] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vUnion(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-Intersection', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VQuery0: vQuery] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vIntersection(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-Tvalue-Difference', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VTable0: vTable, VQuery0: vQuery] : ((VVAR0 = vTvalue(VTable0) & VVAR1 = vDifference(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-SelectSomeFrom', axiom, ![VAList0: vAList, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vSelectSomeFrom(VAList0, VTRef1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-SelectAllFromWhere', axiom, ![VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vSelectAllFromWhere(VTRef1, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-SelectSomeFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vSelectSomeFromWhere(VAList0, VTRef1, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-Union', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vUnion(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-Intersection', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vIntersection(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFrom-Difference', axiom, ![VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFrom(VTRef0) & VVAR1 = vDifference(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFrom-SelectAllFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vSelectAllFromWhere(VTRef1, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFrom-SelectSomeFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VVAR1: vQuery, VVAR0: vQuery, VAList1: vAList, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vSelectSomeFromWhere(VAList1, VTRef1, VPred0)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFrom-Union', axiom, ![VAList0: vAList, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vUnion(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFrom-Intersection', axiom, ![VAList0: vAList, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vIntersection(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFrom-Difference', axiom, ![VAList0: vAList, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFrom(VAList0, VTRef0) & VVAR1 = vDifference(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFromWhere-SelectSomeFromWhere', axiom, ![VAList0: vAList, VPred0: vPred, VPred1: vPred, VVAR1: vQuery, VVAR0: vQuery, VTRef1: vTRef, VTRef0: vTRef] : ((VVAR0 = vSelectAllFromWhere(VTRef0, VPred0) & VVAR1 = vSelectSomeFromWhere(VAList0, VTRef1, VPred1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFromWhere-Union', axiom, ![VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFromWhere(VTRef0, VPred0) & VVAR1 = vUnion(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFromWhere-Intersection', axiom, ![VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFromWhere(VTRef0, VPred0) & VVAR1 = vIntersection(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectAllFromWhere-Difference', axiom, ![VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectAllFromWhere(VTRef0, VPred0) & VVAR1 = vDifference(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFromWhere-Union', axiom, ![VAList0: vAList, VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFromWhere(VAList0, VTRef0, VPred0) & VVAR1 = vUnion(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFromWhere-Intersection', axiom, ![VAList0: vAList, VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFromWhere(VAList0, VTRef0, VPred0) & VVAR1 = vIntersection(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-SelectSomeFromWhere-Difference', axiom, ![VAList0: vAList, VPred0: vPred, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery, VTRef0: vTRef] : ((VVAR0 = vSelectSomeFromWhere(VAList0, VTRef0, VPred0) & VVAR1 = vDifference(VQuery0, VQuery1)) => VVAR0 != VVAR1)).
tff('DIFF-Union-Intersection', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vUnion(VQuery0, VQuery1) & VVAR1 = vIntersection(VQuery2, VQuery3)) => VVAR0 != VVAR1)).
tff('DIFF-Union-Difference', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vUnion(VQuery0, VQuery1) & VVAR1 = vDifference(VQuery2, VQuery3)) => VVAR0 != VVAR1)).
tff('DIFF-Intersection-Difference', axiom, ![VQuery3: vQuery, VQuery2: vQuery, VQuery1: vQuery, VVAR1: vQuery, VVAR0: vQuery, VQuery0: vQuery] : ((VVAR0 = vIntersection(VQuery0, VQuery1) & VVAR1 = vDifference(VQuery2, VQuery3)) => VVAR0 != VVAR1)).
tff('DIFF-noTable-someTable', axiom, ![VVAR0: vOptTable, VVAR1: vOptTable, VTable0: vTable] : ((VVAR0 = vnoTable & VVAR1 = vsomeTable(VTable0)) => VVAR0 != VVAR1)).
tff('DIFF-emptyStore-bindStore', axiom, ![VTName0: vTName, VTStore0: vTStore, VVAR1: vTStore, VVAR0: vTStore, VTable0: vTable] : ((VVAR0 = vemptyStore & VVAR1 = vbindStore(VTName0, VTable0, VTStore0)) => VVAR0 != VVAR1)).
tff('getQuery0', axiom, ![VVAR0: vConf, Vq: vQuery, Vts: vTStore, VVAR1: vQuery] : ((VVAR0 = vconf(Vq, Vts) & VVAR1 = vgetQuery(VVAR0)) => VVAR1 = Vq)).
tff('getQuery-INV', axiom, ![VVAR0: vQuery, VConf0: vConf, VRESULT] : ((VVAR0 = vgetQuery(VConf0) & VVAR0 = VRESULT) => ?[Vq: vQuery, VConf0, VVAR1: vConf, VRESULT, Vts: vTStore] : ((~VVAR1 = vconf(Vq, Vts)) | (VConf0 = VVAR1 & VRESULT = Vq)))).
tff('isSomeConf0', axiom, ![VVAR0: vOptConf] : (VVAR0 = vnoConf => (~visSomeConf(VVAR0)))).
tff('isSomeConf1', axiom, ![VVAR0: vOptConf, Vt: vConf] : (VVAR0 = vsomeConf(Vt) => visSomeConf(VVAR0))).
tff('isSomeConf-true-INV', axiom, ![VOptConf0: vOptConf] : (visSomeConf(VOptConf0) => ?[VVAR0: vOptConf, Vt: vConf, VOptConf0] : ((~VVAR0 = vsomeConf(Vt)) | VOptConf0 = VVAR0))).
tff('isSomeConf-false-INV', axiom, ![VVAR0: vOptConf, VOptConf0: vOptConf] : ((VVAR0 = vnoConf & (~visSomeConf(VOptConf0))) => VOptConf0 = VVAR0)).
tff('getSomeConf0', axiom, ![VVAR0: vOptConf, Vc: vConf, VVAR1: vConf] : ((VVAR0 = vsomeConf(Vc) & VVAR1 = vgetSomeConf(VVAR0)) => VVAR1 = Vc)).
tff('findCol0', axiom, ![Vrt: vRawTable, Va: vAName, VVAR2: vOptRawTable, VVAR3: vOptRawTable, VVAR1: vTable, VVAR0: vAList] : ((VVAR0 = vaempty & VVAR1 = vtable(VVAR0, Vrt) & VVAR2 = vfindCol(Va, VVAR1) & VVAR3 = vnoRawTable) => VVAR2 = VVAR3)).
tff('findCol1', axiom, ![Vrt: vRawTable, Va: vAName, Va2: vAName, VVAR2: vRawTable, VVAR3: vOptRawTable, VVAR4: vOptRawTable, VVAR1: vTable, Val: vAList, VVAR0: vAList] : ((VVAR2 = vprojectFirstRaw(Vrt) & VVAR3 = vfindCol(Va, VVAR1) & VVAR1 = vtable(VVAR0, Vrt) & VVAR4 = vsomeRawTable(VVAR2) & VVAR0 = vacons(Va2, Val) & Va = Va2) => VVAR3 = VVAR4)).
tff('findCol2', axiom, ![Vrt: vRawTable, Va: vAName, VVAR5: vOptRawTable, Va2: vAName, VVAR2: vRawTable, VVAR3: vTable, VVAR4: vOptRawTable, VVAR1: vTable, Val: vAList, VVAR0: vAList] : ((VVAR4 = vfindCol(Va, VVAR1) & VVAR1 = vtable(VVAR0, Vrt) & VVAR2 = vdropFirstColRaw(Vrt) & VVAR3 = vtable(Val, VVAR2) & VVAR5 = vfindCol(Va, VVAR3) & VVAR0 = vacons(Va2, Val) & Va != Va2) => VVAR4 = VVAR5)).
tff('findCol-INV', axiom, ![VVAR0: vOptRawTable, VAName0: vAName, VTable0: vTable, VRESULT] : ((VVAR0 = vfindCol(VAName0, VTable0) & VVAR0 = VRESULT) => (?[Vrt: vRawTable, Va, VAName0, VVAR2: vTable, VVAR3: vOptRawTable, VVAR1: vAList, VRESULT, VTable0] : ((~VVAR1 = vaempty) | (~VVAR2 = vtable(VVAR1, Vrt)) | (~VVAR3 = vnoRawTable) | (VAName0 = Va & VTable0 = VVAR2 & VRESULT = VVAR3)) | ?[Vrt: vRawTable, Va, VVAR5: vTable, VAName0, VVAR7: vOptRawTable, Va2: vAName, VVAR4: vAList, VVAR6: vRawTable, Val: vAList, VRESULT, VTable0] : ((~VVAR4 = vacons(Va2, Val)) | (~VVAR5 = vtable(VVAR4, Vrt)) | (~VVAR6 = vprojectFirstRaw(Vrt)) | (~VVAR7 = vsomeRawTable(VVAR6)) | (Va = Va2 & VAName0 = Va & VTable0 = VVAR5 & VRESULT = VVAR7)) | ?[Vrt: vRawTable, Va: vAName, VAName0, Va2: vAName, VVAR11: vTable, VVAR10: vRawTable, VVAR8: vAList, Val: vAList, VVAR12: vOptRawTable, VRESULT, VVAR9: vTable, VTable0] : ((~VVAR11 = vtable(Val, VVAR10)) | (~VVAR9 = vtable(VVAR8, Vrt)) | (~VVAR12 = vfindCol(Va, VVAR11)) | (~VVAR10 = vdropFirstColRaw(Vrt)) | (~VVAR8 = vacons(Va2, Val)) | (Va != Va2 & VAName0 = Va & VTable0 = VVAR9 & VRESULT = VVAR12))))).
tff('projectEmptyCol0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vprojectEmptyCol(VVAR0)) => VVAR1 = VVAR0)).
tff('projectEmptyCol1', axiom, ![Vt: vRawTable, Vr: vRow, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRow, VVAR0: vRawTable] : ((VVAR3 = vprojectEmptyCol(VVAR0) & VVAR1 = vrempty & VVAR2 = vprojectEmptyCol(Vt) & VVAR0 = vtcons(Vr, Vt) & VVAR4 = vtcons(VVAR1, VVAR2)) => VVAR3 = VVAR4)).
tff('projectEmptyCol-INV', axiom, ![VVAR0: vRawTable, VRawTable0: vRawTable, VVAR1: vRawTable, VRESULT] : ((VVAR0 = vprojectEmptyCol(VRawTable0) & VVAR1 = vtempty & VVAR0 = VRESULT) => ((VRawTable0 = VVAR1 & VRESULT = VVAR1) | ?[Vt: vRawTable, VVAR5: vRawTable, VRawTable0, Vr: vRow, VVAR2: vRawTable, VVAR3: vRow, VVAR4: vRawTable, VRESULT] : ((~VVAR2 = vtcons(Vr, Vt)) | (~VVAR3 = vrempty) | (~VVAR4 = vprojectEmptyCol(Vt)) | (~VVAR5 = vtcons(VVAR3, VVAR4)) | (VRawTable0 = VVAR2 & VRESULT = VVAR5))))).
tff('project0', axiom, ![Vrt: vRawTable, VVAR2: vRawTable, VVAR3: vOptRawTable, VVAR4: vOptRawTable, VVAR1: vTable, Val: vAList, VVAR0: vAList] : ((VVAR1 = vtable(Val, Vrt) & VVAR3 = vproject(VVAR0, VVAR1) & VVAR2 = vprojectEmptyCol(Vrt) & VVAR0 = vaempty & VVAR4 = vsomeRawTable(VVAR2)) => VVAR3 = VVAR4)).
tff('project1', axiom, ![Vt: vTable, Va: vAName, VVAR5: vRawTable, Vrest: vOptRawTable, VVAR7: vOptRawTable, VVAR3: vAList, VVAR4: vRawTable, VVAR1: vOptRawTable, VVAR6: vOptRawTable, Vcol: vOptRawTable, VVAR0: vOptRawTable, Valr: vAList] : ((VVAR0 = vfindCol(Va, Vt) & VVAR5 = vgetSomeRawTable(Vrest) & VVAR7 = vattachColToFrontRaw(VVAR4, VVAR5) & VVAR4 = vgetSomeRawTable(Vcol) & VVAR6 = vproject(VVAR3, Vt) & VVAR3 = vacons(Va, Valr) & VVAR1 = vproject(Valr, Vt) & Vcol = VVAR0 & Vrest = VVAR1 & (visSomeRawTable(Vcol) & visSomeRawTable(Vrest)) & ![VVAR2: vTable, Val0: vAList, Vrt0: vRawTable, Vt] : ((~VVAR2 = vtable(Val0, Vrt0)) | Vt != VVAR2)) => VVAR6 = VVAR7)).
tff('project2', axiom, ![Vt: vTable, Va: vAName, VVAR5: vOptRawTable, Vrest: vOptRawTable, VVAR3: vAList, VVAR4: vOptRawTable, VVAR1: vOptRawTable, Vcol: vOptRawTable, VVAR0: vOptRawTable, Valr: vAList] : ((VVAR0 = vfindCol(Va, Vt) & VVAR4 = vproject(VVAR3, Vt) & VVAR5 = vnoRawTable & VVAR3 = vacons(Va, Valr) & VVAR1 = vproject(Valr, Vt) & Vcol = VVAR0 & Vrest = VVAR1 & (~(visSomeRawTable(Vcol) & visSomeRawTable(Vrest))) & ![VVAR2: vTable, Val0: vAList, Vrt0: vRawTable, Vt] : ((~VVAR2 = vtable(Val0, Vrt0)) | Vt != VVAR2)) => VVAR4 = VVAR5)).
tff('project-INV', axiom, ![VVAR0: vOptRawTable, VAList0: vAList, VTable0: vTable, VRESULT] : ((VVAR0 = vproject(VAList0, VTable0) & VVAR0 = VRESULT) => (?[VAList0, Vrt: vRawTable, VVAR2: vTable, VVAR3: vRawTable, VVAR4: vOptRawTable, VVAR1: vAList, Val: vAList, VRESULT, VTable0] : ((~VVAR1 = vaempty) | (~VVAR2 = vtable(Val, Vrt)) | (~VVAR3 = vprojectEmptyCol(Vrt)) | (~VVAR4 = vsomeRawTable(VVAR3)) | (VAList0 = VVAR1 & VTable0 = VVAR2 & VRESULT = VVAR4)) | ?[Vt: vTable, VAList0, Va: vAName, VVAR5: vOptRawTable, Vrest: vOptRawTable, VVAR11: vOptRawTable, VVAR10: vRawTable, VVAR6: vOptRawTable, Vcol: vOptRawTable, VVAR8: vAList, VRESULT, VVAR9: vRawTable, VTable0, Valr: vAList] : ((~VVAR5 = vfindCol(Va, Vt)) | (~VVAR10 = vgetSomeRawTable(Vrest)) | (~VVAR9 = vgetSomeRawTable(Vcol)) | (~VVAR8 = vacons(Va, Valr)) | (~VVAR11 = vattachColToFrontRaw(VVAR9, VVAR10)) | (~VVAR6 = vproject(Valr, Vt)) | (Vcol = VVAR5 & Vrest = VVAR6 & (visSomeRawTable(Vcol) & visSomeRawTable(Vrest)) & ![VVAR7: vTable, Val0: vAList, Vrt0: vRawTable, Vt] : ((~VVAR7 = vtable(Val0, Vrt0)) | Vt != VVAR7) & VAList0 = VVAR8 & VTable0 = Vt & VRESULT = VVAR11)) | ?[Vt: vTable, VAList0, Va: vAName, Vrest: vOptRawTable, VVAR13: vOptRawTable, VVAR15: vAList, Vcol: vOptRawTable, VVAR12: vOptRawTable, VRESULT, VTable0, Valr: vAList, VVAR16: vOptRawTable] : ((~VVAR12 = vfindCol(Va, Vt)) | (~VVAR13 = vproject(Valr, Vt)) | (~VVAR15 = vacons(Va, Valr)) | (~VVAR16 = vnoRawTable) | (Vcol = VVAR12 & Vrest = VVAR13 & (~(visSomeRawTable(Vcol) & visSomeRawTable(Vrest))) & ![VVAR14: vTable, Val0: vAList, Vrt0: vRawTable, Vt] : ((~VVAR14 = vtable(Val0, Vrt0)) | Vt != VVAR14) & VAList0 = VVAR15 & VTable0 = Vt & VRESULT = VVAR16))))).
tff('singleRowSelect0', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR3 = vVEquals(Va2, Vfv) & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & Vf = Vfv) => VVAR5 = VVAR6)).
tff('singleRowSelect1', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR3 = vVEquals(Va2, Vfv) & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & Vf != Vfv) => VVAR5 = VVAR6)).
tff('singleRowSelect2', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR3 = vVEquals(Va2, Vfv) & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & VVAR6 = verror & Va1 != Va2) => VVAR5 = VVAR6)).
tff('singleRowSelect3', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR3 = vVEquals(Va2, Vfv) & VVAR0 = vaempty & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & Vf = Vfv & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect4', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR3 = vVEquals(Va2, Vfv) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & Vf != Vfv & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect5', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR3 = vVEquals(Va2, Vfv) & VVAR6 = vsingleRowSelect(Var, VVAR3, Vr) & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 != Va2 & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect6', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & vge(Vf, Vfv)) => VVAR5 = VVAR6)).
tff('singleRowSelect7', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & (~vge(Vf, Vfv))) => VVAR5 = VVAR6)).
tff('singleRowSelect8', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & VVAR6 = verror & Va1 != Va2) => VVAR5 = VVAR6)).
tff('singleRowSelect9', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR0 = vaempty & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & vge(Vf, Vfv) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect10', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & (~vge(Vf, Vfv)) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect11', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR3 = vVGreater(Va2, Vfv) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR6 = vsingleRowSelect(Var, VVAR3, Vr) & VVAR0 = vaempty & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 != Va2 & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect12', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & vle(Vf, Vfv)) => VVAR5 = VVAR6)).
tff('singleRowSelect13', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & (~vle(Vf, Vfv))) => VVAR5 = VVAR6)).
tff('singleRowSelect14', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR1 = vrempty & VVAR4 = vrcons(Vf, VVAR1) & VVAR2 = vacons(Va1, VVAR0) & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & VVAR6 = verror & Va1 != Va2) => VVAR5 = VVAR6)).
tff('singleRowSelect15', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR6 = visTrue & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & vle(Vf, Vfv) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect16', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR6 = visFalse & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 = Va2 & (~vle(Vf, Vfv)) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('singleRowSelect17', axiom, ![VVAR5: vOpt3, Va1: vAName, Va2: vAName, Var: vAList, Vr: vRow, VVAR2: vAList, VVAR3: vPred, Vfv: vFVal, VVAR4: vRow, VVAR1: vRow, VVAR6: vOpt3, VVAR0: vAList, Vf: vFVal] : ((VVAR4 = vrcons(Vf, Vr) & VVAR1 = vrempty & VVAR2 = vacons(Va1, Var) & VVAR6 = vsingleRowSelect(Var, VVAR3, Vr) & VVAR0 = vaempty & VVAR3 = vVSmaller(Va2, Vfv) & VVAR5 = vsingleRowSelect(VVAR2, VVAR3, VVAR4) & Va1 != Va2 & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1) & (Var != VVAR0 | Vr != VVAR1)) => VVAR5 = VVAR6)).
tff('select0', axiom, ![Vpred: vPred, VVAR2: vOptTable, VVAR3: vOptTable, VVAR1: vTable, Val: vAList, VVAR0: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtable(Val, VVAR0) & VVAR2 = vselect(VVAR1, Vpred) & VVAR3 = vsomeTable(VVAR1)) => VVAR2 = VVAR3)).
tff('select1', axiom, ![Vrt: vRawTable, VVAR5: vTable, Vpred: vPred, VVAR7: vRawTable, VVAR11: vOptTable, Vr: vRow, VVAR2: vOpt3, VVAR3: vOpt3, Vrb, VVAR10: vOptTable, VVAR4: vRawTable, VVAR1: vOptTable, VVAR6: vTable, VVAR8: vRawTable, Vrts: vOptTable, Val: vAList, VVAR0: vTable, VVAR9: vTable] : ((VVAR8 = vtcons(Vr, VVAR7) & VVAR4 = vtcons(Vr, Vrt) & VVAR1 = vselect(VVAR0, Vpred) & VVAR6 = vgetSomeTable(Vrts) & VVAR5 = vtable(Val, VVAR4) & VVAR0 = vtable(Val, Vrt) & VVAR9 = vtable(Val, VVAR8) & VVAR10 = vselect(VVAR5, Vpred) & VVAR7 = vgetRaw(VVAR6) & VVAR2 = vsingleRowSelect(Val, Vpred, Vr) & VVAR3 = visTrue & VVAR11 = vsomeTable(VVAR9) & Vrts = VVAR1 & Vrb = VVAR2 & Vrb = VVAR3) => VVAR10 = VVAR11)).
tff('select2', axiom, ![Vrt: vRawTable, VVAR5: vRawTable, Vpred: vPred, VVAR7: vOptTable, Vr: vRow, VVAR2: vOpt3, VVAR3: vOpt3, Vrb, VVAR4: vOpt3, VVAR1: vOptTable, VVAR6: vTable, Vrts, Val: vAList, VVAR0: vTable] : ((VVAR5 = vtcons(Vr, Vrt) & VVAR1 = vselect(VVAR0, Vpred) & VVAR0 = vtable(Val, Vrt) & VVAR4 = visFalse & VVAR2 = vsingleRowSelect(Val, Vpred, Vr) & VVAR3 = visTrue & VVAR6 = vtable(Val, VVAR5) & VVAR7 = vselect(VVAR6, Vpred) & Vrts = VVAR1 & Vrb = VVAR2 & Vrb != VVAR3 & Vrb = VVAR4) => VVAR7 = Vrts)).
tff('select3', axiom, ![Vrt: vRawTable, VVAR5: vRawTable, Vpred: vPred, VVAR7: vOptTable, Vr: vRow, VVAR2: vOpt3, VVAR3: vOpt3, Vrb, VVAR4: vOpt3, VVAR1: vOptTable, VVAR6: vTable, VVAR8: vOptTable, Vrts, Val: vAList, VVAR0: vTable] : ((VVAR5 = vtcons(Vr, Vrt) & VVAR1 = vselect(VVAR0, Vpred) & VVAR0 = vtable(Val, Vrt) & VVAR8 = vnoTable & VVAR4 = visFalse & VVAR2 = vsingleRowSelect(Val, Vpred, Vr) & VVAR3 = visTrue & VVAR6 = vtable(Val, VVAR5) & VVAR7 = vselect(VVAR6, Vpred) & Vrts = VVAR1 & Vrb = VVAR2 & Vrb != VVAR3 & Vrb != VVAR4) => VVAR7 = VVAR8)).
tff('select-INV', axiom, ![VVAR0: vOptTable, VTable0: vTable, VPred0: vPred, VRESULT] : ((VVAR0 = vselect(VTable0, VPred0) & VVAR0 = VRESULT) => (?[Vpred, VPred0, VVAR2: vTable, VVAR3: vOptTable, VVAR1: vRawTable, Val: vAList, VRESULT, VTable0] : ((~VVAR1 = vtempty) | (~VVAR2 = vtable(Val, VVAR1)) | (~VVAR3 = vsomeTable(VVAR2)) | (VTable0 = VVAR2 & VPred0 = Vpred & VRESULT = VVAR3)) | ?[VVAR14: vOptTable, Vrt: vRawTable, VVAR5: vOptTable, Vpred: vPred, VVAR7: vOpt3, VPred0, VVAR13: vTable, VVAR11: vRawTable, Vr: vRow, Vrb, VVAR10: vTable, VVAR4: vTable, VVAR6: vOpt3, VVAR8: vRawTable, Vrts: vOptTable, Val: vAList, VVAR12: vRawTable, VRESULT, VVAR9: vTable, VTable0] : ((~VVAR8 = vtcons(Vr, Vrt)) | (~VVAR12 = vtcons(Vr, VVAR11)) | (~VVAR14 = vsomeTable(VVAR13)) | (~VVAR10 = vgetSomeTable(Vrts)) | (~VVAR4 = vtable(Val, Vrt)) | (~VVAR5 = vselect(VVAR4, Vpred)) | (~VVAR13 = vtable(Val, VVAR12)) | (~VVAR9 = vtable(Val, VVAR8)) | (~VVAR6 = vsingleRowSelect(Val, Vpred, Vr)) | (~VVAR11 = vgetRaw(VVAR10)) | (~VVAR7 = visTrue) | (Vrts = VVAR5 & Vrb = VVAR6 & Vrb = VVAR7 & VTable0 = VVAR9 & VPred0 = Vpred & VRESULT = VVAR14)) | ?[VVAR17: vOpt3, VVAR21: vTable, Vrt: vRawTable, VVAR20: vRawTable, Vpred: vPred, VPred0, Vr: vRow, VVAR15: vTable, Vrb, Vrts, Val: vAList, VRESULT, VVAR18: vOpt3, VVAR19: vOpt3, VTable0, VVAR16: vOptTable] : ((~VVAR20 = vtcons(Vr, Vrt)) | (~VVAR15 = vtable(Val, Vrt)) | (~VVAR16 = vselect(VVAR15, Vpred)) | (~VVAR19 = visFalse) | (~VVAR17 = vsingleRowSelect(Val, Vpred, Vr)) | (~VVAR21 = vtable(Val, VVAR20)) | (~VVAR18 = visTrue) | (Vrts = VVAR16 & Vrb = VVAR17 & Vrb != VVAR18 & Vrb = VVAR19 & VTable0 = VVAR21 & VPred0 = Vpred & VRESULT = Vrts)) | ?[VVAR26: vOpt3, VVAR25: vOpt3, VVAR22: vTable, Vrt: vRawTable, VVAR24: vOpt3, Vpred: vPred, VVAR23: vOptTable, VPred0, Vr: vRow, VVAR27: vRawTable, Vrb, Vrts, Val: vAList, VVAR28: vTable, VRESULT, VTable0, VVAR29: vOptTable] : ((~VVAR23 = vselect(VVAR22, Vpred)) | (~VVAR27 = vtcons(Vr, Vrt)) | (~VVAR22 = vtable(Val, Vrt)) | (~VVAR29 = vnoTable) | (~VVAR26 = visFalse) | (~VVAR24 = vsingleRowSelect(Val, Vpred, Vr)) | (~VVAR25 = visTrue) | (~VVAR28 = vtable(Val, VVAR27)) | (Vrts = VVAR23 & Vrb = VVAR24 & Vrb != VVAR25 & Vrb != VVAR26 & VTable0 = VVAR28 & VPred0 = Vpred & VRESULT = VVAR29))))).
tff('union0', axiom, ![Vrt1: vRawTable, VVAR5: vOptTable, VVAR2: vRawTable, VVAR3: vTable, VVAR4: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR2 = vrawUnion(Vrt1, Vrt2) & VVAR1 = vtable(Val2, Vrt2) & VVAR4 = vunion(VVAR0, VVAR1) & VVAR3 = vtable(Val1, VVAR2) & VVAR5 = vsomeTable(VVAR3) & VVAR0 = vtable(Val1, Vrt1) & Val1 = Val2) => VVAR4 = VVAR5)).
tff('union1', axiom, ![Vrt1: vRawTable, VVAR2: vOptTable, VVAR3: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR0 = vtable(Val1, Vrt1) & VVAR1 = vtable(Val2, Vrt2) & VVAR2 = vunion(VVAR0, VVAR1) & VVAR3 = vnoTable & Val1 != Val2) => VVAR2 = VVAR3)).
tff('union-INV', axiom, ![VVAR0: vOptTable, VTable0: vTable, VTable1: vTable, VRESULT] : ((VVAR0 = vunion(VTable0, VTable1) & VVAR0 = VRESULT) => (?[VTable1, Vrt1: vRawTable, VVAR5: vOptTable, VVAR2: vTable, VVAR3: vRawTable, VVAR4: vTable, VVAR1: vTable, Val1: vAList, Val2: vAList, VRESULT, VTable0, Vrt2: vRawTable] : ((~VVAR3 = vrawUnion(Vrt1, Vrt2)) | (~VVAR5 = vsomeTable(VVAR4)) | (~VVAR2 = vtable(Val2, Vrt2)) | (~VVAR4 = vtable(Val1, VVAR3)) | (~VVAR1 = vtable(Val1, Vrt1)) | (Val1 = Val2 & VTable0 = VVAR1 & VTable1 = VVAR2 & VRESULT = VVAR5)) | ?[VTable1, Vrt1: vRawTable, VVAR7: vTable, VVAR6: vTable, VVAR8: vOptTable, Val1: vAList, Val2: vAList, VRESULT, VTable0, Vrt2: vRawTable] : ((~VVAR6 = vtable(Val1, Vrt1)) | (~VVAR7 = vtable(Val2, Vrt2)) | (~VVAR8 = vnoTable) | (Val1 != Val2 & VTable0 = VVAR6 & VTable1 = VVAR7 & VRESULT = VVAR8))))).
tff('intersect0', axiom, ![Vrt1: vRawTable, VVAR5: vOptTable, VVAR2: vRawTable, VVAR3: vTable, VVAR4: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR1 = vtable(Val2, Vrt2) & VVAR2 = vrawIntersection(Vrt1, Vrt2) & VVAR3 = vtable(Val1, VVAR2) & VVAR5 = vsomeTable(VVAR3) & VVAR0 = vtable(Val1, Vrt1) & VVAR4 = vintersect(VVAR0, VVAR1) & Val1 = Val2) => VVAR4 = VVAR5)).
tff('intersect1', axiom, ![Vrt1: vRawTable, VVAR2: vOptTable, VVAR3: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR0 = vtable(Val1, Vrt1) & VVAR1 = vtable(Val2, Vrt2) & VVAR2 = vintersect(VVAR0, VVAR1) & VVAR3 = vnoTable & Val1 != Val2) => VVAR2 = VVAR3)).
tff('intersect-INV', axiom, ![VVAR0: vOptTable, VTable0: vTable, VTable1: vTable, VRESULT] : ((VVAR0 = vintersect(VTable0, VTable1) & VVAR0 = VRESULT) => (?[VTable1, Vrt1: vRawTable, VVAR5: vOptTable, VVAR2: vTable, VVAR3: vRawTable, VVAR4: vTable, VVAR1: vTable, Val1: vAList, Val2: vAList, VRESULT, VTable0, Vrt2: vRawTable] : ((~VVAR5 = vsomeTable(VVAR4)) | (~VVAR2 = vtable(Val2, Vrt2)) | (~VVAR3 = vrawIntersection(Vrt1, Vrt2)) | (~VVAR4 = vtable(Val1, VVAR3)) | (~VVAR1 = vtable(Val1, Vrt1)) | (Val1 = Val2 & VTable0 = VVAR1 & VTable1 = VVAR2 & VRESULT = VVAR5)) | ?[VTable1, Vrt1: vRawTable, VVAR7: vTable, VVAR6: vTable, VVAR8: vOptTable, Val1: vAList, Val2: vAList, VRESULT, VTable0, Vrt2: vRawTable] : ((~VVAR6 = vtable(Val1, Vrt1)) | (~VVAR7 = vtable(Val2, Vrt2)) | (~VVAR8 = vnoTable) | (Val1 != Val2 & VTable0 = VVAR6 & VTable1 = VVAR7 & VRESULT = VVAR8))))).
tff('difference0', axiom, ![Vrt1: vRawTable, VVAR5: vOptTable, VVAR2: vRawTable, VVAR3: vTable, VVAR4: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR1 = vtable(Val2, Vrt2) & VVAR4 = vdifference(VVAR0, VVAR1) & VVAR3 = vtable(Val1, VVAR2) & VVAR5 = vsomeTable(VVAR3) & VVAR0 = vtable(Val1, Vrt1) & VVAR2 = vrawDifference(Vrt1, Vrt2) & Val1 = Val2) => VVAR4 = VVAR5)).
tff('difference1', axiom, ![Vrt1: vRawTable, VVAR2: vOptTable, VVAR3: vOptTable, VVAR1: vTable, Val1: vAList, VVAR0: vTable, Val2: vAList, Vrt2: vRawTable] : ((VVAR0 = vtable(Val1, Vrt1) & VVAR1 = vtable(Val2, Vrt2) & VVAR2 = vdifference(VVAR0, VVAR1) & VVAR3 = vnoTable & Val1 != Val2) => VVAR2 = VVAR3)).
tff('difference-INV', axiom, ![VVAR0: vOptTable, VTable0: vTable, VTable1: vTable, VRESULT] : ((VVAR0 = vdifference(VTable0, VTable1) & VVAR0 = VRESULT) => (?[VTable1, Vrt1: vRawTable, VVAR5: vOptTable, VVAR2: vTable, VVAR3: vRawTable, VVAR4: vTable, VVAR1: vTable, Val1: vAList, Val2: vAList, VRESULT, VTable0, Vrt2: vRawTable] : ((~VVAR5 = vsomeTable(VVAR4)) | (~VVAR2 = vtable(Val2, Vrt2)) | (~VVAR4 = vtable(Val1, VVAR3)) | (~VVAR1 = vtable(Val1, Vrt1)) | (~VVAR3 = vrawDifference(Vrt1, Vrt2)) | (Val1 = Val2 & VTable0 = VVAR1 & VTable1 = VVAR2 & VRESULT = VVAR5)) | ?[VTable1, Vrt1: vRawTable, VVAR7: vTable, VVAR6: vTable, VVAR8: vOptTable, Val1: vAList, Val2: vAList, VRESULT, VTable0, Vrt2: vRawTable] : ((~VVAR6 = vtable(Val1, Vrt1)) | (~VVAR7 = vtable(Val2, Vrt2)) | (~VVAR8 = vnoTable) | (Val1 != Val2 & VTable0 = VVAR6 & VTable1 = VVAR7 & VRESULT = VVAR8))))).
tff('reduce0', axiom, ![Vt: vTable, VVAR2: vOptConf, VVAR3: vOptConf, VVAR1: vConf, VVAR0: vQuery, Vts: vTStore] : ((VVAR0 = vTvalue(Vt) & VVAR1 = vconf(VVAR0, Vts) & VVAR2 = vreduce(VVAR1) & VVAR3 = vnoConf) => VVAR2 = VVAR3)).
tff('reduce1', axiom, ![Vltn: vOptTable, VVAR5: vQuery, VVAR7: vOptConf, VVAR2: vQuery, VVAR3: vConf, VVAR4: vTable, VVAR1: vTRef, VVAR6: vConf, VVAR8: vOptConf, Vtn: vTName, VVAR0: vOptTable, Vts: vTStore] : ((VVAR8 = vsomeConf(VVAR6) & VVAR1 = vRef(Vtn) & VVAR5 = vTvalue(VVAR4) & VVAR0 = vlookupStore(Vtn, Vts) & VVAR3 = vconf(VVAR2, Vts) & VVAR6 = vconf(VVAR5, Vts) & VVAR4 = vgetSomeTable(Vltn) & VVAR2 = vSelectAllFrom(VVAR1) & VVAR7 = vreduce(VVAR3) & Vltn = VVAR0 & visSomeTable(Vltn)) => VVAR7 = VVAR8)).
tff('reduce2', axiom, ![Vltn: vOptTable, VVAR5: vOptConf, VVAR2: vQuery, VVAR3: vConf, VVAR4: vOptConf, VVAR1: vTRef, Vtn: vTName, VVAR0: vOptTable, Vts: vTStore] : ((VVAR1 = vRef(Vtn) & VVAR5 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR3 = vconf(VVAR2, Vts) & VVAR2 = vSelectAllFrom(VVAR1) & VVAR4 = vreduce(VVAR3) & Vltn = VVAR0 & (~visSomeTable(Vltn))) => VVAR4 = VVAR5)).
tff('reduce3', axiom, ![Vltn: vOptTable, Vpt: vOptRawTable, VVAR5: vConf, VVAR7: vTable, VVAR11: vOptConf, VVAR2: vOptRawTable, VVAR3: vTRef, VVAR10: vOptConf, VVAR4: vQuery, VVAR1: vTable, VVAR6: vRawTable, VVAR8: vQuery, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vts: vTStore, VVAR9: vConf] : ((VVAR3 = vRef(Vtn) & VVAR6 = vgetSomeRawTable(Vpt) & VVAR10 = vreduce(VVAR5) & VVAR0 = vlookupStore(Vtn, Vts) & VVAR9 = vconf(VVAR8, Vts) & VVAR8 = vTvalue(VVAR7) & VVAR5 = vconf(VVAR4, Vts) & VVAR4 = vSelectSomeFrom(Val, VVAR3) & VVAR1 = vgetSomeTable(Vltn) & VVAR7 = vtable(Val, VVAR6) & VVAR2 = vproject(Val, VVAR1) & VVAR11 = vsomeConf(VVAR9) & Vltn = VVAR0 & visSomeTable(Vltn) & Vpt = VVAR2 & visSomeRawTable(Vpt)) => VVAR10 = VVAR11)).
tff('reduce4', axiom, ![Vltn: vOptTable, Vpt: vOptRawTable, VVAR5: vConf, VVAR7: vOptConf, VVAR2: vOptRawTable, VVAR3: vTRef, VVAR4: vQuery, VVAR1: vTable, VVAR6: vOptConf, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vts: vTStore] : ((VVAR3 = vRef(Vtn) & VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR4 = vSelectSomeFrom(Val, VVAR3) & VVAR1 = vgetSomeTable(Vltn) & VVAR2 = vproject(Val, VVAR1) & Vltn = VVAR0 & visSomeTable(Vltn) & Vpt = VVAR2 & (~visSomeRawTable(Vpt))) => VVAR6 = VVAR7)).
tff('reduce5', axiom, ![Vltn: vOptTable, VVAR5: vOptConf, VVAR2: vQuery, VVAR3: vConf, VVAR4: vOptConf, VVAR1: vTRef, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vts: vTStore] : ((VVAR1 = vRef(Vtn) & VVAR5 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR3 = vconf(VVAR2, Vts) & VVAR4 = vreduce(VVAR3) & VVAR2 = vSelectSomeFrom(Val, VVAR1) & Vltn = VVAR0 & (~visSomeTable(Vltn))) => VVAR4 = VVAR5)).
tff('reduce6', axiom, ![Vp: vPred, Vltn: vOptTable, VVAR5: vConf, VVAR7: vQuery, VVAR2: vOptTable, VVAR3: vTRef, VVAR10: vOptConf, VVAR4: vQuery, VVAR1: vTable, VVAR6: vTable, VVAR8: vConf, Vtn: vTName, VVAR0: vOptTable, Vst: vOptTable, Vts: vTStore, VVAR9: vOptConf] : ((VVAR4 = vSelectAllFromWhere(VVAR3, Vp) & VVAR3 = vRef(Vtn) & VVAR9 = vreduce(VVAR5) & VVAR10 = vsomeConf(VVAR8) & VVAR0 = vlookupStore(Vtn, Vts) & VVAR8 = vconf(VVAR7, Vts) & VVAR7 = vTvalue(VVAR6) & VVAR6 = vgetSomeTable(Vst) & VVAR5 = vconf(VVAR4, Vts) & VVAR1 = vgetSomeTable(Vltn) & VVAR2 = vselect(VVAR1, Vp) & Vltn = VVAR0 & visSomeTable(Vltn) & Vst = VVAR2 & visSomeTable(Vst)) => VVAR9 = VVAR10)).
tff('reduce7', axiom, ![Vp: vPred, Vltn: vOptTable, VVAR5: vConf, VVAR7: vOptConf, VVAR2: vOptTable, VVAR3: vTRef, VVAR4: vQuery, VVAR1: vTable, VVAR6: vOptConf, Vtn: vTName, VVAR0: vOptTable, Vst: vOptTable, Vts: vTStore] : ((VVAR4 = vSelectAllFromWhere(VVAR3, Vp) & VVAR3 = vRef(Vtn) & VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR1 = vgetSomeTable(Vltn) & VVAR2 = vselect(VVAR1, Vp) & Vltn = VVAR0 & visSomeTable(Vltn) & Vst = VVAR2 & (~visSomeTable(Vst))) => VVAR6 = VVAR7)).
tff('reduce8', axiom, ![Vp: vPred, Vltn: vOptTable, VVAR5: vOptConf, VVAR2: vQuery, VVAR3: vConf, VVAR4: vOptConf, VVAR1: vTRef, Vtn: vTName, VVAR0: vOptTable, Vts: vTStore] : ((VVAR1 = vRef(Vtn) & VVAR5 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR3 = vconf(VVAR2, Vts) & VVAR2 = vSelectAllFromWhere(VVAR1, Vp) & VVAR4 = vreduce(VVAR3) & Vltn = VVAR0 & (~visSomeTable(Vltn))) => VVAR4 = VVAR5)).
tff('reduce9', axiom, ![Vp: vPred, Vltn: vOptTable, Vpt: vOptRawTable, VVAR5: vTRef, VVAR7: vConf, VVAR13: vOptConf, VVAR11: vConf, VVAR2: vOptTable, VVAR3: vTable, VVAR10: vQuery, VVAR4: vOptRawTable, VVAR1: vTable, VVAR6: vQuery, VVAR8: vRawTable, Vtn: vTName, Val: vAList, VVAR0: vOptTable, VVAR12: vOptConf, Vst: vOptTable, Vts: vTStore, VVAR9: vTable] : ((VVAR12 = vreduce(VVAR7) & VVAR7 = vconf(VVAR6, Vts) & VVAR5 = vRef(Vtn) & VVAR8 = vgetSomeRawTable(Vpt) & VVAR0 = vlookupStore(Vtn, Vts) & VVAR4 = vproject(Val, VVAR3) & VVAR9 = vtable(Val, VVAR8) & VVAR6 = vSelectSomeFromWhere(Val, VVAR5, Vp) & VVAR10 = vTvalue(VVAR9) & VVAR3 = vgetSomeTable(Vst) & VVAR1 = vgetSomeTable(Vltn) & VVAR13 = vsomeConf(VVAR11) & VVAR11 = vconf(VVAR10, Vts) & VVAR2 = vselect(VVAR1, Vp) & Vltn = VVAR0 & visSomeTable(Vltn) & Vst = VVAR2 & visSomeTable(Vst) & Vpt = VVAR4 & visSomeRawTable(Vpt)) => VVAR12 = VVAR13)).
tff('reduce10', axiom, ![Vp: vPred, Vltn: vOptTable, Vpt: vOptRawTable, VVAR5: vTRef, VVAR7: vConf, VVAR2: vOptTable, VVAR3: vTable, VVAR4: vOptRawTable, VVAR1: vTable, VVAR6: vQuery, VVAR8: vOptConf, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vst: vOptTable, Vts: vTStore, VVAR9: vOptConf] : ((VVAR8 = vreduce(VVAR7) & VVAR7 = vconf(VVAR6, Vts) & VVAR5 = vRef(Vtn) & VVAR9 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR4 = vproject(Val, VVAR3) & VVAR6 = vSelectSomeFromWhere(Val, VVAR5, Vp) & VVAR3 = vgetSomeTable(Vst) & VVAR1 = vgetSomeTable(Vltn) & VVAR2 = vselect(VVAR1, Vp) & Vltn = VVAR0 & visSomeTable(Vltn) & Vst = VVAR2 & visSomeTable(Vst) & Vpt = VVAR4 & (~visSomeRawTable(Vpt))) => VVAR8 = VVAR9)).
tff('reduce11', axiom, ![Vp: vPred, Vltn: vOptTable, VVAR5: vConf, VVAR7: vOptConf, VVAR2: vOptTable, VVAR3: vTRef, VVAR4: vQuery, VVAR1: vTable, VVAR6: vOptConf, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vst: vOptTable, Vts: vTStore] : ((VVAR3 = vRef(Vtn) & VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR4 = vSelectSomeFromWhere(Val, VVAR3, Vp) & VVAR5 = vconf(VVAR4, Vts) & VVAR1 = vgetSomeTable(Vltn) & VVAR2 = vselect(VVAR1, Vp) & Vltn = VVAR0 & visSomeTable(Vltn) & Vst = VVAR2 & (~visSomeTable(Vst))) => VVAR6 = VVAR7)).
tff('reduce12', axiom, ![Vp: vPred, Vltn: vOptTable, VVAR5: vOptConf, VVAR2: vQuery, VVAR3: vConf, VVAR4: vOptConf, VVAR1: vTRef, Vtn: vTName, Val: vAList, VVAR0: vOptTable, Vts: vTStore] : ((VVAR1 = vRef(Vtn) & VVAR5 = vnoConf & VVAR0 = vlookupStore(Vtn, Vts) & VVAR3 = vconf(VVAR2, Vts) & VVAR2 = vSelectSomeFromWhere(Val, VVAR1, Vp) & VVAR4 = vreduce(VVAR3) & Vltn = VVAR0 & (~visSomeTable(Vltn))) => VVAR4 = VVAR5)).
tff('reduce13', axiom, ![VVAR5: vTable, VVAR7: vConf, Vt1: vTable, Vtunion: vOptTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vQuery, VVAR8: vOptConf, VVAR0: vOptTable, Vts: vTStore, VVAR9: vOptConf] : ((VVAR2 = vTvalue(Vt2) & VVAR7 = vconf(VVAR6, Vts) & VVAR9 = vsomeConf(VVAR7) & VVAR8 = vreduce(VVAR4) & VVAR0 = vunion(Vt1, Vt2) & VVAR5 = vgetSomeTable(Vtunion) & VVAR6 = vTvalue(VVAR5) & VVAR4 = vconf(VVAR3, Vts) & VVAR3 = vUnion(VVAR1, VVAR2) & VVAR1 = vTvalue(Vt1) & Vtunion = VVAR0 & visSomeTable(Vtunion)) => VVAR8 = VVAR9)).
tff('reduce14', axiom, ![VVAR5: vOptConf, Vt1: vTable, Vtunion: vOptTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vOptConf, VVAR0: vOptTable, Vts: vTStore] : ((VVAR2 = vTvalue(Vt2) & VVAR6 = vnoConf & VVAR5 = vreduce(VVAR4) & VVAR0 = vunion(Vt1, Vt2) & VVAR4 = vconf(VVAR3, Vts) & VVAR3 = vUnion(VVAR1, VVAR2) & VVAR1 = vTvalue(Vt1) & Vtunion = VVAR0 & (~visSomeTable(Vtunion))) => VVAR5 = VVAR6)).
tff('reduce15', axiom, ![Vt: vTable, VVAR5: vConf, VVAR7: vQuery, VVAR11: vOptConf, VVAR3: vQuery, VVAR10: vOptConf, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, Vts: vTStore, VVAR9: vConf, Vq2: vQuery, Vq2reduce: vOptConf] : ((VVAR7 = vgetQuery(VVAR6) & VVAR10 = vreduce(VVAR5) & VVAR8 = vUnion(VVAR3, VVAR7) & VVAR3 = vTvalue(Vt) & VVAR9 = vconf(VVAR8, Vts) & VVAR6 = vgetSomeConf(Vq2reduce) & VVAR5 = vconf(VVAR4, Vts) & VVAR4 = vUnion(VVAR3, Vq2) & VVAR0 = vconf(Vq2, Vts) & VVAR11 = vsomeConf(VVAR9) & VVAR1 = vreduce(VVAR0) & Vq2reduce = VVAR1 & visSomeConf(Vq2reduce) & ![VVAR2: vQuery, Vt20: vTable, Vq2] : ((~VVAR2 = vTvalue(Vt20)) | Vq2 != VVAR2)) => VVAR10 = VVAR11)).
tff('reduce16', axiom, ![Vt: vTable, VVAR5: vConf, VVAR7: vOptConf, VVAR3: vQuery, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vOptConf, VVAR0: vConf, Vts: vTStore, Vq2: vQuery, Vq2reduce: vOptConf] : ((VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR3 = vTvalue(Vt) & VVAR5 = vconf(VVAR4, Vts) & VVAR4 = vUnion(VVAR3, Vq2) & VVAR0 = vconf(Vq2, Vts) & VVAR1 = vreduce(VVAR0) & Vq2reduce = VVAR1 & (~visSomeConf(Vq2reduce)) & ![VVAR2: vQuery, Vt20: vTable, Vq2] : ((~VVAR2 = vTvalue(Vt20)) | Vq2 != VVAR2)) => VVAR6 = VVAR7)).
tff('reduce17', axiom, ![Vq1: vQuery, VVAR5: vQuery, Vq1reduce: vOptConf, VVAR7: vConf, VVAR11: vOptConf, VVAR10: vConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, VVAR12: vOptConf, Vts: vTStore, VVAR9: vQuery, Vq2: vQuery] : ((VVAR0 = vconf(Vq1, Vts) & VVAR11 = vreduce(VVAR6) & VVAR5 = vUnion(Vq1, Vq2) & VVAR8 = vgetQuery(VVAR7) & VVAR6 = vconf(VVAR5, Vts) & VVAR10 = vconf(VVAR9, Vts) & VVAR12 = vsomeConf(VVAR10) & VVAR9 = vUnion(VVAR8, Vq2) & VVAR1 = vreduce(VVAR0) & VVAR7 = vgetSomeConf(Vq1reduce) & Vq1reduce = VVAR1 & visSomeConf(Vq1reduce) & (![VVAR2: vQuery, Vt10: vTable, Vq1] : ((~VVAR2 = vTvalue(Vt10)) | Vq1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vq2] : ((~VVAR3 = vTvalue(Vt20)) | Vq2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vq1] : ((~VVAR4 = vTvalue(Vt0)) | Vq1 != VVAR4)) => VVAR11 = VVAR12)).
tff('reduce18', axiom, ![Vq1: vQuery, VVAR5: vQuery, Vq1reduce: vOptConf, VVAR7: vOptConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vOptConf, VVAR0: vConf, Vts: vTStore, Vq2: vQuery] : ((VVAR0 = vconf(Vq1, Vts) & VVAR7 = vreduce(VVAR6) & VVAR8 = vnoConf & VVAR5 = vUnion(Vq1, Vq2) & VVAR6 = vconf(VVAR5, Vts) & VVAR1 = vreduce(VVAR0) & Vq1reduce = VVAR1 & (~visSomeConf(Vq1reduce)) & (![VVAR2: vQuery, Vt10: vTable, Vq1] : ((~VVAR2 = vTvalue(Vt10)) | Vq1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vq2] : ((~VVAR3 = vTvalue(Vt20)) | Vq2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vq1] : ((~VVAR4 = vTvalue(Vt0)) | Vq1 != VVAR4)) => VVAR7 = VVAR8)).
tff('reduce19', axiom, ![Vtintersection: vOptTable, VVAR5: vTable, VVAR7: vConf, Vt1: vTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vQuery, VVAR8: vOptConf, VVAR0: vOptTable, Vts: vTStore, VVAR9: vOptConf] : ((VVAR2 = vTvalue(Vt2) & VVAR7 = vconf(VVAR6, Vts) & VVAR9 = vsomeConf(VVAR7) & VVAR3 = vIntersection(VVAR1, VVAR2) & VVAR5 = vgetSomeTable(Vtintersection) & VVAR8 = vreduce(VVAR4) & VVAR0 = vintersect(Vt1, Vt2) & VVAR6 = vTvalue(VVAR5) & VVAR4 = vconf(VVAR3, Vts) & VVAR1 = vTvalue(Vt1) & Vtintersection = VVAR0 & visSomeTable(Vtintersection)) => VVAR8 = VVAR9)).
tff('reduce20', axiom, ![Vtintersection: vOptTable, VVAR5: vOptConf, Vt1: vTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vOptConf, VVAR0: vOptTable, Vts: vTStore] : ((VVAR2 = vTvalue(Vt2) & VVAR6 = vnoConf & VVAR3 = vIntersection(VVAR1, VVAR2) & VVAR5 = vreduce(VVAR4) & VVAR0 = vintersect(Vt1, Vt2) & VVAR4 = vconf(VVAR3, Vts) & VVAR1 = vTvalue(Vt1) & Vtintersection = VVAR0 & (~visSomeTable(Vtintersection))) => VVAR5 = VVAR6)).
tff('reduce21', axiom, ![Vsql2reduce: vOptConf, Vt: vTable, VVAR5: vConf, VVAR7: vQuery, VVAR11: vOptConf, VVAR3: vQuery, VVAR10: vOptConf, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, Vts: vTStore, VVAR9: vConf, Vsql2: vQuery] : ((VVAR7 = vgetQuery(VVAR6) & VVAR10 = vreduce(VVAR5) & VVAR3 = vTvalue(Vt) & VVAR9 = vconf(VVAR8, Vts) & VVAR4 = vIntersection(VVAR3, Vsql2) & VVAR6 = vgetSomeConf(Vsql2reduce) & VVAR0 = vconf(Vsql2, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR8 = vIntersection(VVAR3, VVAR7) & VVAR11 = vsomeConf(VVAR9) & VVAR1 = vreduce(VVAR0) & Vsql2reduce = VVAR1 & visSomeConf(Vsql2reduce) & ![VVAR2: vQuery, Vt20: vTable, Vsql2] : ((~VVAR2 = vTvalue(Vt20)) | Vsql2 != VVAR2)) => VVAR10 = VVAR11)).
tff('reduce22', axiom, ![Vsql2reduce: vOptConf, Vt: vTable, VVAR5: vConf, VVAR7: vOptConf, VVAR3: vQuery, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vOptConf, VVAR0: vConf, Vts: vTStore, Vsql2: vQuery] : ((VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR3 = vTvalue(Vt) & VVAR4 = vIntersection(VVAR3, Vsql2) & VVAR0 = vconf(Vsql2, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR1 = vreduce(VVAR0) & Vsql2reduce = VVAR1 & (~visSomeConf(Vsql2reduce)) & ![VVAR2: vQuery, Vt20: vTable, Vsql2] : ((~VVAR2 = vTvalue(Vt20)) | Vsql2 != VVAR2)) => VVAR6 = VVAR7)).
tff('reduce23', axiom, ![VVAR5: vQuery, Vsql1reduce: vOptConf, Vsql1: vQuery, VVAR7: vConf, VVAR11: vOptConf, VVAR10: vConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, VVAR12: vOptConf, Vts: vTStore, VVAR9: vQuery, Vsql2: vQuery] : ((VVAR11 = vreduce(VVAR6) & VVAR0 = vconf(Vsql1, Vts) & VVAR5 = vIntersection(Vsql1, Vsql2) & VVAR7 = vgetSomeConf(Vsql1reduce) & VVAR9 = vIntersection(VVAR8, Vsql2) & VVAR8 = vgetQuery(VVAR7) & VVAR6 = vconf(VVAR5, Vts) & VVAR10 = vconf(VVAR9, Vts) & VVAR12 = vsomeConf(VVAR10) & VVAR1 = vreduce(VVAR0) & Vsql1reduce = VVAR1 & visSomeConf(Vsql1reduce) & (![VVAR2: vQuery, Vt10: vTable, Vsql1] : ((~VVAR2 = vTvalue(Vt10)) | Vsql1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vsql2] : ((~VVAR3 = vTvalue(Vt20)) | Vsql2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vsql1] : ((~VVAR4 = vTvalue(Vt0)) | Vsql1 != VVAR4)) => VVAR11 = VVAR12)).
tff('reduce24', axiom, ![VVAR5: vQuery, Vsql1reduce: vOptConf, Vsql1: vQuery, VVAR7: vOptConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vOptConf, VVAR0: vConf, Vts: vTStore, Vsql2: vQuery] : ((VVAR7 = vreduce(VVAR6) & VVAR0 = vconf(Vsql1, Vts) & VVAR8 = vnoConf & VVAR5 = vIntersection(Vsql1, Vsql2) & VVAR6 = vconf(VVAR5, Vts) & VVAR1 = vreduce(VVAR0) & Vsql1reduce = VVAR1 & (~visSomeConf(Vsql1reduce)) & (![VVAR2: vQuery, Vt10: vTable, Vsql1] : ((~VVAR2 = vTvalue(Vt10)) | Vsql1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vsql2] : ((~VVAR3 = vTvalue(Vt20)) | Vsql2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vsql1] : ((~VVAR4 = vTvalue(Vt0)) | Vsql1 != VVAR4)) => VVAR7 = VVAR8)).
tff('reduce25', axiom, ![Vtdifference: vOptTable, VVAR5: vTable, VVAR7: vConf, Vt1: vTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vQuery, VVAR8: vOptConf, VVAR0: vOptTable, Vts: vTStore, VVAR9: vOptConf] : ((VVAR2 = vTvalue(Vt2) & VVAR7 = vconf(VVAR6, Vts) & VVAR9 = vsomeConf(VVAR7) & VVAR8 = vreduce(VVAR4) & VVAR3 = vDifference(VVAR1, VVAR2) & VVAR0 = vdifference(Vt1, Vt2) & VVAR5 = vgetSomeTable(Vtdifference) & VVAR6 = vTvalue(VVAR5) & VVAR4 = vconf(VVAR3, Vts) & VVAR1 = vTvalue(Vt1) & Vtdifference = VVAR0 & visSomeTable(Vtdifference)) => VVAR8 = VVAR9)).
tff('reduce26', axiom, ![Vtdifference: vOptTable, VVAR5: vOptConf, Vt1: vTable, Vt2: vTable, VVAR2: vQuery, VVAR3: vQuery, VVAR4: vConf, VVAR1: vQuery, VVAR6: vOptConf, VVAR0: vOptTable, Vts: vTStore] : ((VVAR2 = vTvalue(Vt2) & VVAR6 = vnoConf & VVAR5 = vreduce(VVAR4) & VVAR3 = vDifference(VVAR1, VVAR2) & VVAR0 = vdifference(Vt1, Vt2) & VVAR4 = vconf(VVAR3, Vts) & VVAR1 = vTvalue(Vt1) & Vtdifference = VVAR0 & (~visSomeTable(Vtdifference))) => VVAR5 = VVAR6)).
tff('reduce27', axiom, ![Vsql2reduce: vOptConf, Vt: vTable, VVAR5: vConf, VVAR7: vQuery, VVAR11: vOptConf, VVAR3: vQuery, VVAR10: vOptConf, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, Vts: vTStore, VVAR9: vConf, Vsql2: vQuery] : ((VVAR7 = vgetQuery(VVAR6) & VVAR10 = vreduce(VVAR5) & VVAR3 = vTvalue(Vt) & VVAR9 = vconf(VVAR8, Vts) & VVAR4 = vDifference(VVAR3, Vsql2) & VVAR6 = vgetSomeConf(Vsql2reduce) & VVAR0 = vconf(Vsql2, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR8 = vDifference(VVAR3, VVAR7) & VVAR11 = vsomeConf(VVAR9) & VVAR1 = vreduce(VVAR0) & Vsql2reduce = VVAR1 & visSomeConf(Vsql2reduce) & ![VVAR2: vQuery, Vt20: vTable, Vsql2] : ((~VVAR2 = vTvalue(Vt20)) | Vsql2 != VVAR2)) => VVAR10 = VVAR11)).
tff('reduce28', axiom, ![Vsql2reduce: vOptConf, Vt: vTable, VVAR5: vConf, VVAR7: vOptConf, VVAR3: vQuery, VVAR4: vQuery, VVAR1: vOptConf, VVAR6: vOptConf, VVAR0: vConf, Vts: vTStore, Vsql2: vQuery] : ((VVAR6 = vreduce(VVAR5) & VVAR7 = vnoConf & VVAR3 = vTvalue(Vt) & VVAR4 = vDifference(VVAR3, Vsql2) & VVAR0 = vconf(Vsql2, Vts) & VVAR5 = vconf(VVAR4, Vts) & VVAR1 = vreduce(VVAR0) & Vsql2reduce = VVAR1 & (~visSomeConf(Vsql2reduce)) & ![VVAR2: vQuery, Vt20: vTable, Vsql2] : ((~VVAR2 = vTvalue(Vt20)) | Vsql2 != VVAR2)) => VVAR6 = VVAR7)).
tff('reduce29', axiom, ![VVAR5: vQuery, Vsql1reduce: vOptConf, Vsql1: vQuery, VVAR7: vConf, VVAR11: vOptConf, VVAR10: vConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vQuery, VVAR0: vConf, VVAR12: vOptConf, Vts: vTStore, VVAR9: vQuery, Vsql2: vQuery] : ((VVAR11 = vreduce(VVAR6) & VVAR5 = vDifference(Vsql1, Vsql2) & VVAR0 = vconf(Vsql1, Vts) & VVAR7 = vgetSomeConf(Vsql1reduce) & VVAR9 = vDifference(VVAR8, Vsql2) & VVAR8 = vgetQuery(VVAR7) & VVAR6 = vconf(VVAR5, Vts) & VVAR10 = vconf(VVAR9, Vts) & VVAR12 = vsomeConf(VVAR10) & VVAR1 = vreduce(VVAR0) & Vsql1reduce = VVAR1 & visSomeConf(Vsql1reduce) & (![VVAR2: vQuery, Vt10: vTable, Vsql1] : ((~VVAR2 = vTvalue(Vt10)) | Vsql1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vsql2] : ((~VVAR3 = vTvalue(Vt20)) | Vsql2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vsql1] : ((~VVAR4 = vTvalue(Vt0)) | Vsql1 != VVAR4)) => VVAR11 = VVAR12)).
tff('reduce30', axiom, ![VVAR5: vQuery, Vsql1reduce: vOptConf, Vsql1: vQuery, VVAR7: vOptConf, VVAR1: vOptConf, VVAR6: vConf, VVAR8: vOptConf, VVAR0: vConf, Vts: vTStore, Vsql2: vQuery] : ((VVAR7 = vreduce(VVAR6) & VVAR5 = vDifference(Vsql1, Vsql2) & VVAR0 = vconf(Vsql1, Vts) & VVAR8 = vnoConf & VVAR6 = vconf(VVAR5, Vts) & VVAR1 = vreduce(VVAR0) & Vsql1reduce = VVAR1 & (~visSomeConf(Vsql1reduce)) & (![VVAR2: vQuery, Vt10: vTable, Vsql1] : ((~VVAR2 = vTvalue(Vt10)) | Vsql1 != VVAR2) | ![VVAR3: vQuery, Vt20: vTable, Vsql2] : ((~VVAR3 = vTvalue(Vt20)) | Vsql2 != VVAR3)) & ![VVAR4: vQuery, Vt0: vTable, Vsql1] : ((~VVAR4 = vTvalue(Vt0)) | Vsql1 != VVAR4)) => VVAR7 = VVAR8)).
tff('reduce-INV', axiom, ![VVAR0: vOptConf, VConf0: vConf, VRESULT] : ((VVAR0 = vreduce(VConf0) & VVAR0 = VRESULT) => (?[Vt: vTable, VConf0, VVAR2: vConf, VVAR3: vOptConf, VVAR1: vQuery, VRESULT, Vts: vTStore] : ((~VVAR1 = vTvalue(Vt)) | (~VVAR2 = vconf(VVAR1, Vts)) | (~VVAR3 = vnoConf) | (VConf0 = VVAR2 & VRESULT = VVAR3)) | ?[Vltn: vOptTable, VVAR5: vTRef, VVAR7: vConf, VConf0, VVAR11: vOptConf, VVAR10: vConf, VVAR4: vOptTable, VVAR6: vQuery, VVAR8: vTable, Vtn: vTName, VRESULT, Vts: vTStore, VVAR9: vQuery] : ((~VVAR7 = vconf(VVAR6, Vts)) | (~VVAR5 = vRef(Vtn)) | (~VVAR4 = vlookupStore(Vtn, Vts)) | (~VVAR9 = vTvalue(VVAR8)) | (~VVAR10 = vconf(VVAR9, Vts)) | (~VVAR8 = vgetSomeTable(Vltn)) | (~VVAR11 = vsomeConf(VVAR10)) | (~VVAR6 = vSelectAllFrom(VVAR5)) | (Vltn = VVAR4 & visSomeTable(Vltn) & VConf0 = VVAR7 & VRESULT = VVAR11)) | ?[Vltn: vOptTable, VVAR14: vQuery, VConf0, VVAR13: vTRef, VVAR15: vConf, Vtn: vTName, VVAR12: vOptTable, VRESULT, Vts: vTStore, VVAR16: vOptConf] : ((~VVAR13 = vRef(Vtn)) | (~VVAR14 = vSelectAllFrom(VVAR13)) | (~VVAR16 = vnoConf) | (~VVAR12 = vlookupStore(Vtn, Vts)) | (~VVAR15 = vconf(VVAR14, Vts)) | (Vltn = VVAR12 & (~visSomeTable(Vltn)) & VConf0 = VVAR15 & VRESULT = VVAR16)) | ?[VVAR26: vConf, VVAR25: vQuery, Vltn: vOptTable, Vpt: vOptRawTable, VVAR17: vOptTable, VVAR21: vQuery, VVAR22: vConf, VVAR20: vTRef, VVAR24: vTable, VVAR23: vRawTable, VConf0, VVAR27: vOptConf, Vtn: vTName, Val: vAList, VRESULT, VVAR18: vTable, VVAR19: vOptRawTable, Vts: vTStore] : ((~VVAR22 = vconf(VVAR21, Vts)) | (~VVAR20 = vRef(Vtn)) | (~VVAR26 = vconf(VVAR25, Vts)) | (~VVAR23 = vgetSomeRawTable(Vpt)) | (~VVAR24 = vtable(Val, VVAR23)) | (~VVAR17 = vlookupStore(Vtn, Vts)) | (~VVAR21 = vSelectSomeFrom(Val, VVAR20)) | (~VVAR19 = vproject(Val, VVAR18)) | (~VVAR18 = vgetSomeTable(Vltn)) | (~VVAR27 = vsomeConf(VVAR26)) | (~VVAR25 = vTvalue(VVAR24)) | (Vltn = VVAR17 & visSomeTable(Vltn) & Vpt = VVAR19 & visSomeRawTable(Vpt) & VConf0 = VVAR22 & VRESULT = VVAR27)) | ?[Vltn: vOptTable, VVAR34: vOptConf, Vpt: vOptRawTable, VVAR32: vQuery, VVAR33: vConf, VConf0, Vtn: vTName, VVAR30: vOptRawTable, Val: vAList, VVAR28: vOptTable, VRESULT, VVAR31: vTRef, Vts: vTStore, VVAR29: vTable] : ((~VVAR31 = vRef(Vtn)) | (~VVAR32 = vSelectSomeFrom(Val, VVAR31)) | (~VVAR34 = vnoConf) | (~VVAR28 = vlookupStore(Vtn, Vts)) | (~VVAR29 = vgetSomeTable(Vltn)) | (~VVAR33 = vconf(VVAR32, Vts)) | (~VVAR30 = vproject(Val, VVAR29)) | (Vltn = VVAR28 & visSomeTable(Vltn) & Vpt = VVAR30 & (~visSomeRawTable(Vpt)) & VConf0 = VVAR33 & VRESULT = VVAR34)) | ?[Vltn: vOptTable, VConf0, VVAR39: vOptConf, Vtn: vTName, VVAR35: vOptTable, Val: vAList, VRESULT, VVAR36: vTRef, Vts: vTStore, VVAR37: vQuery, VVAR38: vConf] : ((~VVAR37 = vSelectSomeFrom(Val, VVAR36)) | (~VVAR36 = vRef(Vtn)) | (~VVAR39 = vnoConf) | (~VVAR35 = vlookupStore(Vtn, Vts)) | (~VVAR38 = vconf(VVAR37, Vts)) | (Vltn = VVAR35 & (~visSomeTable(Vltn)) & VConf0 = VVAR38 & VRESULT = VVAR39)) | ?[Vp: vPred, Vltn: vOptTable, VConf0, VVAR48: vConf, VVAR40: vOptTable, VVAR49: vOptConf, VVAR46: vTable, VVAR41: vTable, VVAR44: vQuery, Vtn: vTName, VVAR43: vTRef, Vst: vOptTable, VRESULT, VVAR47: vQuery, Vts: vTStore, VVAR45: vConf, VVAR42: vOptTable] : ((~VVAR48 = vconf(VVAR47, Vts)) | (~VVAR43 = vRef(Vtn)) | (~VVAR40 = vlookupStore(Vtn, Vts)) | (~VVAR45 = vconf(VVAR44, Vts)) | (~VVAR46 = vgetSomeTable(Vst)) | (~VVAR41 = vgetSomeTable(Vltn)) | (~VVAR49 = vsomeConf(VVAR48)) | (~VVAR47 = vTvalue(VVAR46)) | (~VVAR42 = vselect(VVAR41, Vp)) | (~VVAR44 = vSelectAllFromWhere(VVAR43, Vp)) | (Vltn = VVAR40 & visSomeTable(Vltn) & Vst = VVAR42 & visSomeTable(Vst) & VConf0 = VVAR45 & VRESULT = VVAR49)) | ?[Vp: vPred, Vltn: vOptTable, VVAR53: vTRef, VConf0, VVAR52: vOptTable, VVAR50: vOptTable, VVAR55: vConf, Vtn: vTName, VVAR51: vTable, Vst: vOptTable, VRESULT, VVAR54: vQuery, Vts: vTStore, VVAR56: vOptConf] : ((~VVAR55 = vconf(VVAR54, Vts)) | (~VVAR53 = vRef(Vtn)) | (~VVAR56 = vnoConf) | (~VVAR50 = vlookupStore(Vtn, Vts)) | (~VVAR54 = vSelectAllFromWhere(VVAR53, Vp)) | (~VVAR52 = vselect(VVAR51, Vp)) | (~VVAR51 = vgetSomeTable(Vltn)) | (Vltn = VVAR50 & visSomeTable(Vltn) & Vst = VVAR52 & (~visSomeTable(Vst)) & VConf0 = VVAR55 & VRESULT = VVAR56)) | ?[Vp: vPred, Vltn: vOptTable, VVAR60: vConf, VVAR61: vOptConf, VConf0, Vtn: vTName, VVAR59: vQuery, VRESULT, Vts: vTStore, VVAR57: vOptTable, VVAR58: vTRef] : ((~VVAR58 = vRef(Vtn)) | (~VVAR61 = vnoConf) | (~VVAR57 = vlookupStore(Vtn, Vts)) | (~VVAR59 = vSelectAllFromWhere(VVAR58, Vp)) | (~VVAR60 = vconf(VVAR59, Vts)) | (Vltn = VVAR57 & (~visSomeTable(Vltn)) & VConf0 = VVAR60 & VRESULT = VVAR61)) | ?[Vp: vPred, VVAR65: vTable, Vltn: vOptTable, VVAR66: vOptRawTable, VVAR71: vTable, Vpt: vOptRawTable, VVAR63: vTable, VVAR62: vOptTable, VConf0, VVAR70: vRawTable, VVAR73: vConf, VVAR68: vQuery, Vtn: vTName, VVAR74: vOptConf, VVAR72: vQuery, Val: vAList, Vst: vOptTable, VRESULT, VVAR69: vConf, Vts: vTStore, VVAR67: vTRef, VVAR64: vOptTable] : ((~VVAR67 = vRef(Vtn)) | (~VVAR70 = vgetSomeRawTable(Vpt)) | (~VVAR62 = vlookupStore(Vtn, Vts)) | (~VVAR66 = vproject(Val, VVAR65)) | (~VVAR64 = vselect(VVAR63, Vp)) | (~VVAR65 = vgetSomeTable(Vst)) | (~VVAR72 = vTvalue(VVAR71)) | (~VVAR74 = vsomeConf(VVAR73)) | (~VVAR63 = vgetSomeTable(Vltn)) | (~VVAR68 = vSelectSomeFromWhere(Val, VVAR67, Vp)) | (~VVAR69 = vconf(VVAR68, Vts)) | (~VVAR71 = vtable(Val, VVAR70)) | (~VVAR73 = vconf(VVAR72, Vts)) | (Vltn = VVAR62 & visSomeTable(Vltn) & Vst = VVAR64 & visSomeTable(Vst) & Vpt = VVAR66 & visSomeRawTable(Vpt) & VConf0 = VVAR69 & VRESULT = VVAR74)) | ?[Vp: vPred, Vltn: vOptTable, Vpt: vOptRawTable, VVAR77: vOptTable, VVAR80: vTRef, VVAR79: vOptRawTable, VVAR75: vOptTable, VConf0, VVAR81: vQuery, VVAR82: vConf, VVAR76: vTable, Vtn: vTName, Val: vAList, Vst: vOptTable, VRESULT, VVAR83: vOptConf, VVAR78: vTable, Vts: vTStore] : ((~VVAR80 = vRef(Vtn)) | (~VVAR82 = vconf(VVAR81, Vts)) | (~VVAR83 = vnoConf) | (~VVAR75 = vlookupStore(Vtn, Vts)) | (~VVAR81 = vSelectSomeFromWhere(Val, VVAR80, Vp)) | (~VVAR78 = vgetSomeTable(Vst)) | (~VVAR76 = vgetSomeTable(Vltn)) | (~VVAR79 = vproject(Val, VVAR78)) | (~VVAR77 = vselect(VVAR76, Vp)) | (Vltn = VVAR75 & visSomeTable(Vltn) & Vst = VVAR77 & visSomeTable(Vst) & Vpt = VVAR79 & (~visSomeRawTable(Vpt)) & VConf0 = VVAR82 & VRESULT = VVAR83)) | ?[Vp: vPred, Vltn: vOptTable, VConf0, VVAR90: vOptConf, VVAR84: vOptTable, VVAR87: vTRef, Vtn: vTName, Val: vAList, VVAR85: vTable, Vst: vOptTable, VRESULT, Vts: vTStore, VVAR88: vQuery, VVAR86: vOptTable, VVAR89: vConf] : ((~VVAR87 = vRef(Vtn)) | (~VVAR90 = vnoConf) | (~VVAR84 = vlookupStore(Vtn, Vts)) | (~VVAR88 = vSelectSomeFromWhere(Val, VVAR87, Vp)) | (~VVAR85 = vgetSomeTable(Vltn)) | (~VVAR89 = vconf(VVAR88, Vts)) | (~VVAR86 = vselect(VVAR85, Vp)) | (Vltn = VVAR84 & visSomeTable(Vltn) & Vst = VVAR86 & (~visSomeTable(Vst)) & VConf0 = VVAR89 & VRESULT = VVAR90)) | ?[VVAR92: vTRef, Vp: vPred, Vltn: vOptTable, VVAR94: vConf, VVAR91: vOptTable, VConf0, Vtn: vTName, Val: vAList, VVAR95: vOptConf, VRESULT, VVAR93: vQuery, Vts: vTStore] : ((~VVAR92 = vRef(Vtn)) | (~VVAR95 = vnoConf) | (~VVAR94 = vconf(VVAR93, Vts)) | (~VVAR91 = vlookupStore(Vtn, Vts)) | (~VVAR93 = vSelectSomeFromWhere(Val, VVAR92, Vp)) | (Vltn = VVAR91 & (~visSomeTable(Vltn)) & VConf0 = VVAR94 & VRESULT = VVAR95)) | ?[VVAR100: vConf, VVAR97: vQuery, VVAR96: vOptTable, VVAR98: vQuery, Vt1: vTable, Vtunion: vOptTable, VConf0, VVAR104: vOptConf, Vt2: vTable, VVAR103: vConf, VVAR99: vQuery, VVAR102: vQuery, VRESULT, Vts: vTStore, VVAR101: vTable] : ((~VVAR98 = vTvalue(Vt2)) | (~VVAR100 = vconf(VVAR99, Vts)) | (~VVAR96 = vunion(Vt1, Vt2)) | (~VVAR102 = vTvalue(VVAR101)) | (~VVAR101 = vgetSomeTable(Vtunion)) | (~VVAR103 = vconf(VVAR102, Vts)) | (~VVAR104 = vsomeConf(VVAR103)) | (~VVAR97 = vTvalue(Vt1)) | (~VVAR99 = vUnion(VVAR97, VVAR98)) | (Vtunion = VVAR96 & visSomeTable(Vtunion) & VConf0 = VVAR100 & VRESULT = VVAR104)) | ?[VVAR105: vOptTable, VVAR107: vQuery, VVAR108: vQuery, Vt1: vTable, Vtunion: vOptTable, VConf0, Vt2: vTable, VVAR110: vOptConf, VVAR106: vQuery, VRESULT, Vts: vTStore, VVAR109: vConf] : ((~VVAR107 = vTvalue(Vt2)) | (~VVAR109 = vconf(VVAR108, Vts)) | (~VVAR110 = vnoConf) | (~VVAR105 = vunion(Vt1, Vt2)) | (~VVAR108 = vUnion(VVAR106, VVAR107)) | (~VVAR106 = vTvalue(Vt1)) | (Vtunion = VVAR105 & (~visSomeTable(Vtunion)) & VConf0 = VVAR109 & VRESULT = VVAR110)) | ?[VVAR115: vQuery, VVAR119: vQuery, Vt: vTable, VVAR111: vConf, VConf0, VVAR120: vConf, VVAR118: vQuery, VVAR114: vQuery, VRESULT, Vts: vTStore, VVAR116: vConf, VVAR112: vOptConf, VVAR121: vOptConf, Vq2: vQuery, VVAR117: vConf, Vq2reduce: vOptConf] : ((~VVAR112 = vreduce(VVAR111)) | (~VVAR114 = vTvalue(Vt)) | (~VVAR119 = vUnion(VVAR114, VVAR118)) | (~VVAR121 = vsomeConf(VVAR120)) | (~VVAR117 = vgetSomeConf(Vq2reduce)) | (~VVAR118 = vgetQuery(VVAR117)) | (~VVAR120 = vconf(VVAR119, Vts)) | (~VVAR111 = vconf(Vq2, Vts)) | (~VVAR116 = vconf(VVAR115, Vts)) | (~VVAR115 = vUnion(VVAR114, Vq2)) | (Vq2reduce = VVAR112 & visSomeConf(Vq2reduce) & ![VVAR113: vQuery, Vt20: vTable, Vq2] : ((~VVAR113 = vTvalue(Vt20)) | Vq2 != VVAR113) & VConf0 = VVAR116 & VRESULT = VVAR121)) | ?[Vt: vTable, VVAR123: vOptConf, VVAR127: vConf, VVAR122: vConf, VConf0, VVAR128: vOptConf, VRESULT, VVAR125: vQuery, Vts: vTStore, VVAR126: vQuery, Vq2: vQuery, Vq2reduce: vOptConf] : ((~VVAR128 = vnoConf) | (~VVAR125 = vTvalue(Vt)) | (~VVAR126 = vUnion(VVAR125, Vq2)) | (~VVAR122 = vconf(Vq2, Vts)) | (~VVAR127 = vconf(VVAR126, Vts)) | (~VVAR123 = vreduce(VVAR122)) | (Vq2reduce = VVAR123 & (~visSomeConf(Vq2reduce)) & ![VVAR124: vQuery, Vt20: vTable, Vq2] : ((~VVAR124 = vTvalue(Vt20)) | Vq2 != VVAR124) & VConf0 = VVAR127 & VRESULT = VVAR128)) | ?[VVAR140: vOptConf, VVAR129: vConf, Vq1: vQuery, VVAR135: vConf, VVAR134: vQuery, Vq1reduce: vOptConf, VConf0, VVAR138: vQuery, VVAR139: vConf, VRESULT, Vts: vTStore, VVAR130: vOptConf, Vq2: vQuery, VVAR136: vConf, VVAR137: vQuery] : ((~VVAR129 = vconf(Vq1, Vts)) | (~VVAR138 = vUnion(VVAR137, Vq2)) | (~VVAR134 = vUnion(Vq1, Vq2)) | (~VVAR130 = vreduce(VVAR129)) | (~VVAR137 = vgetQuery(VVAR136)) | (~VVAR135 = vconf(VVAR134, Vts)) | (~VVAR139 = vconf(VVAR138, Vts)) | (~VVAR140 = vsomeConf(VVAR139)) | (~VVAR136 = vgetSomeConf(Vq1reduce)) | (Vq1reduce = VVAR130 & visSomeConf(Vq1reduce) & (![VVAR131: vQuery, Vt10: vTable, Vq1] : ((~VVAR131 = vTvalue(Vt10)) | Vq1 != VVAR131) | ![VVAR132: vQuery, Vt20: vTable, Vq2] : ((~VVAR132 = vTvalue(Vt20)) | Vq2 != VVAR132)) & ![VVAR133: vQuery, Vt0: vTable, Vq1] : ((~VVAR133 = vTvalue(Vt0)) | Vq1 != VVAR133) & VConf0 = VVAR135 & VRESULT = VVAR140)) | ?[Vq1: vQuery, VVAR147: vConf, Vq1reduce: vOptConf, VVAR146: vQuery, VVAR142: vOptConf, VVAR148: vOptConf, VConf0, VVAR141: vConf, VRESULT, Vts: vTStore, Vq2: vQuery] : ((~VVAR141 = vconf(Vq1, Vts)) | (~VVAR148 = vnoConf) | (~VVAR146 = vUnion(Vq1, Vq2)) | (~VVAR142 = vreduce(VVAR141)) | (~VVAR147 = vconf(VVAR146, Vts)) | (Vq1reduce = VVAR142 & (~visSomeConf(Vq1reduce)) & (![VVAR143: vQuery, Vt10: vTable, Vq1] : ((~VVAR143 = vTvalue(Vt10)) | Vq1 != VVAR143) | ![VVAR144: vQuery, Vt20: vTable, Vq2] : ((~VVAR144 = vTvalue(Vt20)) | Vq2 != VVAR144)) & ![VVAR145: vQuery, Vt0: vTable, Vq1] : ((~VVAR145 = vTvalue(Vt0)) | Vq1 != VVAR145) & VConf0 = VVAR147 & VRESULT = VVAR148)) | ?[Vtintersection: vOptTable, VVAR153: vConf, VVAR151: vQuery, VVAR152: vQuery, Vt1: vTable, VConf0, VVAR149: vOptTable, Vt2: vTable, VVAR157: vOptConf, VVAR155: vQuery, VVAR150: vQuery, VRESULT, Vts: vTStore, VVAR154: vTable, VVAR156: vConf] : ((~VVAR151 = vTvalue(Vt2)) | (~VVAR156 = vconf(VVAR155, Vts)) | (~VVAR157 = vsomeConf(VVAR156)) | (~VVAR154 = vgetSomeTable(Vtintersection)) | (~VVAR149 = vintersect(Vt1, Vt2)) | (~VVAR153 = vconf(VVAR152, Vts)) | (~VVAR155 = vTvalue(VVAR154)) | (~VVAR152 = vIntersection(VVAR150, VVAR151)) | (~VVAR150 = vTvalue(Vt1)) | (Vtintersection = VVAR149 & visSomeTable(Vtintersection) & VConf0 = VVAR153 & VRESULT = VVAR157)) | ?[Vtintersection: vOptTable, VVAR163: vOptConf, VVAR160: vQuery, VVAR158: vOptTable, Vt1: vTable, VConf0, Vt2: vTable, VVAR162: vConf, VVAR161: vQuery, VRESULT, Vts: vTStore, VVAR159: vQuery] : ((~VVAR160 = vTvalue(Vt2)) | (~VVAR163 = vnoConf) | (~VVAR161 = vIntersection(VVAR159, VVAR160)) | (~VVAR162 = vconf(VVAR161, Vts)) | (~VVAR158 = vintersect(Vt1, Vt2)) | (~VVAR159 = vTvalue(Vt1)) | (Vtintersection = VVAR158 & (~visSomeTable(Vtintersection)) & VConf0 = VVAR162 & VRESULT = VVAR163)) | ?[VVAR172: vQuery, Vsql2reduce: vOptConf, Vt: vTable, VVAR167: vQuery, VVAR164: vConf, VVAR170: vConf, VConf0, VVAR169: vConf, VVAR174: vOptConf, VVAR171: vQuery, VVAR165: vOptConf, VVAR168: vQuery, VVAR173: vConf, VRESULT, Vts: vTStore, Vsql2: vQuery] : ((~VVAR173 = vconf(VVAR172, Vts)) | (~VVAR171 = vgetQuery(VVAR170)) | (~VVAR165 = vreduce(VVAR164)) | (~VVAR169 = vconf(VVAR168, Vts)) | (~VVAR168 = vIntersection(VVAR167, Vsql2)) | (~VVAR167 = vTvalue(Vt)) | (~VVAR172 = vIntersection(VVAR167, VVAR171)) | (~VVAR170 = vgetSomeConf(Vsql2reduce)) | (~VVAR164 = vconf(Vsql2, Vts)) | (~VVAR174 = vsomeConf(VVAR173)) | (Vsql2reduce = VVAR165 & visSomeConf(Vsql2reduce) & ![VVAR166: vQuery, Vt20: vTable, Vsql2] : ((~VVAR166 = vTvalue(Vt20)) | Vsql2 != VVAR166) & VConf0 = VVAR169 & VRESULT = VVAR174)) | ?[Vsql2reduce: vOptConf, VVAR180: vConf, Vt: vTable, VConf0, VVAR181: vOptConf, VVAR176: vOptConf, VVAR179: vQuery, VRESULT, VVAR178: vQuery, Vts: vTStore, Vsql2: vQuery, VVAR175: vConf] : ((~VVAR179 = vIntersection(VVAR178, Vsql2)) | (~VVAR181 = vnoConf) | (~VVAR178 = vTvalue(Vt)) | (~VVAR175 = vconf(Vsql2, Vts)) | (~VVAR176 = vreduce(VVAR175)) | (~VVAR180 = vconf(VVAR179, Vts)) | (Vsql2reduce = VVAR176 & (~visSomeConf(Vsql2reduce)) & ![VVAR177: vQuery, Vt20: vTable, Vsql2] : ((~VVAR177 = vTvalue(Vt20)) | Vsql2 != VVAR177) & VConf0 = VVAR180 & VRESULT = VVAR181)) | ?[VVAR190: vQuery, Vsql1reduce: vOptConf, Vsql1: vQuery, VVAR187: vQuery, VConf0, VVAR188: vConf, VVAR182: vConf, VVAR193: vOptConf, VVAR183: vOptConf, VRESULT, VVAR191: vQuery, Vts: vTStore, Vsql2: vQuery, VVAR192: vConf, VVAR189: vConf] : ((~VVAR193 = vsomeConf(VVAR192)) | (~VVAR192 = vconf(VVAR191, Vts)) | (~VVAR182 = vconf(Vsql1, Vts)) | (~VVAR187 = vIntersection(Vsql1, Vsql2)) | (~VVAR190 = vgetQuery(VVAR189)) | (~VVAR189 = vgetSomeConf(Vsql1reduce)) | (~VVAR188 = vconf(VVAR187, Vts)) | (~VVAR183 = vreduce(VVAR182)) | (~VVAR191 = vIntersection(VVAR190, Vsql2)) | (Vsql1reduce = VVAR183 & visSomeConf(Vsql1reduce) & (![VVAR184: vQuery, Vt10: vTable, Vsql1] : ((~VVAR184 = vTvalue(Vt10)) | Vsql1 != VVAR184) | ![VVAR185: vQuery, Vt20: vTable, Vsql2] : ((~VVAR185 = vTvalue(Vt20)) | Vsql2 != VVAR185)) & ![VVAR186: vQuery, Vt0: vTable, Vsql1] : ((~VVAR186 = vTvalue(Vt0)) | Vsql1 != VVAR186) & VConf0 = VVAR188 & VRESULT = VVAR193)) | ?[VVAR195: vOptConf, VVAR199: vQuery, Vsql1reduce: vOptConf, Vsql1: vQuery, VVAR200: vConf, VConf0, VVAR194: vConf, VRESULT, Vts: vTStore, Vsql2: vQuery, VVAR201: vOptConf] : ((~VVAR194 = vconf(Vsql1, Vts)) | (~VVAR201 = vnoConf) | (~VVAR195 = vreduce(VVAR194)) | (~VVAR199 = vIntersection(Vsql1, Vsql2)) | (~VVAR200 = vconf(VVAR199, Vts)) | (Vsql1reduce = VVAR195 & (~visSomeConf(Vsql1reduce)) & (![VVAR196: vQuery, Vt10: vTable, Vsql1] : ((~VVAR196 = vTvalue(Vt10)) | Vsql1 != VVAR196) | ![VVAR197: vQuery, Vt20: vTable, Vsql2] : ((~VVAR197 = vTvalue(Vt20)) | Vsql2 != VVAR197)) & ![VVAR198: vQuery, Vt0: vTable, Vsql1] : ((~VVAR198 = vTvalue(Vt0)) | Vsql1 != VVAR198) & VConf0 = VVAR200 & VRESULT = VVAR201)) | ?[VVAR204: vQuery, VVAR206: vConf, VVAR202: vOptTable, Vtdifference: vOptTable, VVAR208: vQuery, VVAR207: vTable, Vt1: vTable, VConf0, Vt2: vTable, VVAR209: vConf, VVAR210: vOptConf, VRESULT, VVAR203: vQuery, Vts: vTStore, VVAR205: vQuery] : ((~VVAR204 = vTvalue(Vt2)) | (~VVAR208 = vTvalue(VVAR207)) | (~VVAR210 = vsomeConf(VVAR209)) | (~VVAR202 = vdifference(Vt1, Vt2)) | (~VVAR209 = vconf(VVAR208, Vts)) | (~VVAR207 = vgetSomeTable(Vtdifference)) | (~VVAR205 = vDifference(VVAR203, VVAR204)) | (~VVAR206 = vconf(VVAR205, Vts)) | (~VVAR203 = vTvalue(Vt1)) | (Vtdifference = VVAR202 & visSomeTable(Vtdifference) & VConf0 = VVAR206 & VRESULT = VVAR210)) | ?[VVAR215: vConf, VVAR214: vQuery, Vtdifference: vOptTable, Vt1: vTable, VConf0, VVAR212: vQuery, Vt2: vTable, VVAR211: vOptTable, VVAR213: vQuery, VVAR216: vOptConf, VRESULT, Vts: vTStore] : ((~VVAR213 = vTvalue(Vt2)) | (~VVAR216 = vnoConf) | (~VVAR214 = vDifference(VVAR212, VVAR213)) | (~VVAR215 = vconf(VVAR214, Vts)) | (~VVAR211 = vdifference(Vt1, Vt2)) | (~VVAR212 = vTvalue(Vt1)) | (Vtdifference = VVAR211 & (~visSomeTable(Vtdifference)) & VConf0 = VVAR215 & VRESULT = VVAR216)) | ?[Vsql2reduce: vOptConf, VVAR227: vOptConf, Vt: vTable, VVAR222: vConf, VVAR220: vQuery, VConf0, VVAR225: vQuery, VVAR221: vQuery, VVAR223: vConf, VVAR224: vQuery, VRESULT, VVAR217: vConf, VVAR226: vConf, VVAR218: vOptConf, Vts: vTStore, Vsql2: vQuery] : ((~VVAR221 = vDifference(VVAR220, Vsql2)) | (~VVAR222 = vconf(VVAR221, Vts)) | (~VVAR224 = vgetQuery(VVAR223)) | (~VVAR225 = vDifference(VVAR220, VVAR224)) | (~VVAR218 = vreduce(VVAR217)) | (~VVAR220 = vTvalue(Vt)) | (~VVAR226 = vconf(VVAR225, Vts)) | (~VVAR223 = vgetSomeConf(Vsql2reduce)) | (~VVAR217 = vconf(Vsql2, Vts)) | (~VVAR227 = vsomeConf(VVAR226)) | (Vsql2reduce = VVAR218 & visSomeConf(Vsql2reduce) & ![VVAR219: vQuery, Vt20: vTable, Vsql2] : ((~VVAR219 = vTvalue(Vt20)) | Vsql2 != VVAR219) & VConf0 = VVAR222 & VRESULT = VVAR227)) | ?[Vsql2reduce: vOptConf, VVAR233: vConf, VVAR228: vConf, Vt: vTable, VVAR229: vOptConf, VConf0, VVAR234: vOptConf, VVAR231: vQuery, VVAR232: vQuery, VRESULT, Vts: vTStore, Vsql2: vQuery] : ((~VVAR234 = vnoConf) | (~VVAR231 = vTvalue(Vt)) | (~VVAR229 = vreduce(VVAR228)) | (~VVAR232 = vDifference(VVAR231, Vsql2)) | (~VVAR233 = vconf(VVAR232, Vts)) | (~VVAR228 = vconf(Vsql2, Vts)) | (Vsql2reduce = VVAR229 & (~visSomeConf(Vsql2reduce)) & ![VVAR230: vQuery, Vt20: vTable, Vsql2] : ((~VVAR230 = vTvalue(Vt20)) | Vsql2 != VVAR230) & VConf0 = VVAR233 & VRESULT = VVAR234)) | ?[VVAR236: vOptConf, VVAR240: vQuery, Vsql1reduce: vOptConf, Vsql1: vQuery, VVAR235: vConf, VConf0, VVAR241: vConf, VVAR242: vConf, VVAR245: vConf, VVAR246: vOptConf, VVAR243: vQuery, VRESULT, Vts: vTStore, Vsql2: vQuery, VVAR244: vQuery] : ((~VVAR243 = vgetQuery(VVAR242)) | (~VVAR240 = vDifference(Vsql1, Vsql2)) | (~VVAR235 = vconf(Vsql1, Vts)) | (~VVAR246 = vsomeConf(VVAR245)) | (~VVAR242 = vgetSomeConf(Vsql1reduce)) | (~VVAR236 = vreduce(VVAR235)) | (~VVAR244 = vDifference(VVAR243, Vsql2)) | (~VVAR241 = vconf(VVAR240, Vts)) | (~VVAR245 = vconf(VVAR244, Vts)) | (Vsql1reduce = VVAR236 & visSomeConf(Vsql1reduce) & (![VVAR237: vQuery, Vt10: vTable, Vsql1] : ((~VVAR237 = vTvalue(Vt10)) | Vsql1 != VVAR237) | ![VVAR238: vQuery, Vt20: vTable, Vsql2] : ((~VVAR238 = vTvalue(Vt20)) | Vsql2 != VVAR238)) & ![VVAR239: vQuery, Vt0: vTable, Vsql1] : ((~VVAR239 = vTvalue(Vt0)) | Vsql1 != VVAR239) & VConf0 = VVAR241 & VRESULT = VVAR246)) | ?[VVAR248: vOptConf, Vsql1reduce: vOptConf, Vsql1: vQuery, VConf0, VVAR253: vConf, VVAR247: vConf, VRESULT, VVAR254: vOptConf, VVAR252: vQuery, Vts: vTStore, Vsql2: vQuery] : ((~VVAR252 = vDifference(Vsql1, Vsql2)) | (~VVAR247 = vconf(Vsql1, Vts)) | (~VVAR254 = vnoConf) | (~VVAR253 = vconf(VVAR252, Vts)) | (~VVAR248 = vreduce(VVAR247)) | (Vsql1reduce = VVAR248 & (~visSomeConf(Vsql1reduce)) & (![VVAR249: vQuery, Vt10: vTable, Vsql1] : ((~VVAR249 = vTvalue(Vt10)) | Vsql1 != VVAR249) | ![VVAR250: vQuery, Vt20: vTable, Vsql2] : ((~VVAR250 = vTvalue(Vt20)) | Vsql2 != VVAR250)) & ![VVAR251: vQuery, Vt0: vTable, Vsql1] : ((~VVAR251 = vTvalue(Vt0)) | Vsql1 != VVAR251) & VConf0 = VVAR253 & VRESULT = VVAR254))))).
tff('getRaw0', axiom, ![VVAR0: vTable, Val: vAList, Vrt: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vtable(Val, Vrt) & VVAR1 = vgetRaw(VVAR0)) => VVAR1 = Vrt)).
tff('getRaw-INV', axiom, ![VVAR0: vRawTable, VTable0: vTable, VRESULT] : ((VVAR0 = vgetRaw(VTable0) & VVAR0 = VRESULT) => ?[Vrt: vRawTable, VVAR1: vTable, Val: vAList, VRESULT, VTable0] : ((~VVAR1 = vtable(Val, Vrt)) | (VTable0 = VVAR1 & VRESULT = Vrt)))).
tff('getAL0', axiom, ![VVAR0: vTable, Val: vAList, Vrt: vRawTable, VVAR1: vAList] : ((VVAR0 = vtable(Val, Vrt) & VVAR1 = vgetAL(VVAR0)) => VVAR1 = Val)).
tff('getAL-INV', axiom, ![VVAR0: vAList, VTable0: vTable, VRESULT] : ((VVAR0 = vgetAL(VTable0) & VVAR0 = VRESULT) => ?[Vrt: vRawTable, VVAR1: vTable, Val: vAList, VRESULT, VTable0] : ((~VVAR1 = vtable(Val, Vrt)) | (VTable0 = VVAR1 & VRESULT = Val)))).
tff('matchingAList0', axiom, ![VVAR0: vTType, VVAR1: vAList] : ((VVAR0 = vttempty & VVAR1 = vaempty) => vmatchingAList(VVAR0, VVAR1))).
tff('matchingAList1', axiom, ![Va1: vAName, Va2: vAName, VVAR2: vAList, VVAR1: vTType, Val: vAList, VVAR0: vCType, Vf: vFType, Vtt: vTType] : ((VVAR0 = vctype(Va1, Vf) & VVAR1 = vttcons(VVAR0, Vtt) & VVAR2 = vacons(Va2, Val)) => (vmatchingAList(VVAR1, VVAR2) <=> (Va1 = Va2 & vmatchingAList(Vtt, Val))))).
tff('matchingAList2', axiom, ![VVAR0: vTType, VVAR1: vAList, Vtt: vTType, Val: vAList] : ((VVAR0 = vttempty & VVAR1 = vaempty & (Vtt != VVAR0 | Val != VVAR1) & (![Vf0: vFType, Vtt0: vTType, Va10: vAName, VVAR2: vCType, VVAR3: vTType, Vtt] : ((~VVAR2 = vctype(Va10, Vf0)) | (~VVAR3 = vttcons(VVAR2, Vtt0)) | Vtt != VVAR3) | ![VVAR4: vAList, Va20: vAName, Val0: vAList, Val] : ((~VVAR4 = vacons(Va20, Val0)) | Val != VVAR4))) => (~vmatchingAList(Vtt, Val)))).
tff('matchingAList-true-INV', axiom, ![VVAR0: vTType, VVAR1: vAList, VTType0: vTType, VAList0: vAList] : ((VVAR0 = vttempty & VVAR1 = vaempty & vmatchingAList(VTType0, VAList0)) => ((VTType0 = VVAR0 & VAList0 = VVAR1) | ?[VAList0, Va1: vAName, VTType0, Va2: vAName, VVAR2: vCType, VVAR3: vTType, VVAR4: vAList, Val: vAList, Vf: vFType, Vtt: vTType] : ((~VVAR2 = vctype(Va1, Vf)) | (~VVAR3 = vttcons(VVAR2, Vtt)) | (~VVAR4 = vacons(Va2, Val)) | (VTType0 = VVAR3 & VAList0 = VVAR4 & (Va1 = Va2 & vmatchingAList(Vtt, Val))))))).
tff('matchingAList-false-INV', axiom, ![VTType0: vTType, VAList0: vAList] : ((~vmatchingAList(VTType0, VAList0)) => (?[VAList0, Va1: vAName, VTType0, Va2: vAName, VVAR2: vAList, VVAR1: vTType, Val: vAList, VVAR0: vCType, Vf: vFType, Vtt: vTType] : ((~VVAR0 = vctype(Va1, Vf)) | (~VVAR1 = vttcons(VVAR0, Vtt)) | (~VVAR2 = vacons(Va2, Val)) | (VTType0 = VVAR1 & VAList0 = VVAR2 & (~(Va1 = Va2 & vmatchingAList(Vtt, Val))))) | ?[VAList0, VTType0, VVAR3: vTType, VVAR4: vAList, Val, Vtt] : ((~VVAR3 = vttempty) | (~VVAR4 = vaempty) | ((Vtt != VVAR3 | Val != VVAR4) & (![Vf0: vFType, Vtt0: vTType, Va10: vAName, VVAR5: vCType, VVAR6: vTType, Vtt] : ((~VVAR5 = vctype(Va10, Vf0)) | (~VVAR6 = vttcons(VVAR5, Vtt0)) | Vtt != VVAR6) | ![VVAR7: vAList, Va20: vAName, Val0: vAList, Val] : ((~VVAR7 = vacons(Va20, Val0)) | Val != VVAR7)) & VTType0 = Vtt & VAList0 = Val))))).
tff('welltypedtable0', axiom, ![Vt: vRawTable, VVAR1: vRawType, Val: vAList, VVAR0: vTable, Vtt: vTType] : ((VVAR0 = vtable(Val, Vt) & VVAR1 = vrawType(Vtt)) => (vwelltypedtable(Vtt, VVAR0) <=> (vmatchingAList(Vtt, Val) & vwelltypedRawtable(VVAR1, Vt))))).
tff('welltypedtable-true-INV', axiom, ![VTType0: vTType, VTable0: vTable] : (vwelltypedtable(VTType0, VTable0) => ?[Vt: vRawTable, VTType0, VVAR1: vRawType, Val: vAList, VVAR0: vTable, Vtt: vTType, VTable0] : ((~VVAR0 = vtable(Val, Vt)) | (~VVAR1 = vrawType(Vtt)) | (VTType0 = Vtt & VTable0 = VVAR0 & (vmatchingAList(Vtt, Val) & vwelltypedRawtable(VVAR1, Vt)))))).
tff('welltypedtable-false-INV', axiom, ![VTType0: vTType, VTable0: vTable] : ((~vwelltypedtable(VTType0, VTable0)) => ?[Vt: vRawTable, VTType0, VVAR1: vRawType, Val: vAList, VVAR0: vTable, Vtt: vTType, VTable0] : ((~VVAR0 = vtable(Val, Vt)) | (~VVAR1 = vrawType(Vtt)) | (VTType0 = Vtt & VTable0 = VVAR0 & (~(vmatchingAList(Vtt, Val) & vwelltypedRawtable(VVAR1, Vt))))))).
tff('rawType0', axiom, ![VVAR0: vTType, VVAR1: vRawType, VVAR2: vRawType] : ((VVAR0 = vttempty & VVAR1 = vrawType(VVAR0) & VVAR2 = vrtempty) => VVAR1 = VVAR2)).
tff('rawType1', axiom, ![Va: vAName, Vft: vFType, VVAR2: vRawType, VVAR3: vRawType, VVAR4: vRawType, VVAR1: vTType, VVAR0: vCType, Vtt: vTType] : ((VVAR1 = vttcons(VVAR0, Vtt) & VVAR3 = vrawType(VVAR1) & VVAR2 = vrawType(Vtt) & VVAR0 = vctype(Va, Vft) & VVAR4 = vrtcons(Vft, VVAR2)) => VVAR3 = VVAR4)).
tff('rawType-INV', axiom, ![VTType0: vTType, VVAR2: vRawType, VVAR1: vTType, VVAR0: vRawType, VRESULT] : ((VVAR0 = vrawType(VTType0) & VVAR1 = vttempty & VVAR2 = vrtempty & VVAR0 = VRESULT) => ((VTType0 = VVAR1 & VRESULT = VVAR2) | ?[Va: vAName, VVAR5: vRawType, Vft: vFType, VTType0, VVAR3: vCType, VVAR4: vTType, VVAR6: vRawType, VRESULT, Vtt: vTType] : ((~VVAR3 = vctype(Va, Vft)) | (~VVAR4 = vttcons(VVAR3, Vtt)) | (~VVAR5 = vrawType(Vtt)) | (~VVAR6 = vrtcons(Vft, VVAR5)) | (VTType0 = VVAR4 & VRESULT = VVAR6))))).
tff('welltypedRawtable0', axiom, ![VVAR0: vRawTable, Vrt: vRawType] : (VVAR0 = vtempty => vwelltypedRawtable(Vrt, VVAR0))).
tff('welltypedRawtable1', axiom, ![VVAR0: vRawTable, Vr: vRow, Vt: vRawTable, Vrt: vRawType] : (VVAR0 = vtcons(Vr, Vt) => (vwelltypedRawtable(Vrt, VVAR0) <=> (vwelltypedRow(Vrt, Vr) & vwelltypedRawtable(Vrt, Vt))))).
tff('welltypedRawtable-true-INV', axiom, ![VRawType0: vRawType, VRawTable0: vRawTable] : (vwelltypedRawtable(VRawType0, VRawTable0) => (?[VVAR0: vRawTable, VRawType0, Vrt, VRawTable0] : ((~VVAR0 = vtempty) | (VRawType0 = Vrt & VRawTable0 = VVAR0)) | ?[Vt: vRawTable, Vrt: vRawType, VRawTable0, VRawType0, Vr: vRow, VVAR1: vRawTable] : ((~VVAR1 = vtcons(Vr, Vt)) | (VRawType0 = Vrt & VRawTable0 = VVAR1 & (vwelltypedRow(Vrt, Vr) & vwelltypedRawtable(Vrt, Vt))))))).
tff('welltypedRawtable-false-INV', axiom, ![VRawType0: vRawType, VRawTable0: vRawTable] : ((~vwelltypedRawtable(VRawType0, VRawTable0)) => ?[Vt: vRawTable, Vrt: vRawType, VRawTable0, VRawType0, Vr: vRow, VVAR0: vRawTable] : ((~VVAR0 = vtcons(Vr, Vt)) | (VRawType0 = Vrt & VRawTable0 = VVAR0 & (~(vwelltypedRow(Vrt, Vr) & vwelltypedRawtable(Vrt, Vt))))))).
tff('welltypedRow0', axiom, ![VVAR0: vRawType, VVAR1: vRow] : ((VVAR0 = vrtempty & VVAR1 = vrempty) => vwelltypedRow(VVAR0, VVAR1))).
tff('welltypedRow1', axiom, ![Vv: vFVal, Vrt: vRawType, Vft: vFType, Vr: vRow, VVAR2: vFType, VVAR1: vRow, VVAR0: vRawType] : ((VVAR0 = vrtcons(Vft, Vrt) & VVAR1 = vrcons(Vv, Vr) & VVAR2 = vfieldType(Vv)) => (vwelltypedRow(VVAR0, VVAR1) <=> (VVAR2 = Vft & vwelltypedRow(Vrt, Vr))))).
tff('welltypedRow2', axiom, ![VVAR0: vRawType, VVAR1: vRow, Vrt: vRawType, Vr: vRow] : ((VVAR0 = vrtempty & VVAR1 = vrempty & (Vrt != VVAR0 | Vr != VVAR1) & (![VVAR2: vRawType, Vft0: vFType, Vrt0: vRawType, Vrt] : ((~VVAR2 = vrtcons(Vft0, Vrt0)) | Vrt != VVAR2) | ![VVAR3: vRow, Vv0: vFVal, Vr0: vRow, Vr] : ((~VVAR3 = vrcons(Vv0, Vr0)) | Vr != VVAR3))) => (~vwelltypedRow(Vrt, Vr)))).
tff('welltypedRow-true-INV', axiom, ![VVAR0: vRawType, VVAR1: vRow, VRawType0: vRawType, VRow0: vRow] : ((VVAR0 = vrtempty & VVAR1 = vrempty & vwelltypedRow(VRawType0, VRow0)) => ((VRawType0 = VVAR0 & VRow0 = VVAR1) | ?[Vv: vFVal, VRow0, Vrt: vRawType, Vft: vFType, VRawType0, Vr: vRow, VVAR2: vRawType, VVAR3: vRow, VVAR4: vFType] : ((~VVAR2 = vrtcons(Vft, Vrt)) | (~VVAR3 = vrcons(Vv, Vr)) | (~VVAR4 = vfieldType(Vv)) | (VRawType0 = VVAR2 & VRow0 = VVAR3 & (VVAR4 = Vft & vwelltypedRow(Vrt, Vr))))))).
tff('welltypedRow-false-INV', axiom, ![VRawType0: vRawType, VRow0: vRow] : ((~vwelltypedRow(VRawType0, VRow0)) => (?[Vv: vFVal, VRow0, Vrt: vRawType, Vft: vFType, VRawType0, Vr: vRow, VVAR2: vFType, VVAR1: vRow, VVAR0: vRawType] : ((~VVAR0 = vrtcons(Vft, Vrt)) | (~VVAR1 = vrcons(Vv, Vr)) | (~VVAR2 = vfieldType(Vv)) | (VRawType0 = VVAR0 & VRow0 = VVAR1 & (~(VVAR2 = Vft & vwelltypedRow(Vrt, Vr))))) | ?[VRow0, Vrt, VRawType0, Vr, VVAR3: vRawType, VVAR4: vRow] : ((~VVAR3 = vrtempty) | (~VVAR4 = vrempty) | ((Vrt != VVAR3 | Vr != VVAR4) & (![VVAR5: vRawType, Vft0: vFType, Vrt0: vRawType, Vrt] : ((~VVAR5 = vrtcons(Vft0, Vrt0)) | Vrt != VVAR5) | ![VVAR6: vRow, Vv0: vFVal, Vr0: vRow, Vr] : ((~VVAR6 = vrcons(Vv0, Vr0)) | Vr != VVAR6)) & VRawType0 = Vrt & VRow0 = Vr))))).
tff('rowIn0', axiom, ![VVAR0: vRawTable, Vr1: vRow] : (VVAR0 = vtempty => (~vrowIn(Vr1, VVAR0)))).
tff('rowIn1', axiom, ![VVAR0: vRawTable, Vr2: vRow, Vrt: vRawTable, Vr1: vRow] : (VVAR0 = vtcons(Vr2, Vrt) => (vrowIn(Vr1, VVAR0) <=> (Vr1 = Vr2 | vrowIn(Vr1, Vrt))))).
tff('rowIn-true-INV', axiom, ![VRow0: vRow, VRawTable0: vRawTable] : (vrowIn(VRow0, VRawTable0) => ?[Vr2: vRow, Vr1: vRow, VRow0, Vrt: vRawTable, VRawTable0, VVAR0: vRawTable] : ((~VVAR0 = vtcons(Vr2, Vrt)) | (VRow0 = Vr1 & VRawTable0 = VVAR0 & (Vr1 = Vr2 | vrowIn(Vr1, Vrt)))))).
tff('rowIn-false-INV', axiom, ![VRow0: vRow, VRawTable0: vRawTable] : ((~vrowIn(VRow0, VRawTable0)) => (?[VVAR0: vRawTable, VRow0, Vr1, VRawTable0] : ((~VVAR0 = vtempty) | (VRow0 = Vr1 & VRawTable0 = VVAR0)) | ?[Vr2: vRow, Vr1: vRow, VRow0, Vrt: vRawTable, VRawTable0, VVAR1: vRawTable] : ((~VVAR1 = vtcons(Vr2, Vrt)) | (VRow0 = Vr1 & VRawTable0 = VVAR1 & (~(Vr1 = Vr2 | vrowIn(Vr1, Vrt)))))))).
tff('projectFirstRaw0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vprojectFirstRaw(VVAR0)) => VVAR1 = VVAR0)).
tff('projectFirstRaw1', axiom, ![Vrt: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRow] : ((VVAR0 = vrempty & VVAR2 = vprojectFirstRaw(Vrt) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR3 = vprojectFirstRaw(VVAR1) & VVAR4 = vtcons(VVAR0, VVAR2)) => VVAR3 = VVAR4)).
tff('projectFirstRaw2', axiom, ![Vrt: vRawTable, VVAR5: vRawTable, Vr: vRow, VVAR2: vRow, VVAR3: vRow, VVAR4: vRawTable, VVAR1: vRawTable, VVAR6: vRawTable, VVAR0: vRow, Vf: vFVal] : ((VVAR0 = vrcons(Vf, Vr) & VVAR2 = vrempty & VVAR4 = vprojectFirstRaw(Vrt) & VVAR3 = vrcons(Vf, VVAR2) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR5 = vprojectFirstRaw(VVAR1) & VVAR6 = vtcons(VVAR3, VVAR4)) => VVAR5 = VVAR6)).
tff('dropFirstColRaw0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vdropFirstColRaw(VVAR0)) => VVAR1 = VVAR0)).
tff('dropFirstColRaw1', axiom, ![Vrt: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRow] : ((VVAR0 = vrempty & VVAR1 = vtcons(VVAR0, Vrt) & VVAR2 = vdropFirstColRaw(Vrt) & VVAR4 = vtcons(VVAR0, VVAR2) & VVAR3 = vdropFirstColRaw(VVAR1)) => VVAR3 = VVAR4)).
tff('dropFirstColRaw2', axiom, ![Vrt: vRawTable, Vr: vRow, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRow, Vf: vFVal] : ((VVAR0 = vrcons(Vf, Vr) & VVAR1 = vtcons(VVAR0, Vrt) & VVAR4 = vtcons(Vr, VVAR2) & VVAR2 = vdropFirstColRaw(Vrt) & VVAR3 = vdropFirstColRaw(VVAR1)) => VVAR3 = VVAR4)).
tff('dropFirstColRaw-INV', axiom, ![VVAR0: vRawTable, VRawTable0: vRawTable, VVAR1: vRawTable, VRESULT] : ((VVAR0 = vdropFirstColRaw(VRawTable0) & VVAR1 = vtempty & VVAR0 = VRESULT) => ((VRawTable0 = VVAR1 & VRESULT = VVAR1) | ?[Vrt: vRawTable, VVAR5: vRawTable, VRawTable0, VVAR2: vRow, VVAR3: vRawTable, VVAR4: vRawTable, VRESULT] : ((~VVAR2 = vrempty) | (~VVAR3 = vtcons(VVAR2, Vrt)) | (~VVAR4 = vdropFirstColRaw(Vrt)) | (~VVAR5 = vtcons(VVAR2, VVAR4)) | (VRawTable0 = VVAR3 & VRESULT = VVAR5)) | ?[Vrt: vRawTable, VVAR7: vRawTable, VRawTable0, Vr: vRow, VVAR6: vRow, VVAR8: vRawTable, VRESULT, Vf: vFVal, VVAR9: vRawTable] : ((~VVAR6 = vrcons(Vf, Vr)) | (~VVAR7 = vtcons(VVAR6, Vrt)) | (~VVAR8 = vdropFirstColRaw(Vrt)) | (~VVAR9 = vtcons(Vr, VVAR8)) | (VRawTable0 = VVAR7 & VRESULT = VVAR9))))).
tff('isSomeRawTable0', axiom, ![VVAR0: vOptRawTable] : (VVAR0 = vnoRawTable => (~visSomeRawTable(VVAR0)))).
tff('isSomeRawTable1', axiom, ![VVAR0: vOptRawTable, Vt: vRawTable] : (VVAR0 = vsomeRawTable(Vt) => visSomeRawTable(VVAR0))).
tff('isSomeRawTable-true-INV', axiom, ![VOptRawTable0: vOptRawTable] : (visSomeRawTable(VOptRawTable0) => ?[VVAR0: vOptRawTable, Vt: vRawTable, VOptRawTable0] : ((~VVAR0 = vsomeRawTable(Vt)) | VOptRawTable0 = VVAR0))).
tff('isSomeRawTable-false-INV', axiom, ![VVAR0: vOptRawTable, VOptRawTable0: vOptRawTable] : ((VVAR0 = vnoRawTable & (~visSomeRawTable(VOptRawTable0))) => VOptRawTable0 = VVAR0)).
tff('getSomeRawTable0', axiom, ![VVAR0: vOptRawTable, Vt: vRawTable, VVAR1: vRawTable] : ((VVAR0 = vsomeRawTable(Vt) & VVAR1 = vgetSomeRawTable(VVAR0)) => VVAR1 = Vt)).
tff('attachColToFrontRaw0', axiom, ![VVAR0: vRawTable, VVAR1: vOptRawTable, VVAR2: vOptRawTable] : ((VVAR0 = vtempty & VVAR1 = vattachColToFrontRaw(VVAR0, VVAR0) & VVAR2 = vsomeRawTable(VVAR0)) => VVAR1 = VVAR2)).
tff('attachColToFrontRaw1', axiom, ![Vrt1: vRawTable, VVAR5: vRow, Vrest: vOptRawTable, VVAR7: vRawTable, Vr: vRow, VVAR2: vRow, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRow, VVAR6: vRawTable, VVAR8: vOptRawTable, VVAR0: vOptRawTable, Vf: vFVal, VVAR9: vOptRawTable, Vrt2: vRawTable] : ((VVAR5 = vrcons(Vf, Vr) & VVAR4 = vtcons(Vr, Vrt2) & VVAR1 = vrempty & VVAR6 = vgetSomeRawTable(Vrest) & VVAR2 = vrcons(Vf, VVAR1) & VVAR9 = vsomeRawTable(VVAR7) & VVAR8 = vattachColToFrontRaw(VVAR3, VVAR4) & VVAR0 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR3 = vtcons(VVAR2, Vrt1) & VVAR7 = vtcons(VVAR5, VVAR6) & Vrest = VVAR0 & visSomeRawTable(Vrest)) => VVAR8 = VVAR9)).
tff('attachColToFrontRaw2', axiom, ![Vrt1: vRawTable, VVAR5: vOptRawTable, Vrest: vOptRawTable, Vr: vRow, VVAR2: vRow, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRow, VVAR6: vOptRawTable, VVAR0: vOptRawTable, Vf: vFVal, Vrt2: vRawTable] : ((VVAR4 = vtcons(Vr, Vrt2) & VVAR1 = vrempty & VVAR2 = vrcons(Vf, VVAR1) & VVAR5 = vattachColToFrontRaw(VVAR3, VVAR4) & VVAR6 = vnoRawTable & VVAR0 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR3 = vtcons(VVAR2, Vrt1) & Vrest = VVAR0 & (~visSomeRawTable(Vrest))) => VVAR5 = VVAR6)).
tff('attachColToFrontRaw3', axiom, ![Vrt1: vRawTable, VVAR5: vOptRawTable, VVAR6: vOptRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR5 = vattachColToFrontRaw(Vrt1, Vrt2) & VVAR6 = vnoRawTable & (Vrt1 != VVAR0 | Vrt2 != VVAR0) & (![Vf0: vFVal, Vrt1, Vrt10: vRawTable, VVAR2: vRow, VVAR3: vRawTable, VVAR1: vRow] : ((~VVAR1 = vrempty) | (~VVAR2 = vrcons(Vf0, VVAR1)) | (~VVAR3 = vtcons(VVAR2, Vrt10)) | Vrt1 != VVAR3) | ![VVAR4: vRawTable, Vr0: vRow, Vrt20: vRawTable, Vrt2] : ((~VVAR4 = vtcons(Vr0, Vrt20)) | Vrt2 != VVAR4))) => VVAR5 = VVAR6)).
tff('attachColToFrontRaw-INV', axiom, ![VRawTable0: vRawTable, VRawTable1: vRawTable, VVAR2: vOptRawTable, VVAR1: vRawTable, VVAR0: vOptRawTable, VRESULT] : ((VVAR0 = vattachColToFrontRaw(VRawTable0, VRawTable1) & VVAR1 = vtempty & VVAR2 = vsomeRawTable(VVAR1) & VVAR0 = VRESULT) => ((VRawTable0 = VVAR1 & VRawTable1 = VVAR1 & VRESULT = VVAR2) | ?[Vrt1: vRawTable, VVAR5: vRow, Vrest: vOptRawTable, VVAR7: vRawTable, VRawTable0, VVAR11: vOptRawTable, VRawTable1, Vr: vRow, VVAR3: vOptRawTable, VVAR10: vRawTable, VVAR4: vRow, VVAR6: vRawTable, VVAR8: vRow, VRESULT, Vf: vFVal, VVAR9: vRawTable, Vrt2: vRawTable] : ((~VVAR8 = vrcons(Vf, Vr)) | (~VVAR5 = vrcons(Vf, VVAR4)) | (~VVAR7 = vtcons(Vr, Vrt2)) | (~VVAR4 = vrempty) | (~VVAR9 = vgetSomeRawTable(Vrest)) | (~VVAR11 = vsomeRawTable(VVAR10)) | (~VVAR10 = vtcons(VVAR8, VVAR9)) | (~VVAR6 = vtcons(VVAR5, Vrt1)) | (~VVAR3 = vattachColToFrontRaw(Vrt1, Vrt2)) | (Vrest = VVAR3 & visSomeRawTable(Vrest) & VRawTable0 = VVAR6 & VRawTable1 = VVAR7 & VRESULT = VVAR11)) | ?[VVAR17: vOptRawTable, VVAR14: vRow, Vrt1: vRawTable, Vrest: vOptRawTable, VVAR13: vRow, VRawTable0, VRawTable1, Vr: vRow, VVAR15: vRawTable, VVAR12: vOptRawTable, VRESULT, Vf: vFVal, VVAR16: vRawTable, Vrt2: vRawTable] : ((~VVAR16 = vtcons(Vr, Vrt2)) | (~VVAR13 = vrempty) | (~VVAR14 = vrcons(Vf, VVAR13)) | (~VVAR15 = vtcons(VVAR14, Vrt1)) | (~VVAR17 = vnoRawTable) | (~VVAR12 = vattachColToFrontRaw(Vrt1, Vrt2)) | (Vrest = VVAR12 & (~visSomeRawTable(Vrest)) & VRawTable0 = VVAR15 & VRawTable1 = VVAR16 & VRESULT = VVAR17)) | ?[Vrt1, VVAR23: vOptRawTable, VRawTable0, VRawTable1, VRESULT, VVAR18: vRawTable, Vrt2] : ((~VVAR18 = vtempty) | (~VVAR23 = vnoRawTable) | ((Vrt1 != VVAR18 | Vrt2 != VVAR18) & (![VVAR21: vRawTable, Vf0: vFVal, Vrt1, VVAR20: vRow, Vrt10: vRawTable, VVAR19: vRow] : ((~VVAR19 = vrempty) | (~VVAR20 = vrcons(Vf0, VVAR19)) | (~VVAR21 = vtcons(VVAR20, Vrt10)) | Vrt1 != VVAR21) | ![VVAR22: vRawTable, Vr0: vRow, Vrt20: vRawTable, Vrt2] : ((~VVAR22 = vtcons(Vr0, Vrt20)) | Vrt2 != VVAR22)) & VRawTable0 = Vrt1 & VRawTable1 = Vrt2 & VRESULT = VVAR23))))).
tff('rawUnion0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawUnion(VVAR0, Vrt2)) => VVAR1 = Vrt2)).
tff('rawUnion1', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawUnion(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = Vrt1)).
tff('rawUnion2', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vrawUnion(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR4 = vtcons(Vr1, Vurt1rt2) & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawUnion(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1) => VVAR3 = VVAR4)).
tff('rawUnion3', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2, Vrt2: vRawTable] : ((VVAR0 = vrawUnion(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawUnion(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1) => VVAR3 = Vurt1rt2)).
tff('rawUnion-INV', axiom, ![VVAR0: vRawTable, VRawTable0: vRawTable, VRawTable1: vRawTable, VRESULT] : ((VVAR0 = vrawUnion(VRawTable0, VRawTable1) & VVAR0 = VRESULT) => (?[VRawTable0, VRawTable1, VVAR1: vRawTable, VRESULT, Vrt2] : ((~VVAR1 = vtempty) | (VRawTable0 = VVAR1 & VRawTable1 = Vrt2 & VRESULT = Vrt2)) | ?[Vrt1, VRawTable0, VRawTable1, VVAR2: vRawTable, VRESULT] : ((~VVAR2 = vtempty) | (Vrt1 != VVAR2 & VRawTable0 = Vrt1 & VRawTable1 = VVAR2 & VRESULT = Vrt1)) | ?[Vr1: vRow, Vrt1: vRawTable, VVAR5: vRawTable, VRawTable0, VRawTable1, VVAR3: vRawTable, VVAR4: vRawTable, VVAR6: vRawTable, VRESULT, Vurt1rt2: vRawTable, Vrt2: vRawTable] : ((~VVAR3 = vrawUnion(Vrt1, Vrt2)) | (~VVAR4 = vtempty) | (~VVAR5 = vtcons(Vr1, Vrt1)) | (~VVAR6 = vtcons(Vr1, Vurt1rt2)) | (Vurt1rt2 = VVAR3 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR4 & VRawTable0 = VVAR5 & VRawTable1 = Vrt2 & VRESULT = VVAR6)) | ?[Vr1: vRow, Vrt1: vRawTable, VVAR7: vRawTable, VRawTable0, VRawTable1, VVAR8: vRawTable, VRESULT, Vurt1rt2, VVAR9: vRawTable, Vrt2: vRawTable] : ((~VVAR7 = vrawUnion(Vrt1, Vrt2)) | (~VVAR8 = vtempty) | (~VVAR9 = vtcons(Vr1, Vrt1)) | (Vurt1rt2 = VVAR7 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR8 & VRawTable0 = VVAR9 & VRawTable1 = Vrt2 & VRESULT = Vurt1rt2))))).
tff('rawIntersection0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawIntersection(VVAR0, Vrt2)) => VVAR1 = VVAR0)).
tff('rawIntersection1', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawIntersection(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = VVAR0)).
tff('rawIntersection2', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawIntersection(VVAR1, Vrt2) & vrowIn(Vr1, Vrt2) & Vrt2 != VVAR0) => VVAR2 = VVAR1)).
tff('rawIntersection3', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawIntersection(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR0)).
tff('rawIntersection4', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vrawIntersection(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR3 = vrawIntersection(VVAR2, Vrt2) & VVAR4 = vtcons(Vr1, Vurt1rt2) & VVAR2 = vtcons(Vr1, Vrt1) & Vurt1rt2 = VVAR0 & vrowIn(Vr1, Vrt2) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = VVAR4)).
tff('rawIntersection5', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vurt1rt2, Vrt2: vRawTable] : ((VVAR0 = vrawIntersection(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawIntersection(VVAR2, Vrt2) & Vurt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = Vurt1rt2)).
tff('rawIntersection-INV', axiom, ![VVAR0: vRawTable, VRawTable0: vRawTable, VRawTable1: vRawTable, VRESULT] : ((VVAR0 = vrawIntersection(VRawTable0, VRawTable1) & VVAR0 = VRESULT) => (?[VRawTable0, VRawTable1, VVAR1: vRawTable, VRESULT, Vrt2] : ((~VVAR1 = vtempty) | (VRawTable0 = VVAR1 & VRawTable1 = Vrt2 & VRESULT = VVAR1)) | ?[Vrt1, VRawTable0, VRawTable1, VVAR2: vRawTable, VRESULT] : ((~VVAR2 = vtempty) | (Vrt1 != VVAR2 & VRawTable0 = Vrt1 & VRawTable1 = VVAR2 & VRESULT = VVAR2)) | ?[Vr1: vRow, VRawTable0, VRawTable1, VVAR3: vRawTable, VVAR4: vRawTable, VRESULT, Vrt2: vRawTable] : ((~VVAR3 = vtempty) | (~VVAR4 = vtcons(Vr1, VVAR3)) | (vrowIn(Vr1, Vrt2) & Vrt2 != VVAR3 & VRawTable0 = VVAR4 & VRawTable1 = Vrt2 & VRESULT = VVAR4)) | ?[Vr1: vRow, VVAR5: vRawTable, VRawTable0, VRawTable1, VVAR6: vRawTable, VRESULT, Vrt2: vRawTable] : ((~VVAR5 = vtempty) | (~VVAR6 = vtcons(Vr1, VVAR5)) | ((~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR5 & VRawTable0 = VVAR6 & VRawTable1 = Vrt2 & VRESULT = VVAR5)) | ?[Vr1: vRow, Vrt1: vRawTable, VVAR7: vRawTable, VRawTable0, VRawTable1, VVAR10: vRawTable, VVAR8: vRawTable, VRESULT, Vurt1rt2: vRawTable, VVAR9: vRawTable, Vrt2: vRawTable] : ((~VVAR7 = vrawIntersection(Vrt1, Vrt2)) | (~VVAR8 = vtempty) | (~VVAR9 = vtcons(Vr1, Vrt1)) | (~VVAR10 = vtcons(Vr1, Vurt1rt2)) | (Vurt1rt2 = VVAR7 & vrowIn(Vr1, Vrt2) & Vrt2 != VVAR8 & Vrt1 != VVAR8 & VRawTable0 = VVAR9 & VRawTable1 = Vrt2 & VRESULT = VVAR10)) | ?[Vr1: vRow, Vrt1: vRawTable, VVAR13: vRawTable, VRawTable0, VVAR11: vRawTable, VRawTable1, VVAR12: vRawTable, VRESULT, Vurt1rt2, Vrt2: vRawTable] : ((~VVAR11 = vrawIntersection(Vrt1, Vrt2)) | (~VVAR12 = vtempty) | (~VVAR13 = vtcons(Vr1, Vrt1)) | (Vurt1rt2 = VVAR11 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR12 & Vrt1 != VVAR12 & VRawTable0 = VVAR13 & VRawTable1 = Vrt2 & VRESULT = Vurt1rt2))))).
tff('rawDifference0', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawDifference(VVAR0, Vrt2)) => VVAR1 = VVAR0)).
tff('rawDifference1', axiom, ![VVAR0: vRawTable, VVAR1: vRawTable, Vrt1: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vrawDifference(Vrt1, VVAR0) & Vrt1 != VVAR0) => VVAR1 = Vrt1)).
tff('rawDifference2', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawDifference(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR1)).
tff('rawDifference3', axiom, ![Vr1: vRow, VVAR2: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable] : ((VVAR0 = vtempty & VVAR1 = vtcons(Vr1, VVAR0) & VVAR2 = vrawDifference(VVAR1, Vrt2) & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR0) => VVAR2 = VVAR0)).
tff('rawDifference4', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR4: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable, Vdrt1rt2: vRawTable] : ((VVAR1 = vtempty & VVAR3 = vrawDifference(VVAR2, Vrt2) & VVAR2 = vtcons(Vr1, Vrt1) & VVAR0 = vrawDifference(Vrt1, Vrt2) & VVAR4 = vtcons(Vr1, Vdrt1rt2) & Vdrt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = VVAR4)).
tff('rawDifference5', axiom, ![Vr1: vRow, Vrt1: vRawTable, VVAR2: vRawTable, VVAR3: vRawTable, VVAR1: vRawTable, VVAR0: vRawTable, Vrt2: vRawTable, Vdrt1rt2] : ((VVAR0 = vrawDifference(Vrt1, Vrt2) & VVAR1 = vtempty & VVAR2 = vtcons(Vr1, Vrt1) & VVAR3 = vrawDifference(VVAR2, Vrt2) & Vdrt1rt2 = VVAR0 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR1 & Vrt1 != VVAR1) => VVAR3 = Vdrt1rt2)).
tff('rawDifference-INV', axiom, ![VVAR0: vRawTable, VRawTable0: vRawTable, VRawTable1: vRawTable, VRESULT] : ((VVAR0 = vrawDifference(VRawTable0, VRawTable1) & VVAR0 = VRESULT) => (?[VRawTable0, VRawTable1, VVAR1: vRawTable, VRESULT, Vrt2] : ((~VVAR1 = vtempty) | (VRawTable0 = VVAR1 & VRawTable1 = Vrt2 & VRESULT = VVAR1)) | ?[Vrt1, VRawTable0, VRawTable1, VVAR2: vRawTable, VRESULT] : ((~VVAR2 = vtempty) | (Vrt1 != VVAR2 & VRawTable0 = Vrt1 & VRawTable1 = VVAR2 & VRESULT = Vrt1)) | ?[Vr1: vRow, VRawTable0, VRawTable1, VVAR3: vRawTable, VVAR4: vRawTable, VRESULT, Vrt2: vRawTable] : ((~VVAR3 = vtempty) | (~VVAR4 = vtcons(Vr1, VVAR3)) | ((~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR3 & VRawTable0 = VVAR4 & VRawTable1 = Vrt2 & VRESULT = VVAR4)) | ?[Vr1: vRow, VVAR5: vRawTable, VRawTable0, VRawTable1, VVAR6: vRawTable, VRESULT, Vrt2: vRawTable] : ((~VVAR5 = vtempty) | (~VVAR6 = vtcons(Vr1, VVAR5)) | ((~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR5 & VRawTable0 = VVAR6 & VRawTable1 = Vrt2 & VRESULT = VVAR5)) | ?[Vr1: vRow, Vrt1: vRawTable, VVAR7: vRawTable, VRawTable0, VRawTable1, VVAR10: vRawTable, VVAR8: vRawTable, VRESULT, VVAR9: vRawTable, Vrt2: vRawTable, Vdrt1rt2: vRawTable] : ((~VVAR7 = vrawDifference(Vrt1, Vrt2)) | (~VVAR8 = vtempty) | (~VVAR9 = vtcons(Vr1, Vrt1)) | (~VVAR10 = vtcons(Vr1, Vdrt1rt2)) | (Vdrt1rt2 = VVAR7 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR8 & Vrt1 != VVAR8 & VRawTable0 = VVAR9 & VRawTable1 = Vrt2 & VRESULT = VVAR10)) | ?[Vr1: vRow, Vrt1: vRawTable, VVAR13: vRawTable, VRawTable0, VVAR11: vRawTable, VRawTable1, VVAR12: vRawTable, VRESULT, Vrt2: vRawTable, Vdrt1rt2] : ((~VVAR11 = vrawDifference(Vrt1, Vrt2)) | (~VVAR12 = vtempty) | (~VVAR13 = vtcons(Vr1, Vrt1)) | (Vdrt1rt2 = VVAR11 & (~vrowIn(Vr1, Vrt2)) & Vrt2 != VVAR12 & Vrt1 != VVAR12 & VRawTable0 = VVAR13 & VRawTable1 = Vrt2 & VRESULT = Vdrt1rt2))))).
tff('isValue0', axiom, ![VVAR0: vQuery, Vt: vTable] : (VVAR0 = vTvalue(Vt) => visValue(VVAR0))).
tff('isValue1', axiom, ![VVAR0: vQuery, Vn: vTRef] : (VVAR0 = vSelectAllFrom(Vn) => (~visValue(VVAR0)))).
tff('isValue2', axiom, ![VVAR0: vQuery, Val: vAList, Vtr: vTRef] : (VVAR0 = vSelectSomeFrom(Val, Vtr) => (~visValue(VVAR0)))).
tff('isValue3', axiom, ![VVAR0: vQuery, Vtr: vTRef, Vp: vPred] : (VVAR0 = vSelectAllFromWhere(Vtr, Vp) => (~visValue(VVAR0)))).
tff('isValue4', axiom, ![VVAR0: vQuery, Val: vAList, Vtr: vTRef, Vp: vPred] : (VVAR0 = vSelectSomeFromWhere(Val, Vtr, Vp) => (~visValue(VVAR0)))).
tff('isValue5', axiom, ![VVAR0: vQuery, Vq1: vQuery, Vq2: vQuery] : (VVAR0 = vUnion(Vq1, Vq2) => (~visValue(VVAR0)))).
tff('isValue6', axiom, ![VVAR0: vQuery, Vsql1: vQuery, Vsql2: vQuery] : (VVAR0 = vIntersection(Vsql1, Vsql2) => (~visValue(VVAR0)))).
tff('isValue7', axiom, ![VVAR0: vQuery, Vsql1: vQuery, Vsql2: vQuery] : (VVAR0 = vDifference(Vsql1, Vsql2) => (~visValue(VVAR0)))).
tff('isValue-true-INV', axiom, ![VQuery0: vQuery] : (visValue(VQuery0) => ?[VVAR0: vQuery, Vt: vTable, VQuery0] : ((~VVAR0 = vTvalue(Vt)) | VQuery0 = VVAR0))).
tff('isValue-false-INV', axiom, ![VQuery0: vQuery] : ((~visValue(VQuery0)) => (?[VVAR0: vQuery, Vn: vTRef, VQuery0] : ((~VVAR0 = vSelectAllFrom(Vn)) | VQuery0 = VVAR0) | ?[VVAR1: vQuery, Val: vAList, Vtr: vTRef, VQuery0] : ((~VVAR1 = vSelectSomeFrom(Val, Vtr)) | VQuery0 = VVAR1) | ?[VVAR2: vQuery, Vtr: vTRef, Vp: vPred, VQuery0] : ((~VVAR2 = vSelectAllFromWhere(Vtr, Vp)) | VQuery0 = VVAR2) | ?[Vp: vPred, Vtr: vTRef, VVAR3: vQuery, Val: vAList, VQuery0] : ((~VVAR3 = vSelectSomeFromWhere(Val, Vtr, Vp)) | VQuery0 = VVAR3) | ?[VVAR4: vQuery, Vq1: vQuery, Vq2: vQuery, VQuery0] : ((~VVAR4 = vUnion(Vq1, Vq2)) | VQuery0 = VVAR4) | ?[VVAR5: vQuery, Vsql1: vQuery, Vsql2: vQuery, VQuery0] : ((~VVAR5 = vIntersection(Vsql1, Vsql2)) | VQuery0 = VVAR5) | ?[VVAR6: vQuery, Vsql1: vQuery, Vsql2: vQuery, VQuery0] : ((~VVAR6 = vDifference(Vsql1, Vsql2)) | VQuery0 = VVAR6)))).
tff('isSomeTable0', axiom, ![VVAR0: vOptTable] : (VVAR0 = vnoTable => (~visSomeTable(VVAR0)))).
tff('isSomeTable1', axiom, ![VVAR0: vOptTable, Vt: vTable] : (VVAR0 = vsomeTable(Vt) => visSomeTable(VVAR0))).
tff('isSomeTable-true-INV', axiom, ![VOptTable0: vOptTable] : (visSomeTable(VOptTable0) => ?[VVAR0: vOptTable, Vt: vTable, VOptTable0] : ((~VVAR0 = vsomeTable(Vt)) | VOptTable0 = VVAR0))).
tff('isSomeTable-false-INV', axiom, ![VVAR0: vOptTable, VOptTable0: vOptTable] : ((VVAR0 = vnoTable & (~visSomeTable(VOptTable0))) => VOptTable0 = VVAR0)).
tff('getSomeTable0', axiom, ![VVAR0: vOptTable, Vt: vTable, VVAR1: vTable] : ((VVAR0 = vsomeTable(Vt) & VVAR1 = vgetSomeTable(VVAR0)) => VVAR1 = Vt)).
tff('lookupStore0', axiom, ![VVAR0: vTStore, VVAR1: vOptTable, Vn: vTName, VVAR2: vOptTable] : ((VVAR0 = vemptyStore & VVAR1 = vlookupStore(Vn, VVAR0) & VVAR2 = vnoTable) => VVAR1 = VVAR2)).
tff('lookupStore1', axiom, ![Vt: vTable, VTS: vTStore, VVAR2: vOptTable, VVAR1: vOptTable, Vm: vTName, VVAR0: vTStore, Vn: vTName] : ((VVAR0 = vbindStore(Vm, Vt, VTS) & VVAR1 = vlookupStore(Vn, VVAR0) & VVAR2 = vsomeTable(Vt) & Vn = Vm) => VVAR1 = VVAR2)).
tff('lookupStore2', axiom, ![Vt: vTable, VTS: vTStore, VVAR2: vOptTable, VVAR1: vOptTable, Vm: vTName, VVAR0: vTStore, Vn: vTName] : ((VVAR0 = vbindStore(Vm, Vt, VTS) & VVAR1 = vlookupStore(Vn, VVAR0) & VVAR2 = vlookupStore(Vn, VTS) & Vn != Vm) => VVAR1 = VVAR2)).
tff('lookupStore-INV', axiom, ![VVAR0: vOptTable, VTName0: vTName, VTStore0: vTStore, VRESULT] : ((VVAR0 = vlookupStore(VTName0, VTStore0) & VVAR0 = VRESULT) => (?[VTName0, VTStore0, VVAR2: vOptTable, VVAR1: vTStore, VRESULT, Vn] : ((~VVAR1 = vemptyStore) | (~VVAR2 = vnoTable) | (VTName0 = Vn & VTStore0 = VVAR1 & VRESULT = VVAR2)) | ?[Vt: vTable, VTName0, VTStore0, VTS: vTStore, VVAR3: vTStore, VVAR4: vOptTable, Vm: vTName, VRESULT, Vn] : ((~VVAR3 = vbindStore(Vm, Vt, VTS)) | (~VVAR4 = vsomeTable(Vt)) | (Vn = Vm & VTName0 = Vn & VTStore0 = VVAR3 & VRESULT = VVAR4)) | ?[Vt: vTable, VVAR5: vTStore, VTName0, VTStore0, VTS: vTStore, VVAR6: vOptTable, Vm: vTName, VRESULT, Vn: vTName] : ((~VVAR5 = vbindStore(Vm, Vt, VTS)) | (~VVAR6 = vlookupStore(Vn, VTS)) | (Vn != Vm & VTName0 = Vn & VTStore0 = VVAR5 & VRESULT = VVAR6))))).
tff('EQ-x1', axiom, ![VVAR0: vFVal] : (VVAR0 = vx1 => $true)).
tff('EQ-x2', axiom, ![VVAR0: vFVal] : (VVAR0 = vx2 => $true)).
tff('EQ-y1', axiom, ![VVAR0: vFVal] : (VVAR0 = vy1 => $true)).
tff('EQ-y2', axiom, ![VVAR0: vFVal] : (VVAR0 = vy2 => $true)).
tff('EQ-z1', axiom, ![VVAR0: vFVal] : (VVAR0 = vz1 => $true)).
tff('EQ-z2', axiom, ![VVAR0: vFVal] : (VVAR0 = vz2 => $true)).
tff('DIFF-x1-x2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx1 & VVAR1 = vx2) => VVAR0 != VVAR1)).
tff('DIFF-x1-y1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx1 & VVAR1 = vy1) => VVAR0 != VVAR1)).
tff('DIFF-x1-y2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx1 & VVAR1 = vy2) => VVAR0 != VVAR1)).
tff('DIFF-x1-z1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx1 & VVAR1 = vz1) => VVAR0 != VVAR1)).
tff('DIFF-x1-z2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx1 & VVAR1 = vz2) => VVAR0 != VVAR1)).
tff('DIFF-x2-y1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx2 & VVAR1 = vy1) => VVAR0 != VVAR1)).
tff('DIFF-x2-y2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx2 & VVAR1 = vy2) => VVAR0 != VVAR1)).
tff('DIFF-x2-z1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx2 & VVAR1 = vz1) => VVAR0 != VVAR1)).
tff('DIFF-x2-z2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vx2 & VVAR1 = vz2) => VVAR0 != VVAR1)).
tff('DIFF-y1-y2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vy1 & VVAR1 = vy2) => VVAR0 != VVAR1)).
tff('DIFF-y1-z1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vy1 & VVAR1 = vz1) => VVAR0 != VVAR1)).
tff('DIFF-y1-z2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vy1 & VVAR1 = vz2) => VVAR0 != VVAR1)).
tff('DIFF-y2-z1', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vy2 & VVAR1 = vz1) => VVAR0 != VVAR1)).
tff('DIFF-y2-z2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vy2 & VVAR1 = vz2) => VVAR0 != VVAR1)).
tff('DIFF-z1-z2', axiom, ![VVAR0: vFVal, VVAR1: vFVal] : ((VVAR0 = vz1 & VVAR1 = vz2) => VVAR0 != VVAR1)).
tff('EQ-TN', axiom, ![VVAR0: vTName] : (VVAR0 = vTN => $true)).
tff('EQ-A1', axiom, ![VVAR0: vAName] : (VVAR0 = vA1 => $true)).
tff('EQ-A2', axiom, ![VVAR0: vAName] : (VVAR0 = vA2 => $true)).
tff('EQ-A3', axiom, ![VVAR0: vAName] : (VVAR0 = vA3 => $true)).
tff('DIFF-A1-A2', axiom, ![VVAR0: vAName, VVAR1: vAName] : ((VVAR0 = vA1 & VVAR1 = vA2) => VVAR0 != VVAR1)).
tff('DIFF-A1-A3', axiom, ![VVAR0: vAName, VVAR1: vAName] : ((VVAR0 = vA1 & VVAR1 = vA3) => VVAR0 != VVAR1)).
tff('DIFF-A2-A3', axiom, ![VVAR0: vAName, VVAR1: vAName] : ((VVAR0 = vA2 & VVAR1 = vA3) => VVAR0 != VVAR1)).
tff('rawUnion-aux', conjecture, ![Vrtresult, VVAR17: vRow, VVAR21: vRawTable, VVAR14: vRawTable, Vrt1: vRawTable, VVAR22: vRawTable, VVAR5: vRow, VVAR20: vRawTable, VVAR7: vFVal, VVAR13: vRow, VVAR11: vRow, VVAR2: vFVal, VVAR15: vRawTable, VVAR3: vRow, VVAR10: vRow, VVAR4: vFVal, VVAR1: vRow, VVAR6: vFVal, VVAR8: vRow, VVAR0: vFVal, VVAR12: vRawTable, VVAR18: vRawTable, VVAR19: vRawTable, VVAR9: vFVal, VVAR16: vRow, Vrt2: vRawTable] : ((VVAR22 = vrawUnion(Vrt1, Vrt2) & VVAR17 = vrcons(VVAR9, VVAR16) & VVAR13 = vrcons(VVAR4, VVAR5) & VVAR2 = vy2 & VVAR8 = vrcons(VVAR6, VVAR1) & VVAR7 = vy1 & VVAR1 = vrempty & VVAR15 = vtcons(VVAR13, VVAR14) & VVAR18 = vtcons(VVAR17, VVAR12) & VVAR12 = vtempty & VVAR14 = vtcons(VVAR11, VVAR12) & VVAR6 = vz1 & VVAR11 = vrcons(VVAR9, VVAR10) & VVAR5 = vrcons(VVAR2, VVAR3) & VVAR9 = vx2 & VVAR20 = vtcons(VVAR11, VVAR19) & VVAR3 = vrcons(VVAR0, VVAR1) & VVAR21 = vtcons(VVAR13, VVAR20) & VVAR19 = vtcons(VVAR17, VVAR18) & VVAR0 = vz2 & VVAR16 = vrcons(VVAR7, VVAR3) & VVAR4 = vx1 & VVAR10 = vrcons(VVAR7, VVAR8) & Vrt1 = VVAR15 & Vrt2 = VVAR19 & Vrtresult = VVAR21) => VVAR22 = Vrtresult)).
