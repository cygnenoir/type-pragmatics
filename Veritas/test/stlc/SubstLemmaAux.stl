module stlc.SubstLemmaAux

import stlc.Syntax
import stlc.Context
import stlc.Subst
import stlc.Types


//Auxiliary lemmas for on contexts

//Proof by structural induction 

strategy T-Weak-FreeVar-abs-2-alpha-equiv {
	
	import stlc.AlphaEquivalence
	
	//generalized version of abs-1 case
	axiom
	~x != ~y
	!isFreeVar(~x, abs(~y, ~S1, ~e1))
	~C |- abs(~y, ~S1, ~e1) : ~T
	============================= T-Weak-FreeVar-abs-1-gen
	bind(~x, ~S, ~C) |- abs(~y, ~S1, ~e1) : ~T
}

goal
!isFreeVar(~x, var(~y))
~C |- var(~y) : ~T
================================ T-Weak-FreeVar-var
bind(~x, ~S, ~C) |- var(~y) : ~T

local {
	const eabs : Exp

	axiom
	!isFreeVar(~x, eabs)
	~C |- eabs : ~T
	============================== T-Weak-FreeVar-abs-IH
	bind(~x, ~S, ~C) |- eabs : ~T
	

}

local {
	const eabs : Exp

	axiom
	!isFreeVar(~x, eabs)
	~C |- eabs : ~T
	============================== T-Weak-FreeVar-abs-IH
	bind(~x, ~S, ~C) |- eabs : ~T
	
	lemma
	~x != ~y
	!isFreeVar(~x, abs(~y, ~S1, eabs))
	~C |- abs(~y, ~S1, eabs) : ~T
	============================================ T-Weak-FreeVar-abs-1
	bind(~x, ~S, ~C) |- abs(~y, ~S1, eabs) : ~T

	lemma verify-with T-Weak-FreeVar-abs-2-alpha-equiv
	~x == ~y
	!isFreeVar(~x, abs(~y, ~S1, eabs))
	~C |- abs(~y, ~S1, eabs) : ~T
	======================================== T-Weak-FreeVar-abs-2
	bind(~x, ~S, ~C) |- abs(~y, ~S1, eabs) : ~T
	
	goal
	!isFreeVar(~x, abs(~y, ~S1, eabs))
	~C |- abs(~y, ~S1, eabs) : ~T
	======================================== T-Weak-FreeVar-abs
	bind(~x, ~S, ~C) |- abs(~y, ~S1, eabs) : ~T
}

local {
	consts
		e1app : Exp
		e2app : Exp
		
	axioms
	!isFreeVar(~x, e1app)
	~C |- e1app : ~T
	=============================== T-Weak-FreeVar-app-IH1
	bind(~x, ~S, ~C) |- e1app : ~T
	
	!isFreeVar(~x, e2app)
	~C |- e2app : ~T
	=============================== T-Weak-FreeVar-app-IH2
	bind(~x, ~S, ~C) |- e2app : ~T
	
	
	goal
	!isFreeVar(~x, app(e1app, e2app))
	~C |- app(e1app, e2app) : ~T
	========================================= T-Weak-FreeVar-app
	bind(~x, ~S, ~C) |- app(e1app, e2app) : ~T
}

axiom
!isFreeVar(~x, ~e)
~C |- ~e : ~T
=========================== T-Weak-FreeVar
bind(~x, ~S, ~C) |- ~e : ~T
	

