module stlc.Subst

import stlc.Syntax
import stlc.Context
import stlc.Gensym

axiom
!isFreeVar(~x, ~e)
~C |- ~e : ~T
=========================== T-Weak-FreeVar
bind(~x, ~S, ~C) |- ~e : ~T

function
subst : Var Exp Exp -> Exp
subst(x, e, var(y)) =
	if x == y
	then e
	else var(y)
subst(x, e, app(e1, e2)) = app(subst(x, e, e1), subst(x, e, e2))
subst(x, e, abs(y, T, e1)) =
	if x == y
	then abs(y, T, e1)
	else if isFreeVar(y, e)
	     then let fresh = gensym(app(app(e, e1), var(x)))
	          in subst(x, e, abs(fresh, T, subst(y, var(fresh), e1))) 
	     else abs(y, T, subst(x, e, e1))
